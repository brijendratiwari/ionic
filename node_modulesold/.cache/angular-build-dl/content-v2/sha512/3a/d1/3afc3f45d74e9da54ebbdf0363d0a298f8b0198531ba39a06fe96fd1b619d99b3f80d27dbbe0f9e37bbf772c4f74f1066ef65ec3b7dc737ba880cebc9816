{"version":3,"sources":["webpack:///src/app/profile-menu/profile-menu.module.ts","webpack:///src/app/profile-menu/profile-menu.page.ts","webpack:///src/app/shadow-login/shadow-login.component.ts","webpack:///src/app/profile-menu/profile-menu.page.scss","webpack:///src/app/shadow-login/shadow-login.component.scss","webpack:///src/app/profile-menu/profile-menu.page.html","webpack:///src/app/shadow-login/shadow-login.component.html"],"names":["routes","path","component","ProfileMenuPage","ProfileMenuPageModule","NgModule","entryComponents","ShadowLoginComponent","imports","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","RouterModule","providers","InAppBrowser","declarations","PMEvents","router","activatedRoute","api","storage","platform","navCtrl","modalCtrl","navCntl","auth","appsFlyerAnalytics","menuType","isSaveLoginKeyPress","email","password","role","userImage","myObserver","Subscription","events","_routerProfileSub","adminEmail","isFirstLoad","localStorage","getItem","add","pipe","filter","event","NavigationEnd","subscribe","url","get","then","isKeyPressed","PetcloudApiService","res","set","userData","Number","user_type","profileStep","getUserProfileBasicInfo","getInfo","SignInWindow","backButtonEvent","unsubscribe","adminToken","emailForm","token","userType","showLoader","shadowLogin","hideLoader","success","user","authState","next","setItem","notificationToken","publish","background","BackgroundCheck","rightToWork","righttowork","animalCare","animalcare","is_verified","is_workVerified","is_animalcare","VERIFIED","isBackgroundChecked","isRightToWorkChecked","isAnimalCareChecked","err","time","Date","now","addTokenInHeader","showToast","error","imagename","data","navigateRoot","create","animated","componentProps","modal","onDidDismiss","present","showAlert","text","cssClass","handler","blah","console","warn","viewPetJob","trainingDone","paymentCardData","cardData","remove","logoutUser","logRes","analytics","user_id","id","logout_first_date","logout_last_date","app_version","getCurrentVersionCode","app_type","platformName","logoutAnalytics","clearStorage","autoLogout","clear","navigate","queryParams","title","NotificationSettingComponent","openExteralLinks","backButton","dismissModelorAlert","getUserBasicProfile","finalize","progress","progressStepper","steps","Array","fill","map","x","i","stepperMenu","profile","pet","Object","values","propertyValues","completedProfileStep","length","keys","training","payOut","listing","num","convertNumberToArray","Events","Router","ActivatedRoute","Storage","Platform","NavController","ModalController","AuthenticationService","AppsFlyerService","Component","selector","template","model","formBuilder","authService","accessToken","shadowLoginForm","group","Validators","dismiss","value","log","FormBuilder"],"mappings":"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","file":"src_app_profile-menu_profile-menu_module_ts-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\nimport {IonicModule} from '@ionic/angular';\nimport {ProfileMenuPage} from './profile-menu.page';\nimport {InAppBrowser} from '@ionic-native/in-app-browser/ngx';\nimport { ShadowLoginComponent } from '../shadow-login/shadow-login.component';\n\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ProfileMenuPage\n    }\n];\n\n@NgModule({\n    entryComponents:[ShadowLoginComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes)\n    ],\n    providers: [InAppBrowser],\n    declarations: [ProfileMenuPage,ShadowLoginComponent]\n})\nexport class ProfileMenuPageModule {\n}\n","import { PetcloudApiService } from \"./../api/petcloud-api.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Storage } from \"@ionic/storage\";\nimport { User } from \"../model/user\";\nimport { Router, NavigationEnd, ActivatedRoute } from \"@angular/router\";\nimport {\n    NavController,\n    Platform,\n    ModalController,\n} from \"@ionic/angular\";\nimport { filter, finalize } from \"rxjs/operators\";\nimport { NotificationSettingComponent } from \"../notification-setting/notification-setting.component\";\nimport { AuthenticationService } from \"../services/authentication.service\";\nimport { Subscription } from 'rxjs';\nimport { ApiResponse } from '../model/api-response';\nimport { ShadowLoginComponent } from \"../shadow-login/shadow-login.component\";\nimport { AppsFlyerService } from \"../apps-flyer.service\";\nimport { Events } from \"../events\";\n\n@Component({\n    selector: \"app-profile-menu\",\n    templateUrl: \"./profile-menu.page.html\",\n    styleUrls: [\"./profile-menu.page.scss\"],\n})\nexport class ProfileMenuPage implements OnInit {\n    public menuType: any = \"\";\n    public profileStep: number;\n    public completedProfileStep: number;\n    public userData: User;\n    isSaveLoginKeyPress = \"\";\n    email = \"\";\n    password = \"\";\n    progressStepper: any;\n    completedSteps: any;\n    role = \"\"; // admin\n\n    userImage: any = \"\";\n    private myObserver = new Subscription();\n    private events = null;\n    private _routerProfileSub = new Subscription();\n    public steps: any;\n    public adminEmail = \"\";\n    isFirstLoad: boolean = true;\n\n    constructor(\n        public PMEvents: Events,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        public api: PetcloudApiService,\n        private storage: Storage,\n        public platform: Platform,\n        protected navCtrl: NavController,\n        public modalCtrl: ModalController,\n        public navCntl: NavController,\n        public auth: AuthenticationService,\n        public appsFlyerAnalytics: AppsFlyerService,\n    ) {\n\n        this.adminEmail = localStorage.getItem(\"adminEmail\");\n        this.isFirstLoad = true;\n        this._routerProfileSub.add(\n            this.router.events\n                .pipe(filter((event) => event instanceof NavigationEnd))\n                .subscribe((event: any) => {\n\n                    if (event.url == \"/home/tabs/profile-menu\") {\n                        this.userImage = null;\n\n                        this.storage.get(\"isLoggedInKeyPressed\").then((isKeyPressed) => {\n                            this.isSaveLoginKeyPress = isKeyPressed;\n                            if (isKeyPressed) {\n                                this.storage.get(PetcloudApiService.USER).then((res: User) => {\n                                    this.email = res.email;\n                                    this.storage.set(\"email\", this.email);\n                                });\n                                this.storage.get(\"password\").then((res) => {\n                                    this.password = res;\n                                });\n                            }\n                        });\n\n                        this.storage.get(PetcloudApiService.USER).then((res: User) => {\n                            this.userData = res;\n\n                            if (res != null) {\n                                Number(this.userData.user_type) === 1\n                                    ? (this.profileStep = 5)\n                                    : Number(this.userData.user_type) === 2\n                                        ? (this.profileStep = 7)\n                                        : Number(this.userData.user_type) === 3\n                                            ? (this.profileStep = 8)\n                                            : (this.profileStep = 0);\n                            }\n                        });\n                    }\n                })\n\n        )\n\n\n        this.myObserver.add(this.router.events\n            .pipe(filter((event) => event instanceof NavigationEnd))\n            .subscribe((event: any) => {\n                if (event.url == \"/home/tabs/profile-menu\") {\n                    this.storage.get(PetcloudApiService.USER).then((res: User) => {\n                        if (res != null) {\n                            if (event.url == \"/home/tabs/profile-menu\") {\n                                this.getUserProfileBasicInfo(this.isFirstLoad);\n                                this.getInfo();\n                            }\n                        } else {\n                            this.api.SignInWindow();\n                        }\n                    });\n                }\n            }))\n        this.backButtonEvent();\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n        this.userImage = null;\n        this.myObserver.unsubscribe();;\n        this.events = null;\n        this._routerProfileSub.unsubscribe();\n    }\n\n    async switchToPreviousAccount() {\n\n        const adminToken = localStorage.getItem(\"adminToken\");\n\n        const emailForm = {\n            token: adminToken,\n            userType: \"admin\"\n        }\n\n        this.api.showLoader();\n        this.api.shadowLogin(emailForm).subscribe(\n            async (res: ApiResponse) => {\n                // hide loader in success\n                this.api.hideLoader();\n                if (res.success === true) {\n\n                    // check token is received or user data received\n                    if (res.user && res.token) {\n                        this.auth.authState.next(true);\n\n                        this.storage.set(PetcloudApiService.USERTOKEN, res.token);\n                        localStorage.setItem(\"token\", res.token);\n                        localStorage.setItem(\"notificationToken\", res.notificationToken);\n                        localStorage.setItem(\"adminEmail\", \"\"); // switch back to admin \n\n                        this.PMEvents.publish(\"user\", res.user);\n\n                        let background: any = res.user.BackgroundCheck;\n                        let rightToWork: any = res.user.righttowork;\n                        let animalCare: any = res.user.animalcare;\n\n                        let is_verified = background.is_verified;\n                        let is_workVerified = rightToWork.is_verified;\n                        let is_animalcare = animalCare.is_verified;\n\n                        is_verified == this.api.VERIFIED ? (res.user.isBackgroundChecked = true) : (res.user.isBackgroundChecked = false);\n                        is_workVerified == this.api.VERIFIED ? (res.user.isRightToWorkChecked = true) : (res.user.isRightToWorkChecked = false);\n                        is_animalcare == this.api.VERIFIED ? (res.user.isAnimalCareChecked = true) : (res.user.isAnimalCareChecked = false);\n\n                        await this.storage.set(PetcloudApiService.USER, res.user).then(\n                            (res) => {\n                            },\n                            (err) => {\n                            }\n                        );\n\n                        let user_type = await res.user.user_type;\n\n                        if (user_type == 3 || user_type == 2) {\n                            localStorage.setItem(\"menuType\", \"sitter\")\n                            this.storage.set(\"menuType\", \"sitter\").then((res) => {\n                                this.PMEvents.publish(\"menuName\", {menuType:\"sitter\", time: Date.now()})\n                            })\n                        } else if (user_type == 1) {\n                            localStorage.setItem(\"menuType\", \"owner\")\n                            this.storage.set(\"menuType\", \"owner\").then((res) => {\n\n                            })\n                        }\n\n                        await this.api.addTokenInHeader();\n                        localStorage.setItem(\"adminEmail\", \"\");\n                        this.adminEmail = \"\";\n                        this.role = \"admin\"\n                        this.getUserProfileBasicInfo(true); // Call API to update all value.\n\n                    }\n                } else {\n                    this.api.showToast(res.error, '3000', \"bottom\");\n                }\n            },\n            (err) => {\n                // hide loader in error\n                this.api.hideLoader();\n\n            }\n        );\n    }\n\n    getInfo() {\n        this.storage.get(PetcloudApiService.USER).then((res: User) => {\n            this.userData = res;\n            this.userImage = res.imagename;\n            this.role = res.role;\n            this.storage.get(\"menuType\").then((data: any) => {\n                if (data == null || data === \"\") {\n                    if (Number(this.userData.user_type) === 1) {\n                        this.menuType = \"owner\";\n                        this.storage.set(\"menuType\", this.menuType);\n                    } else if (Number(this.userData.user_type) === 2) {\n                        this.menuType = \"sitter\";\n                        this.storage.set(\"menuType\", this.menuType);\n                    } else {\n                        this.menuType = \"owner\";\n                        this.storage.set(\"menuType\", \"owner\");\n                    }\n                } else {\n                    this.menuType = data;\n                }\n            });\n        });\n    }\n\n\n\n    gotoProfileMenu() {\n        this.navCtrl.navigateRoot(\"/home/tabs/sitter-listing\");\n    }\n\n    /**\n     * Shadow Login to Switch User from other user\n     * Only Admin has access for shadow Login\n     */\n    async shadowLogin() {\n        const modal = await this.modalCtrl.create({\n            component: ShadowLoginComponent,\n            animated: true,\n            componentProps: {\n            },\n        });\n        modal.onDidDismiss().then((data: any) => {\n            this.adminEmail = localStorage.getItem(\"adminEmail\");\n            this.getUserProfileBasicInfo(this.isFirstLoad)\n\n\n        });\n        return await modal.present();\n    }\n\n    /**\n    * User can Logout from Application\n    */\n    public logoutUser() {\n\n        this.api.showAlert(\n            \"Logout\",\n            \"Are you sure to <b>Logout</b> from application?\",\n            [\n                {\n                    text: \"Cancel\",\n                    role: \"cancel\",\n                    cssClass: \"danger\",\n                    handler: (blah: any) => {\n                        console.warn(\"user canceled logout\");\n                    },\n                },\n                {\n                    text: \"OK\",\n                    handler: async () => {\n                        this.storage.set(\"menuType\", null);\n                        let viewPetJob = localStorage.getItem(\"viewPetJobs\");\n                        let trainingDone = localStorage.getItem(\n                            PetcloudApiService.TRAININGDONE\n                        );\n                        let paymentCardData = \"\";\n\n\n                        this.storage\n                            .get(PetcloudApiService.STRIPECARD)\n                            .then((cardData: any) => {\n                                if (cardData != null && cardData !== \"\") {\n                                    paymentCardData = cardData;\n                                }\n                            });\n\n                        await this.storage\n                            .remove(PetcloudApiService.USER)\n                            .then(async (res: any) => {\n                                this.api.showLoader();\n                                this.api.logoutUser().subscribe(\n                                    async (logRes: any) => {\n                                        const analytics = {\n                                            user_id:this.userData.id,\n                                            logout_first_date:logRes.logout_first_date,\n                                            logout_last_date:logRes.logout_last_date,\n                                            app_version:this.appsFlyerAnalytics.getCurrentVersionCode(),\n                                            app_type:this.appsFlyerAnalytics.platformName()\n                                        }\n                                        this.appsFlyerAnalytics.logoutAnalytics(analytics)\n                                        \n                                        this.api.hideLoader();\n                                        this.clearStorage()\n                                    },\n                                    (err: any) => {\n                                        this.clearStorage()\n                                        this.api.autoLogout(err, \"\");\n                                    }\n                                );\n\n                            });\n                    },\n                },\n            ]\n        );\n    }\n\n    async clearStorage() {\n        await this.storage\n            .remove(PetcloudApiService.USERTOKEN)\n            .then(async (res: any) => {\n                this.storage.set(\"menuType\", null);\n                let viewPetJob = localStorage.getItem(\"viewPetJobs\");\n                let trainingDone = localStorage.getItem(\n                    PetcloudApiService.TRAININGDONE\n                );\n                let paymentCardData = \"\";\n\n                this.storage\n                    .get(PetcloudApiService.STRIPECARD)\n                    .then((cardData: any) => {\n                        if (cardData != null && cardData !== \"\") {\n                            paymentCardData = cardData;\n                        }\n                    });\n\n                localStorage.setItem(\"token\", \"\")\n                this.PMEvents.publish(\"user\",null);\n                this.PMEvents.publish(\"token\",null);\n\n                this.auth.authState.next(false);\n                await localStorage.clear();\n                this.storage.set(\"isLoggedInKeyPressed\", false);\n\n                viewPetJob == \"yes\"\n                    ? localStorage.setItem(\"viewPetJobs\", \"yes\")\n                    : \"\";\n                trainingDone == \"yes\"\n                    ? localStorage.setItem(PetcloudApiService.TRAININGDONE, \"yes\")\n                    : \"\";\n\n                if (paymentCardData != null) {\n                    this.storage.set(\n                        PetcloudApiService.STRIPECARD,\n                        paymentCardData\n                    );\n                }\n\n                if (this.isSaveLoginKeyPress) {\n                    await this.storage.set(\"email\", this.email);\n                    await this.storage.set(\"password\", this.password);\n                } else {\n                    await this.storage.set(\"email\", \"\");\n                    await this.storage.set(\"password\", \"\");\n                }\n                if (this.isSaveLoginKeyPress) {\n                    this.navCtrl.navigateRoot(\"/login\");\n                } else {\n                    this.navCtrl.navigateRoot(\"/get-started\");\n                }\n\n            });\n\n    }\n\n    rspcaCMSPage() {\n        this.router.navigate([\"/cms\"], {\n            queryParams: { title: \"RSPCA Safe Property Guide\" },\n        });\n    }\n\n    async notificationSettings() {\n        const modal = await this.modalCtrl.create({\n            component: NotificationSettingComponent,\n            animated: true,\n        });\n        modal.onDidDismiss().then((data: any) => {\n        });\n        return await modal.present();\n    }\n\n    /**\n    * switch menu for pet sitter and pet owner\n    */\n    public switchMenu(menuType) {\n\n        menuType == \"owner\" ? (this.storage.set(\"menuType\", \"sitter\"),\n            this.PMEvents.publish(\"menuName\", {menuType:\"sitter\", time: Date.now()}),\n            this.menuType = \"sitter\") :\n            (this.storage.set(\"menuType\", \"owner\"),\n\n                this.PMEvents.publish(\"menuName\", { menuType:\"owner\", time:Date.now()}),\n                this.menuType = \"owner\");\n\n        this.api.showToast(\"Menu switched.\", 2000, \"bottom\");\n    }\n\n    /**\n    * Open wenpage using in app browser native plugin\n    * @param url variable for pass URL\n    */\n    public openWebpage(url: string) {\n        this.api.openExteralLinks(url)\n    }\n\n    // active hardware back button\n    backButtonEvent() {\n        this.platform.backButton.subscribe(async () => {\n            this.api.dismissModelorAlert();\n            if (this.router.url == \"/home/tabs/profile-menu\") {\n                this.navCtrl.navigateRoot(\"/home/tabs/sitter-listing\")\n            }\n        });\n    }\n\n    public getUserProfileBasicInfo(showLoader) {\n        if(showLoader) {\n            this.api.showLoader();\n        }\n        this.api.getUserBasicProfile().pipe(finalize(() => {\n            this.api.hideLoader();\n            this.isFirstLoad = false;\n        })).subscribe(async (res: ApiResponse) => {\n            if (res.success) {\n\n                this.userImage = res.user.imagename;\n                this.userData = await res.user;\n                this.storage.set(PetcloudApiService.USERBASICINFO, this.userData);\n                this.progressStepper = await this.userData.progress;\n\n                if (res.user.user_type == 1) {\n\n                    this.steps = Array(3).fill(0).map((x, i) => i);\n\n                    const stepperMenu = {\n                        profile: this.progressStepper.profile,\n                        email: this.progressStepper.email,\n                        pet: this.progressStepper.pet,\n                        // postedJobs: this.progressStepper.postedJobs,\n                        // wallet: this.progressStepper.wallet,\n                    }\n\n                    const propertyValues = await Object.values(stepperMenu);\n                    this.completedProfileStep = propertyValues.filter(x => x === 1).length;\n                    this.steps = Object.keys(stepperMenu);\n\n                } else {\n                    this.steps = Array(5).fill(0).map((x, i) => i);\n\n                    const stepperMenu = {\n                        profile: this.progressStepper.profile,\n                        email: this.progressStepper.email,\n                        training: this.progressStepper.training,\n                        payOut: this.progressStepper.payOut,\n                        listing: this.progressStepper.listing,\n                    }\n\n                    const propertyValues = await Object.values(stepperMenu);\n                    this.completedProfileStep = propertyValues.filter(x => x === 1).length;\n                    this.steps = Object.keys(stepperMenu);\n\n\n                }\n                this.storage.set(PetcloudApiService.USER, this.userData);\n                ;\n            } else {\n                this.api.showToast('Getting problem to fetch profile details', 2000, 'bottom');\n            }\n        }, (err: any) => {\n            this.api.autoLogout(err, \"\")\n\n        });\n    }\n\n    public numToArray(num: any) {\n        return this.api.convertNumberToArray(num);\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavController } from '@ionic/angular';\nimport { PetcloudApiService } from '../api/petcloud-api.service';\nimport { ApiResponse } from '../model/api-response';\nimport { Storage } from \"@ionic/storage\";\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { User } from '../model/user';\nimport { Events } from '../events';\n\n\n@Component({\n  selector: 'app-shadow-login',\n  templateUrl: './shadow-login.component.html',\n  styleUrls: ['./shadow-login.component.scss'],\n})\nexport class ShadowLoginComponent implements OnInit {\n\n  public shadowLoginForm: FormGroup;\n  public accessToken: string = \"\";\n  public adminEmail: string = \"\"\n\n  constructor(public model: ModalController, public formBuilder: FormBuilder,\n    public api: PetcloudApiService,\n    public events: Events,\n    public router: Router,\n    public authService: AuthenticationService,\n    protected storage: Storage, public navCntl: NavController) {\n    this.shadowLoginForm = this.formBuilder.group({\n      email: [\"\", [Validators.required, Validators.email]],\n    })\n  }\n\n  ngOnInit() {\n    this.getInfo();\n   }\n\n  closeModal() {\n    this.model.dismiss();\n  }\n\n  async getInfo(){\n    await this.storage.get(PetcloudApiService.USER).then(async (res: User) => {\n      if (res != null) {\n        this.accessToken = res.accessToken;\n        this.adminEmail = res.email;\n      }\n    })\n  }\n\n  async doLogin() {\n   \n    const adminToken = localStorage.getItem(\"token\");\n    await this.api.addTokenInHeader();\n\n    const emailForm = {\n        token:  this.accessToken,\n        email: this.shadowLoginForm.value.email,\n        userType:\"user\"\n    }\n    \n    this.api.showLoader();\n\n    this.api.shadowLogin(emailForm).subscribe(\n      async (res: ApiResponse) => {\n        // hide loader in success\n        this.api.hideLoader();\n        if (res.success === true) {\n\n          // check token is received or user data received\n          if (res.user && res.token) {\n            this.authService.authState.next(true);\n            localStorage.setItem(\"adminToken\", adminToken);\n            localStorage.setItem(\"adminAccessToken\", this.accessToken);\n            this.storage.set(PetcloudApiService.USERTOKEN, res.token);\n            localStorage.setItem(\"token\", res.token);\n            localStorage.setItem(\"adminEmail\",this.adminEmail);\n            localStorage.setItem(\"notificationToken\", res.notificationToken);\n\n            this.events.publish(\"user\", res.user);\n\n            let background: any = res.user.BackgroundCheck;\n            let rightToWork: any = res.user.righttowork;\n            let animalCare: any = res.user.animalcare;\n\n            let is_verified = background.is_verified;\n            let is_workVerified = rightToWork.is_verified;\n            let is_animalcare = animalCare.is_verified;\n\n            is_verified == this.api.VERIFIED ? (res.user.isBackgroundChecked = true) : (res.user.isBackgroundChecked = false);\n            is_workVerified == this.api.VERIFIED ? (res.user.isRightToWorkChecked = true) : (res.user.isRightToWorkChecked = false);\n            is_animalcare == this.api.VERIFIED ? (res.user.isAnimalCareChecked = true) : (res.user.isAnimalCareChecked = false);\n\n            await this.storage.set(PetcloudApiService.USER, res.user).then(\n              (res) => {\n                console.log(\"Response is saved\", res);\n              },\n              (err) => {\n                console.log(\"Error in storage\", err);\n              }\n            );\n\n            let user_type = await res.user.user_type;\n\n            if (user_type == 3 || user_type == 2) {\n              localStorage.setItem(\"menuType\", \"sitter\")\n              this.storage.set(\"menuType\", \"sitter\").then((res) => {\n                this.events.publish(\"menuName\", {menuType:\"sitter\", time: Date.now()})\n              })\n            } else if (user_type == 1) {\n              localStorage.setItem(\"menuType\", \"owner\")\n              this.storage.set(\"menuType\", \"owner\").then((res) => {\n\n              })\n            }\n\n            await this.api.addTokenInHeader();\n\n            this.api.showToast(\"Login Success\", 3000, \"bottom\");\n            this.model.dismiss();\n            \n\n          }\n        } else {\n          this.api.showToast(\"Unable to login!\", '3000', \"bottom\");\n        }\n      },\n      async (err) => {\n        this.api.showToast(\"Invalid Token!\", 2000, \"bottom\");\n        // hide loader in error\n        this.api.hideLoader();\n        \n      }\n    );\n  }\n}\n","export default \".profile {\\n  display: flex;\\n  align-items: center;\\n  padding: 5px 0px;\\n}\\n.profile .pic {\\n  width: 60px;\\n  height: 60px;\\n  margin-right: 15px;\\n}\\n.profile .pic ion-img {\\n  --border-radius: 50%;\\n}\\n.profile .caption h2 {\\n  font-weight: 600;\\n  font-size: 28px;\\n  color: #4a4a4a;\\n  margin: 0;\\n}\\n.profile .caption p {\\n  font-weight: 400;\\n  font-size: 14px;\\n  color: #888888;\\n  margin: 0;\\n}\\n.editprofile {\\n  padding-right: 15px;\\n}\\n.editprofile ion-img {\\n  max-width: 36px;\\n  margin-left: auto;\\n}\\n.links ion-item {\\n  --inner-padding-top: 0px;\\n  --inner-padding-bottom: 0px;\\n  --inner-padding-end: 0px;\\n  --padding-start: 0;\\n  font-size: 14px;\\n}\\n.links ion-item .theme-icon {\\n  max-width: 30px;\\n}\\n.profile-setup {\\n  margin: 1em auto 0;\\n}\\n.profile-setup ion-label {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: #FE4164;\\n  letter-spacing: 0;\\n}\\n.profile-setup .progress-steps {\\n  display: flex;\\n  flex-direction: row;\\n  width: 100%;\\n}\\n.profile-setup .progress-steps .block {\\n  width: 100%;\\n  height: 12px;\\n  background-color: rgba(204, 204, 204, 0.5);\\n  border: 2px solid #ffffff;\\n  margin: 5px 0px;\\n}\\n.profile-setup .progress-steps .block.active {\\n  background-color: #FE4164;\\n}\\n.profile-setup .progress-steps .block:first-child {\\n  border-top-left-radius: 8px;\\n  border-bottom-left-radius: 8px;\\n}\\n.profile-setup .progress-steps .block:last-child {\\n  border-top-right-radius: 8px;\\n  border-bottom-right-radius: 8px;\\n}\\n.profile-setup ion-text {\\n  font-size: 14px;\\n  color: #4A4A4A;\\n  letter-spacing: 0;\\n  border-bottom: 1px solid;\\n}\\nion-grid, ion-row, ion-col {\\n  margin: 0px;\\n  padding: 0px;\\n}\\n.account-switch-btn {\\n  --box-shadow: none;\\n  width: 100%;\\n  --border-radius: 8px;\\n  margin: 0px;\\n  text-transform: capitalize;\\n  font-size: 14px;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2ZpbGUtbWVudS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUNGO0FBQUU7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0FBRUo7QUFBSTtFQUNFLG9CQUFBO0FBRU47QUFHSTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0FBRE47QUFJSTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxTQUFBO0FBRk47QUFPQTtFQUNFLG1CQUFBO0FBSkY7QUFNRTtFQUdFLGVBQUE7RUFDQSxpQkFBQTtBQU5KO0FBV0U7RUFDRSx3QkFBQTtFQUNBLDJCQUFBO0VBQ0Esd0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFSSjtBQVVJO0VBQ0UsZUFBQTtBQVJOO0FBYUE7RUFDRSxrQkFBQTtBQVZGO0FBV0U7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsaUJBQUE7QUFUSjtBQVdFO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQVRKO0FBVUk7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLDBDQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0FBUk47QUFTTTtFQUNFLHlCQUFBO0FBUFI7QUFTTTtFQUNFLDJCQUFBO0VBQ0EsOEJBQUE7QUFQUjtBQVNNO0VBQ0UsNEJBQUE7RUFDQSwrQkFBQTtBQVBSO0FBV0U7RUFDRSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0Esd0JBQUE7QUFUSjtBQVlBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUFURjtBQVdBO0VBQ0Usa0JBQUE7RUFDRSxXQUFBO0VBQ0Esb0JBQUE7RUFDQSxXQUFBO0VBQ0EsMEJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFSSiIsImZpbGUiOiJwcm9maWxlLW1lbnUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2ZpbGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiA1cHggMHB4O1xuICAucGljIHtcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuXG4gICAgaW9uLWltZyB7XG4gICAgICAtLWJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB9XG4gIH1cblxuICAuY2FwdGlvbiB7XG4gICAgaDIge1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgICAgIGNvbG9yOiAjNGE0YTRhO1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cblxuICAgIHAge1xuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAjODg4ODg4O1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxufVxuXG4uZWRpdHByb2ZpbGUge1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuXG4gIGlvbi1pbWcge1xuICAgIC8vIGZvbnQtc2l6ZTogMjhweDtcbiAgICAvLyBjb2xvcjojNGE0YTRhO1xuICAgIG1heC13aWR0aDogMzZweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgfVxufVxuXG4ubGlua3Mge1xuICBpb24taXRlbSB7XG4gICAgLS1pbm5lci1wYWRkaW5nLXRvcDogMHB4O1xuICAgIC0taW5uZXItcGFkZGluZy1ib3R0b206IDBweDtcbiAgICAtLWlubmVyLXBhZGRpbmctZW5kOiAwcHg7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAwO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcblxuICAgIC50aGVtZS1pY29uIHtcbiAgICAgIG1heC13aWR0aDogMzBweDtcbiAgICB9XG4gIH1cbn1cblxuLnByb2ZpbGUtc2V0dXB7XG4gIG1hcmdpbjogMWVtIGF1dG8gMDtcbiAgaW9uLWxhYmVse1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGNvbG9yOiAjRkU0MTY0O1xuICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICB9XG4gIC5wcm9ncmVzcy1zdGVwc3tcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLmJsb2Nre1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwNCwyMDQsMjA0LC41KTtcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmZmZmY7XG4gICAgICBtYXJnaW46IDVweCAwcHg7XG4gICAgICAmLmFjdGl2ZXtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZFNDE2NDtcbiAgICAgIH1cbiAgICAgICY6Zmlyc3QtY2hpbGR7XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDhweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogOHB4O1xuICAgICAgfVxuICAgICAgJjpsYXN0LWNoaWxke1xuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogOHB4O1xuICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogOHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpb24tdGV4dHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICM0QTRBNEE7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkO1xuICB9ICBcbn1cbmlvbi1ncmlkLCBpb24tcm93LCBpb24tY29sIHtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbi5hY2NvdW50LXN3aXRjaC1idG4ge1xuICAtLWJveC1zaGFkb3c6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLS1ib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaGFkb3ctbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"<ion-content class=\\\"ion-padding\\\">\\n    <ion-grid>\\n        <ion-header no-shadow class=\\\"ion-no-border\\\">\\n        <ion-toolbar>\\n            <ion-row class=\\\"ion-justify-content-start ion-align-items-center\\\">\\n                <ion-col>\\n                    <div class=\\\"profile\\\">\\n                        <div routerLink=\\\"/profile-photo-upload\\\" class=\\\"pic\\\">\\n                            <ion-avatar>\\n                                <ion-img [src]=\\\"userImage == null ||userImage == '' ? \\n                            '../../assets/icon/user.png' \\n                            : userImage\\\"></ion-img>\\n                            </ion-avatar>\\n                        </div>\\n                        <div class=\\\"caption\\\">\\n                            <h2>{{userData?.first_name}}</h2>\\n                            <p>{{ (userData?.user_type == '3') ? 'Both' : (userData?.user_type == '2') ? ' Offer Pet\\n                                Care\\n                                Services' : (userData?.user_type == '1') ? ' Find Pet Care Services' : '' }}\\n                            </p>\\n                        </div>\\n                    </div>\\n                </ion-col>\\n                <ion-col class=\\\"ion-text-end\\\">\\n                    <div class=\\\"editprofile\\\">\\n                        <a routerLink=\\\"/basic-info\\\">\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/edit.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </a>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </ion-toolbar>\\n    </ion-header>\\n\\n        <ng-container *ngIf=\\\"userData?.user_type == '1'\\\">\\n            <ion-row *ngIf=\\\"completedProfileStep >= 0 && \\n                completedProfileStep != 3\\\">\\n                <ion-col>\\n                    <div class=\\\"profile-setup\\\">\\n                        <ion-label> {{3 - completedProfileStep}}\\n                            Steps Left\\n                        </ion-label>\\n                        <div class=\\\"progress-steps\\\" routerLink=\\\"/profile-setup\\\">\\n                            <div [class]=\\\"(idx + 1) <= completedProfileStep ? 'block active' : 'block'\\\"\\n                                *ngFor=\\\"let ps of steps; let idx = index\\\"></div>\\n                        </div>\\n                        <ion-text routerLink=\\\"/profile-setup\\\" style=\\\"text-decoration:underline;\\\">Show me what's left?</ion-text>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </ng-container>\\n\\n\\n\\n        <ng-container *ngIf=\\\"userData?.user_type == '2' || userData?.user_type == '3'\\\">\\n            <ion-row *ngIf=\\\"completedProfileStep >= 0 && \\n                completedProfileStep != 5\\\">\\n                <ion-col>\\n                    <div class=\\\"profile-setup\\\">\\n                        <ion-label> {{5 - completedProfileStep}}\\n                            Steps Left\\n                        </ion-label>\\n                        <div class=\\\"progress-steps\\\" routerLink=\\\"/profile-setup\\\">\\n                            <div [class]=\\\"(idx + 1) <= completedProfileStep ? 'block active' : 'block'\\\"\\n                                *ngFor=\\\"let ps of steps; let idx = index\\\"></div>\\n                        </div>\\n                        <ion-text routerLink=\\\"/profile-setup\\\">  Show my what's left?</ion-text>\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n        </ng-container>\\n\\n\\n        <ion-row>\\n            <ion-col>\\n                <ion-list class=\\\"links\\\">\\n\\n                    <ion-button \\n                        class=\\\"account-switch-btn\\\"\\n                        *ngIf=\\\"userData?.user_type === '3'\\\"\\n                        (click)=\\\"switchMenu(menuType)\\\"\\n                        fill=\\\"outline\\\"\\n                        [color]=\\\"menuType == 'owner' ? 'theme':'note-alt'\\\"\\n                    >\\n                        Switch To Pet {{ (menuType == 'owner') ? 'Sitter' : 'Owner' }}\\n                    </ion-button>\\n\\n                    <!-- <ion-item lines=\\\"none\\\" *ngIf=\\\"userData?.user_type === '3'\\\" (click)=\\\"switchMenu(menuType)\\\">\\n                        <ion-label [color]=\\\"menuType == 'owner' ? 'theme':'note-alt'\\\"> <b>Switch To\\n                                Pet {{ (menuType == 'owner') ? 'Sitter' : 'Owner' }}</b></ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/switch.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item> -->\\n                    \\n                    <ion-item *ngIf=\\\"adminEmail\\\" (click)=\\\"switchToPreviousAccount()\\\" lines=\\\"none\\\">\\n                        <ion-label color=\\\"note-alt\\\"> <b>Switch To Previous Account</b></ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/switch.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                \\n\\n                    <!-- <ion-item *ngIf=\\\"role == 'admin' && !adminEmail\\\" lines=\\\"inset\\\" (click)=\\\"shadowLogin()\\\">\\n                        <ion-label>Shadow Login</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/shadow-login.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item> -->\\n\\n\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/profile-email-verify\\\">\\n                        <ion-label>Verifications</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/verified.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" *ngIf=\\\"menuType === 'sitter'\\\"\\n                        (click)=\\\"openWebpage('https://www.petcloud.com.au/petsittercourse')\\\">\\n                        <ion-label class=\\\"ion-text-wrap\\\"> Accredited Training</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/accredited.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/notification\\\">\\n                        <ion-label>Notifications</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/notification.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n                    <ion-item lines=\\\"inset\\\" (click)=\\\"notificationSettings()\\\">\\n                        <ion-label>Notification Settings</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/notifisettings.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/wallet\\\">\\n                        <ion-label>Wallet</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/wallet.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/wallet-detail-transaction\\\">\\n                        <ion-label>Wallet Transactions</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/bank.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/addmoney\\\">\\n                        <ion-label>Add Money</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/add-money.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/invite-friend\\\">\\n                        <ion-label color=\\\"theme-sec\\\">Invite Friends (Earn $10)</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/invite.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n\\n                    <div *ngIf=\\\"menuType == 'owner'\\\">\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/pet\\\">\\n                            <ion-label>My Pets</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/mypet.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/payment-method\\\" *ngIf=\\\"completedProfileStep == 5\\\">\\n                            <ion-label>Payment Methods</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/payment.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/transaction-history\\\" *ngIf=\\\"completedProfileStep == 5\\\">\\n                            <ion-label>Transaction History</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/history.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/favourite-sitter\\\" *ngIf=\\\"completedProfileStep == 5\\\">\\n                            <ion-label>Favourite Sitters</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/heart.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n\\n\\n\\n                        <ion-item lines=\\\"inset\\\" *ngIf=\\\"completedProfileStep == 5\\\" (click)=\\\"rspcaCMSPage()\\\">\\n                            <ion-label>RSPCA Property Checklist</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/checklist.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n\\n\\n                        <ion-item lines=\\\"inset\\\" *ngIf=\\\"completedProfileStep == 5\\\" routerLink=\\\"/blog\\\">\\n                            <ion-label>Blogs</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/help.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                    </div>\\n                    <!-- pet owner end -->\\n                    <!-- Pet Sitters & Walkers start-->\\n                    <div *ngIf=\\\"menuType == 'sitter'\\\">\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/listing\\\">\\n                            <ion-label>My Listing</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/mylist.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                        \\n\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/sitter-performace\\\">\\n                            <ion-label>Performance Score</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/rocket.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/payout-prefrence\\\" *ngIf=\\\"completedProfileStep == 5\\\">\\n                            <ion-label>Payout Prefrences</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/payment.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/availability\\\" *ngIf=\\\"completedProfileStep == 5\\\">\\n                            <ion-label>Availability</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/calendar.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/transaction-history\\\" *ngIf=\\\"completedProfileStep == 5\\\">\\n                            <ion-label>Transaction History</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/history.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n\\n                        <ion-item lines=\\\"inset\\\" *ngIf=\\\"completedProfileStep == 5\\\" (click)=\\\"rspcaCMSPage()\\\">\\n                            <ion-label>RSPCA Property Checklist</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/checklist.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                        <ion-item lines=\\\"inset\\\" *ngIf=\\\"completedProfileStep == 5\\\"\\n                            (click)=\\\"openWebpage('https://www.zazzle.com.au/collections/petcloud_starter_kit_for_pet_sitters_dog_walkers-119110094190399048')\\\">\\n                            <ion-label>Merchandise</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/merchandise.svg\\\" class=\\\"theme-icon\\\">\\n                            </ion-img>\\n                        </ion-item>\\n\\n                        \\n\\n                        <ion-item lines=\\\"inset\\\" routerLink=\\\"/about-us\\\" *ngIf=\\\"completedProfileStep == 5\\\">\\n                            <ion-label>About Us</ion-label>\\n                            <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/profile.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                        </ion-item>\\n                    </div>\\n\\n                    <!-- Pet Sitters & Walkers end -->\\n                    \\n\\n                    <ion-item *ngIf=\\\"menuType == 'sitter' && (userData?.user_type === '1' || userData?.user_type === '3')\\\" lines=\\\"inset\\\"\\n                    (click)=\\\"openWebpage('https://community.petcloud.com.au/portal/en/kb/pet-carers')\\\">\\n                        <ion-label>Pet Sitter FAQs</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/info.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n                    <ion-item *ngIf=\\\"menuType == 'owner' && (userData?.user_type === '1' || userData?.user_type === '3')\\\" lines=\\\"inset\\\"\\n                        (click)=\\\"openWebpage('https://community.petcloud.com.au/portal/en/kb/pet-owners')\\\">\\n                        <ion-label>Pet Owner FAQs</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/info.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/account-setting\\\">\\n                        <ion-label>Settings</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/settings.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" *ngIf=\\\"userData?.user_type === '1' || userData?.user_type === '3'\\\"\\n                        routerLink=\\\"/guides\\\">\\n                        <ion-label>Guides for Pet Owners </ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/manual.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                    <ion-item lines=\\\"inset\\\" routerLink=\\\"/feedback\\\">\\n                        <ion-label>Report an Issue/Leave Feedback </ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/question.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n\\n                    <ion-item *ngIf=\\\"!adminEmail\\\" lines=\\\"inset\\\" (click)=\\\"logoutUser()\\\">\\n                        <ion-label>Sign Out</ion-label>\\n                        <ion-img type=\\\"image/svg+xml\\\" src=\\\"assets/icon/signout.svg\\\" class=\\\"theme-icon\\\"></ion-img>\\n                    </ion-item>\\n\\n                </ion-list>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"closeModal()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title> Shadow Login </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"shadowLoginForm\\\">\\n    <!-- Textarea in an item with a floating label -->\\n\\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\" class=\\\"ion-text-uppercase text-grey-1\\\">Email</ion-label>\\n      <ion-input class=\\\"custom-input\\\" formControlName=\\\"email\\\" id=\\\"email\\\" clearOnEdit=\\\"false\\\" placeholder=\\\"Enter Email\\\">\\n      </ion-input>\\n    </ion-item>\\n\\n    <div style=\\\"padding-left: 20px;\\\">\\n      <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n        *ngIf=\\\"(shadowLoginForm.get('email').hasError('required') && shadowLoginForm.get('email').touched || shadowLoginForm.get('email').hasError('email'))\\\">\\n        <p class=\\\"error\\\"\\n          *ngIf=\\\"(shadowLoginForm.get('email').hasError('required') && shadowLoginForm.get('email').touched || shadowLoginForm.get('email').hasError('email'))\\\">\\n          Enter correct email address format.\\n        </p>\\n      </ion-text>\\n    </div>\\n\\n  </form>\\n\\n  <div style=\\\"padding: 20px;\\\">\\n    <ion-button class=\\\"ion-no-margin\\\" expand=\\\"full\\\" color=\\\"theme\\\" [disabled]=\\\"!shadowLoginForm.valid\\\" (click)=\\\"doLogin()\\\">\\n      Login\\n    </ion-button>\\n  </div>\\n\\n</ion-content>\";"]}