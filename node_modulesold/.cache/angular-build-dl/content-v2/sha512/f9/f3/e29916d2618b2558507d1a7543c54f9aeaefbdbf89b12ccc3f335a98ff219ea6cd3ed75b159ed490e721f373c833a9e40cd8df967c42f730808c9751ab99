(self["webpackChunkpetcloud"] = self["webpackChunkpetcloud"] || []).push([["src_app_sitter-performace_sitter-performace_module_ts"],{

/***/ 79031:
/*!***************************************************************!*\
  !*** ./src/app/sitter-performace/sitter-performace.module.ts ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SitterPerformacePageModule": function() { return /* binding */ SitterPerformacePageModule; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _sitter_performace_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sitter-performace.page */ 24603);
/* harmony import */ var angular_svg_round_progressbar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! angular-svg-round-progressbar */ 4461);








const routes = [
    {
        path: '',
        component: _sitter_performace_page__WEBPACK_IMPORTED_MODULE_0__.SitterPerformacePage
    }
];
let SitterPerformacePageModule = class SitterPerformacePageModule {
};
SitterPerformacePageModule = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule,
            _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.IonicModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule.forChild(routes),
            angular_svg_round_progressbar__WEBPACK_IMPORTED_MODULE_7__.RoundProgressModule
        ],
        declarations: [_sitter_performace_page__WEBPACK_IMPORTED_MODULE_0__.SitterPerformacePage]
    })
], SitterPerformacePageModule);



/***/ }),

/***/ 24603:
/*!*************************************************************!*\
  !*** ./src/app/sitter-performace/sitter-performace.page.ts ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SitterPerformacePage": function() { return /* binding */ SitterPerformacePage; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_sitter_performace_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./sitter-performace.page.html */ 6995);
/* harmony import */ var _sitter_performace_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sitter-performace.page.scss */ 47473);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 68939);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/petcloud-api.service */ 78975);






let SitterPerformacePage = class SitterPerformacePage {
    constructor(api) {
        this.api = api;
        this.current = 70;
        this.max = 100;
        this.stroke = 8;
        this.radius = 40;
        this.semicircle = false;
        this.rounded = false;
        this.responsive = false;
        this.clockwise = true;
        this.color = '#45ccce';
        this.background = '#eaeaea';
        this.duration = 800;
        this.animation = 'easeOutCubic';
        this.animationDelay = 0;
        this.animations = [];
        this.gradient = false;
        this.realCurrent = 0;
        this.graphData = null;
        this.isGraphDataAvailable = false;
        this.isAPILoaded = false;
    }
    ngOnInit() {
    }
    ionViewDidEnter() {
        this.getRecurringOptions();
        this.getGraphData("");
    }
    /**
   * get Recurring options get Servies and Recurring Type
   */
    getRecurringOptions() {
        this.api.recurringOptions().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.finalize)(() => { })).subscribe((res) => (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            this.petCareServices = res.services;
        }), (err) => {
            this.api.autoLogout(err, "");
        });
    }
    petCareSelectedService(event) {
        this.isGraphDataAvailable = false;
        this.isAPILoaded = false;
        this.getGraphData(event.detail.value.id); // Passing pet care service Id
    }
    getGraphData(serviceId) {
        this.api.showLoader();
        this.api.dashboardPerformace({ serviceTypeId: serviceId }).subscribe((data) => {
            this.isAPILoaded = true;
            this.api.hideLoader();
            if (data.status) {
                this.isGraphDataAvailable = true;
                this.graphData = data.data;
            }
            else {
                this.isGraphDataAvailable = false;
                this.api.showToast("Performance Data not available", "3000", "bottom");
            }
        }, (err) => {
            this.isGraphDataAvailable = false;
            this.isAPILoaded = false;
            this.api.autoLogout(err, { serviceTypeId: serviceId });
        });
    }
};
SitterPerformacePage.ctorParameters = () => [
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService }
];
SitterPerformacePage = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'app-sitter-performace',
        template: _raw_loader_sitter_performace_page_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_sitter_performace_page_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], SitterPerformacePage);



/***/ }),

/***/ 4461:
/*!***********************************************************************************************!*\
  !*** ./node_modules/angular-svg-round-progressbar/fesm2020/angular-svg-round-progressbar.mjs ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ROUND_PROGRESS_DEFAULTS": function() { return /* binding */ ROUND_PROGRESS_DEFAULTS; },
/* harmony export */   "ROUND_PROGRESS_DEFAULTS_PROVIDER": function() { return /* binding */ ROUND_PROGRESS_DEFAULTS_PROVIDER; },
/* harmony export */   "RoundProgressComponent": function() { return /* binding */ RoundProgressComponent; },
/* harmony export */   "RoundProgressEase": function() { return /* binding */ RoundProgressEase; },
/* harmony export */   "RoundProgressModule": function() { return /* binding */ RoundProgressModule; },
/* harmony export */   "RoundProgressService": function() { return /* binding */ RoundProgressService; },
/* harmony export */   "RoundprogressModule": function() { return /* binding */ RoundProgressModule; }
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 38583);



const _c0 = ["path"];
const DEGREE_IN_RADIANS = Math.PI / 180;

class RoundProgressService {
  constructor(document) {
    this.supportsSvg = !!(document && document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);
    this.base = document && document.head.querySelector('base');
    this.hasPerf = typeof window !== 'undefined' && window.performance && window.performance.now && typeof window.performance.now() === 'number';
  }
  /**
   * Resolves a SVG color against the page's `base` tag.
   */


  resolveColor(color) {
    if (this.base && this.base.href) {
      const hashIndex = color.indexOf('#');

      if (hashIndex > -1 && color.indexOf('url') > -1) {
        return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);
      }
    }

    return color;
  }
  /**
   * Generates a timestamp.
   */


  getTimestamp() {
    return this.hasPerf ? window.performance.now() : Date.now();
  }
  /**
   * Generates the value for an SVG arc.
   *
   * @param current Current value.
   * @param total Maximum value.
   * @param pathRadius Radius of the SVG path.
   * @param elementRadius Radius of the SVG container.
   * @param isSemicircle Whether the element should be a semicircle.
   */


  getArc(current, total, pathRadius, elementRadius, isSemicircle = false) {
    const value = Math.max(0, Math.min(current || 0, total));
    const maxAngle = isSemicircle ? 180 : 359.9999;
    const percentage = total === 0 ? maxAngle : value / total * maxAngle;

    const start = this._polarToCartesian(elementRadius, pathRadius, percentage);

    const end = this._polarToCartesian(elementRadius, pathRadius, 0);

    const arcSweep = percentage <= 180 ? 0 : 1;
    return `M ${start} A ${pathRadius} ${pathRadius} 0 ${arcSweep} 0 ${end}`;
  }
  /**
   * Converts polar cooradinates to Cartesian.
   *
   * @param elementRadius Radius of the wrapper element.
   * @param pathRadius Radius of the path being described.
   * @param angleInDegrees Degree to be converted.
   */


  _polarToCartesian(elementRadius, pathRadius, angleInDegrees) {
    const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;
    const x = elementRadius + pathRadius * Math.cos(angleInRadians);
    const y = elementRadius + pathRadius * Math.sin(angleInRadians);
    return x + ' ' + y;
  }

}

RoundProgressService.ɵfac = function RoundProgressService_Factory(t) {
  return new (t || RoundProgressService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT, 8));
};

RoundProgressService.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: RoundProgressService,
  factory: RoundProgressService.ɵfac,
  providedIn: 'root'
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RoundProgressService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT]
      }]
    }];
  }, null);
})();

const ROUND_PROGRESS_DEFAULTS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('ROUND_PROGRESS_DEFAULTS');
const ROUND_PROGRESS_DEFAULTS_PROVIDER = {
  provide: ROUND_PROGRESS_DEFAULTS,
  useValue: {
    radius: 125,
    animation: 'easeOutCubic',
    animationDelay: null,
    duration: 500,
    stroke: 15,
    color: '#45CCCE',
    background: '#EAEAEA',
    responsive: false,
    clockwise: true,
    semicircle: false,
    rounded: false
  }
};
/**
 * TERMS OF USE - EASING EQUATIONS
 * Open source under the BSD License.
 *
 * Copyright © 2001 Robert Penner
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without modification, are permitted
 * provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice, this list of conditions
 * and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions
 * and the following disclaimer in the documentation and/or other materials provided with the
 * distribution.
 *
 * Neither the name of the author nor the names of contributors may be used to endorse or promote
 * products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

class RoundProgressEase {
  // t: current time (or position) of the neonate. This can be seconds or frames, steps,
  // seconds, ms, whatever – as long as the unit is the same as is used for the total time.
  // b: beginning value of the property.
  // c: change between the beginning and destination value of the property.
  // d: total time of the neonate.
  linearEase(t, b, c, d) {
    return c * t / d + b;
  }

  easeInQuad(t, b, c, d) {
    return c * (t /= d) * t + b;
  }

  easeOutQuad(t, b, c, d) {
    return -c * (t /= d) * (t - 2) + b;
  }

  easeInOutQuad(t, b, c, d) {
    // eslint-disable-next-line no-cond-assign
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t + b;
    }

    return -c / 2 * (--t * (t - 2) - 1) + b;
  }

  easeInCubic(t, b, c, d) {
    return c * (t /= d) * t * t + b;
  }

  easeOutCubic(t, b, c, d) {
    return c * ((t = t / d - 1) * t * t + 1) + b;
  }

  easeInOutCubic(t, b, c, d) {
    // eslint-disable-next-line no-cond-assign
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t * t + b;
    }

    return c / 2 * ((t -= 2) * t * t + 2) + b;
  }

  easeInQuart(t, b, c, d) {
    return c * (t /= d) * t * t * t + b;
  }

  easeOutQuart(t, b, c, d) {
    return -c * ((t = t / d - 1) * t * t * t - 1) + b;
  }

  easeInOutQuart(t, b, c, d) {
    // eslint-disable-next-line no-cond-assign
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t * t * t + b;
    }

    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
  }

  easeInQuint(t, b, c, d) {
    return c * (t /= d) * t * t * t * t + b;
  }

  easeOutQuint(t, b, c, d) {
    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
  }

  easeInOutQuint(t, b, c, d) {
    // eslint-disable-next-line no-cond-assign
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t * t * t * t + b;
    }

    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
  }

  easeInSine(t, b, c, d) {
    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
  }

  easeOutSine(t, b, c, d) {
    return c * Math.sin(t / d * (Math.PI / 2)) + b;
  }

  easeInOutSine(t, b, c, d) {
    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
  }

  easeInExpo(t, b, c, d) {
    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;
  }

  easeOutExpo(t, b, c, d) {
    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;
  }

  easeInOutExpo(t, b, c, d) {
    if (t === 0) {
      return b;
    }

    if (t === d) {
      return b + c;
    } // eslint-disable-next-line no-cond-assign


    if ((t /= d / 2) < 1) {
      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
    }

    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;
  }

  easeInCirc(t, b, c, d) {
    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
  }

  easeOutCirc(t, b, c, d) {
    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;
  }

  easeInOutCirc(t, b, c, d) {
    // eslint-disable-next-line no-cond-assign
    if ((t /= d / 2) < 1) {
      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
    }

    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
  }

  easeInElastic(t, b, c, d) {
    const p = d * 0.3;
    let s = 1.70158;
    let a = c;

    if (t === 0) {
      return b;
    } // eslint-disable-next-line no-cond-assign


    if ((t /= d) === 1) {
      return b + c;
    }

    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }

    return -(a * Math.pow(2, 10 * t--) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
  }

  easeOutElastic(t, b, c, d) {
    const p = d * 0.3;
    let s = 1.70158;
    let a = c;

    if (t === 0) {
      return b;
    } // eslint-disable-next-line no-cond-assign


    if ((t /= d) === 1) {
      return b + c;
    }

    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }

    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;
  }

  easeInOutElastic(t, b, c, d) {
    const p = d * (0.3 * 1.5);
    let s = 1.70158;
    let a = c;

    if (t === 0) {
      return b;
    } // eslint-disable-next-line no-cond-assign


    if ((t /= d / 2) === 2) {
      return b + c;
    }

    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }

    if (t < 1) {
      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
    }

    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;
  }

  easeInBack(t, b, c, d, s = 1.70158) {
    return c * (t /= d) * t * ((s + 1) * t - s) + b;
  }

  easeOutBack(t, b, c, d, s = 1.70158) {
    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
  }

  easeInOutBack(t, b, c, d, s = 1.70158) {
    // eslint-disable-next-line no-cond-assign
    if ((t /= d / 2) < 1) {
      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;
    }

    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
  }

  easeInBounce(t, b, c, d) {
    return c - this.easeOutBounce(d - t, 0, c, d) + b;
  }

  easeOutBounce(t, b, c, d) {
    // eslint-disable-next-line no-cond-assign
    if ((t /= d) < 1 / 2.75) {
      return c * (7.5625 * t * t) + b;
    } else if (t < 2 / 2.75) {
      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;
    } else if (t < 2.5 / 2.75) {
      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;
    }

    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;
  }

  easeInOutBounce(t, b, c, d) {
    if (t < d / 2) {
      return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;
    }

    return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;
  }

}

RoundProgressEase.ɵfac = function RoundProgressEase_Factory(t) {
  return new (t || RoundProgressEase)();
};

RoundProgressEase.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: RoundProgressEase,
  factory: RoundProgressEase.ɵfac,
  providedIn: 'root'
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RoundProgressEase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();

class RoundProgressComponent {
  constructor(service, easing, defaults, ngZone) {
    this.service = service;
    this.easing = easing;
    this.defaults = defaults;
    this.ngZone = ngZone;
    this.currentLinecap = '';
    /** Radius of the circle. */

    this.radius = this.defaults.radius;
    /** Name of the easing function to use when animating. */

    this.animation = this.defaults.animation;
    /** Time in millisconds by which to delay the animation. */

    this.animationDelay = this.defaults.animationDelay;
    /** Duration of the animation. */

    this.duration = this.defaults.duration;
    /** Width of the circle's stroke. */

    this.stroke = this.defaults.stroke;
    /** Color of the circle. */

    this.color = this.defaults.color;
    /** Background color of the circle. */

    this.background = this.defaults.background;
    /** Whether the circle should take up the width of its parent. */

    this.responsive = this.defaults.responsive;
    /** Whether the circle is filling up clockwise. */

    this.clockwise = this.defaults.clockwise;
    /** Whether to render a semicircle. */

    this.semicircle = this.defaults.semicircle;
    /** Whether the tip of the progress should be rounded off. */

    this.rounded = this.defaults.rounded;
    /** Emits when a new value has been rendered. */

    this.onRender = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.lastAnimationId = 0;
  }
  /** Animates a change in the current value. */


  _animateChange(from, to) {
    if (typeof from !== 'number') {
      from = 0;
    }

    to = this._clamp(to);
    from = this._clamp(from);
    const self = this;
    const changeInValue = to - from;
    const duration = self.duration; // Avoid firing change detection for each of the animation frames.

    self.ngZone.runOutsideAngular(() => {
      const start = () => {
        const startTime = self.service.getTimestamp();
        const id = ++self.lastAnimationId;
        requestAnimationFrame(function animation() {
          const currentTime = Math.min(self.service.getTimestamp() - startTime, duration);
          const value = self.easing[self.animation](currentTime, from, changeInValue, duration);

          self._updatePath(value);

          if (self.onRender.observers.length > 0) {
            self.onRender.emit(value);
          }

          if (id === self.lastAnimationId && currentTime < duration) {
            requestAnimationFrame(animation);
          }
        });
      };

      if (this.animationDelay > 0) {
        setTimeout(start, this.animationDelay);
      } else {
        start();
      }
    });
  }
  /** Updates the path apperance. */


  _updatePath(value) {
    if (this.path) {
      const arc = this.service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle);
      const path = this.path.nativeElement; // Remove the rounded line cap when the value is zero,
      // because SVG won't allow it to disappear completely.

      const linecap = this.rounded && value > 0 ? 'round' : ''; // This is called on each animation frame so avoid
      // updating the line cap unless it has changed.

      if (linecap !== this.currentLinecap) {
        this.currentLinecap = linecap;
        path.style.strokeLinecap = linecap;
      }

      path.setAttribute('d', arc);
    }
  }
  /** Clamps a value between the maximum and 0. */


  _clamp(value) {
    return Math.max(0, Math.min(value || 0, this.max));
  }
  /** Determines the SVG transforms for the <path> node. */


  getPathTransform() {
    const diameter = this._getDiameter();

    if (this.semicircle) {
      return this.clockwise ? `translate(0, ${diameter}) rotate(-90)` : `translate(${diameter + ',' + diameter}) rotate(90) scale(-1, 1)`;
    } else if (!this.clockwise) {
      return `scale(-1, 1) translate(-${diameter} 0)`;
    }
  }
  /** Resolves a color through the service. */


  resolveColor(color) {
    return this.service.resolveColor(color);
  }
  /** Change detection callback. */


  ngOnChanges(changes) {
    if (changes.current) {
      this._animateChange(changes.current.previousValue, changes.current.currentValue);
    } else {
      this._updatePath(this.current);
    }
  }
  /** Diameter of the circle. */


  _getDiameter() {
    return this.radius * 2;
  }
  /** The CSS height of the wrapper element. */


  _getElementHeight() {
    if (!this.responsive) {
      return (this.semicircle ? this.radius : this._getDiameter()) + 'px';
    }
  }
  /** Viewbox for the SVG element. */


  _getViewBox() {
    const diameter = this._getDiameter();

    return `0 0 ${diameter} ${this.semicircle ? this.radius : diameter}`;
  }
  /** Bottom padding for the wrapper element. */


  _getPaddingBottom() {
    if (this.responsive) {
      return this.semicircle ? '50%' : '100%';
    }
  }

}

RoundProgressComponent.ɵfac = function RoundProgressComponent_Factory(t) {
  return new (t || RoundProgressComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](RoundProgressService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](RoundProgressEase), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ROUND_PROGRESS_DEFAULTS), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone));
};

RoundProgressComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: RoundProgressComponent,
  selectors: [["round-progress"]],
  viewQuery: function RoundProgressComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 5);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.path = _t.first);
    }
  },
  hostAttrs: ["role", "progressbar"],
  hostVars: 11,
  hostBindings: function RoundProgressComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-valuemin", 0)("aria-valuemax", ctx.max)("aria-valuenow", ctx.current);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.responsive ? "" : ctx._getDiameter() + "px")("height", ctx._getElementHeight())("padding-bottom", ctx._getPaddingBottom());
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("responsive", ctx.responsive);
    }
  },
  inputs: {
    current: "current",
    max: "max",
    radius: "radius",
    animation: "animation",
    animationDelay: "animationDelay",
    duration: "duration",
    stroke: "stroke",
    color: "color",
    background: "background",
    responsive: "responsive",
    clockwise: "clockwise",
    semicircle: "semicircle",
    rounded: "rounded"
  },
  outputs: {
    onRender: "onRender"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
  decls: 4,
  vars: 13,
  consts: [["xmlns", "http://www.w3.org/2000/svg"], ["fill", "none"], ["path", ""]],
  template: function RoundProgressComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "svg", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "circle", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("viewBox", ctx._getViewBox());
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("stroke", ctx.resolveColor(ctx.background))("stroke-width", ctx.stroke);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("cx", ctx.radius)("cy", ctx.radius)("r", ctx.radius - ctx.stroke / 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("stroke-width", ctx.stroke)("stroke", ctx.resolveColor(ctx.color));
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("transform", ctx.getPathTransform());
    }
  },
  styles: ["[_nghost-%COMP%]{display:block;position:relative;overflow:hidden}.responsive[_nghost-%COMP%]{width:100%;padding-bottom:100%}.responsive[_nghost-%COMP%] > svg[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0}"],
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RoundProgressComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'round-progress',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      host: {
        role: 'progressbar',
        '[attr.aria-valuemin]': '0',
        '[attr.aria-valuemax]': 'max',
        '[attr.aria-valuenow]': 'current',
        '[style.width]': 'responsive ? "" : _getDiameter() + "px"',
        '[style.height]': '_getElementHeight()',
        '[style.padding-bottom]': '_getPaddingBottom()',
        '[class.responsive]': 'responsive'
      },
      template: "<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.viewBox]=\"_getViewBox()\">\n  <circle\n    fill=\"none\"\n    [attr.cx]=\"radius\"\n    [attr.cy]=\"radius\"\n    [attr.r]=\"radius - stroke / 2\"\n    [style.stroke]=\"resolveColor(background)\"\n    [style.stroke-width]=\"stroke\"/>\n\n  <path\n    #path\n    fill=\"none\"\n    [style.stroke-width]=\"stroke\"\n    [style.stroke]=\"resolveColor(color)\"\n    [attr.transform]=\"getPathTransform()\"/>\n</svg>\n",
      styles: [":host{display:block;position:relative;overflow:hidden}:host(.responsive){width:100%;padding-bottom:100%}:host(.responsive)>svg{position:absolute;width:100%;height:100%;top:0;left:0}\n"]
    }]
  }], function () {
    return [{
      type: RoundProgressService
    }, {
      type: RoundProgressEase
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [ROUND_PROGRESS_DEFAULTS]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }];
  }, {
    path: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['path']
    }],
    current: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    max: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    radius: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    animation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    animationDelay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    duration: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    stroke: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    color: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    background: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    responsive: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    clockwise: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    semicircle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    rounded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    onRender: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();

class RoundProgressModule {}

RoundProgressModule.ɵfac = function RoundProgressModule_Factory(t) {
  return new (t || RoundProgressModule)();
};

RoundProgressModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: RoundProgressModule,
  declarations: [RoundProgressComponent],
  exports: [RoundProgressComponent]
});
RoundProgressModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RoundProgressModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      declarations: [RoundProgressComponent],
      exports: [RoundProgressComponent],
      providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER]
    }]
  }], null, null);
})();
/**
 * Generated bundle index. Do not edit.
 */


 //# sourceMappingURL=angular-svg-round-progressbar.mjs.map

/***/ }),

/***/ 47473:
/*!***************************************************************!*\
  !*** ./src/app/sitter-performace/sitter-performace.page.scss ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".progress-wrapper {\n  position: relative;\n  display: flex;\n  justify-content: center;\n}\n\n.progress-text {\n  font-size: 13px;\n  font-weight: 600;\n  justify-content: center;\n  display: flex;\n}\n\n.progress-text-percentage {\n  top: 50%;\n  bottom: auto;\n  left: 50%;\n  transform: translateY(-50%) translateX(-50%);\n  position: absolute;\n  font-size: 13px;\n  font-weight: 600;\n}\n\n.progress-bars-container {\n  padding: 16px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.progress-bars-container .progress-text {\n  font-size: 12px;\n  padding-top: 10px;\n  color: #FE4164;\n}\n\n.progress-bars-container .big-progress-bar {\n  margin-bottom: 30px;\n  border-bottom: 1px dashed #e0e0e0;\n  padding-bottom: 30px;\n}\n\n.progress-bars-container .big-progress-bar .progress-text-percentage {\n  font-size: 40px;\n  top: calc(50% - 10px);\n}\n\n.progress-bars-container .big-progress-bar .progress-text {\n  font-size: 16px;\n  padding-top: 10px;\n  color: #FE4164;\n  top: calc(50% + 15px);\n  bottom: auto;\n  left: 50%;\n  transform: translateY(-50%) translateX(-50%);\n  position: absolute;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdHRlci1wZXJmb3JtYWNlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUE7RUFJSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLGFBQUE7QUFGSjs7QUFLQTtFQUNJLFFBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtFQUNBLDRDQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFGSjs7QUFLQTtFQUNJLGFBQUE7RUFDQSxnQ0FBQTtBQUZKOztBQUdJO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQURSOztBQUdJO0VBQ0ksbUJBQUE7RUFDQSxpQ0FBQTtFQUNBLG9CQUFBO0FBRFI7O0FBRVE7RUFDSSxlQUFBO0VBQ0EscUJBQUE7QUFBWjs7QUFFUTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxxQkFBQTtFQUNKLFlBQUE7RUFDQSxTQUFBO0VBQ0EsNENBQUE7RUFDQSxrQkFBQTtBQUFKIiwiZmlsZSI6InNpdHRlci1wZXJmb3JtYWNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9ncmVzcy13cmFwcGVye1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ucHJvZ3Jlc3MtdGV4dHtcbiAgICAvLyB0b3A6IDQwJTtcbiAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgLy8gd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2dyZXNzLXRleHQtcGVyY2VudGFnZXtcbiAgICB0b3A6IDUwJTtcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLnByb2dyZXNzLWJhcnMtY29udGFpbmVye1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG4gICAgLnByb2dyZXNzLXRleHR7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgICAgIGNvbG9yOiAjRkU0MTY0O1xuICAgIH1cbiAgICAuYmlnLXByb2dyZXNzLWJhcntcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZTBlMGUwO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbiAgICAgICAgLnByb2dyZXNzLXRleHQtcGVyY2VudGFnZXtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICAgIHRvcDogY2FsYyg1MCUgLSAxMHB4KTtcbiAgICAgICAgfVxuICAgICAgICAucHJvZ3Jlc3MtdGV4dHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgY29sb3I6ICNGRTQxNjQ7XG4gICAgICAgIHRvcDogY2FsYyg1MCUgKyAxNXB4KTtcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB9XG4gICAgfVxufSJdfQ== */");

/***/ }),

/***/ 6995:
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/sitter-performace/sitter-performace.page.html ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\" color=\"theme\">\n      <ion-back-button defaultHref=\"home/tabs/profile-menu\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Performance Score</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-item>\n    <ion-label position=\"stacked\">View Performance for Service\n      <small class=\"error\">*</small>\n    </ion-label>\n\n    <ion-select (ionChange)=\"petCareSelectedService($event)\" placeholder=\"Please select a service\"\n      interface=\"action-sheet\">\n\n      <ion-select-option class=\"fs-14\" *ngFor=\"let service of petCareServices, let idx = index\"\n        [hidden]=\"service?.enabled != '1'\" [value]=\"service\">{{service?.serviceName}}\n      </ion-select-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-card *ngIf=\"isAPILoaded == true && isGraphDataAvailable == false\" color=\"note\">\n    <ion-card-header>\n      No Data Available for Performance Score\n    </ion-card-header>\n  </ion-card>\n\n  <div class=\"progress-bars-container\" *ngIf=\"isAPILoaded == true && isGraphDataAvailable == true\">\n    <div class=\"big-progress-bar\">\n      <div class=\"progress-wrapper\">\n        <round-progress [current]=\"graphData?.repeatscore?.score\" [max]=\"100\" [stroke]=\"10\" [radius]=\"100\"\n          [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\" [clockwise]=\"clockwise\"\n          [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\" [duration]=\"duration\"\n          [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n        </round-progress>\n        <div class=\"progress-text\">\n          <ion-label>Repeat Score </ion-label>\n        </div>\n        <div class=\"progress-text-percentage\">\n          <ion-label> {{graphData?.repeatscore?.score}} </ion-label>\n        </div>\n      </div>\n     \n    </div>\n    <ion-row>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n          <round-progress [current]=\"max\" [max]=\"100\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.repeatscore?.totalclients}}</ion-label>\n          </div>\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Total Clients </ion-label>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n          <round-progress [current]=\"max\" [max]=\"100\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.repeatscore?.repeatedclients}} </ion-label>\n          </div>\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Repeat Clients </ion-label>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n          <round-progress [current]=\"graphData?.repeatscore?.repeatstays\" [max]=\"100\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.repeatscore?.repeatstays}}  </ion-label>\n          </div>\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Repeat Stays </ion-label>\n        </div>\n      </ion-col>\n    </ion-row>\n  </div>\n  <div class=\"progress-bars-container\" *ngIf=\"isAPILoaded == true && isGraphDataAvailable == true\">\n    <div class=\"big-progress-bar\">\n      <div class=\"progress-wrapper\">\n\n        <round-progress [current]=\"graphData?.bookingscore?.score\" [max]=\"max\" [stroke]=\"10\" [radius]=\"100\"\n          [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\" [clockwise]=\"clockwise\"\n          [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\" [duration]=\"duration\"\n          [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n        </round-progress>\n        <div class=\"progress-text\">\n          <ion-label>Booking Score </ion-label>\n        </div>\n        \n  \n        <div class=\"progress-text-percentage\">\n          <ion-label> {{graphData?.bookingscore?.score}} % </ion-label>\n        </div>\n  \n      </div>\n      \n    </div>\n    <ion-row>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n\n          <round-progress [current]=\"graphData?.bookingscore?.acceptRate\" [max]=\"max\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n\n          \n\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.bookingscore?.acceptRate}} % </ion-label>\n          </div>\n\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Booking Rate </ion-label>\n        </div>\n      </ion-col>\n\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n\n          <round-progress [current]=\"graphData?.bookingscore?.reviewRate\" [max]=\"max\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n\n          \n\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.bookingscore?.reviewRate}} % </ion-label>\n          </div>\n\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Review Rate </ion-label>\n        </div>\n      </ion-col>\n\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n\n          <round-progress [current]=\"max\" [max]=\"max\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n\n          \n\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.bookingscore?.responseRate}} </ion-label>\n          </div>\n\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Response Time </ion-label>\n        </div>\n      </ion-col>\n    </ion-row>\n\n  </div>\n\n</ion-content>");

/***/ })

}]);
//# sourceMappingURL=src_app_sitter-performace_sitter-performace_module_ts-es2015.js.map