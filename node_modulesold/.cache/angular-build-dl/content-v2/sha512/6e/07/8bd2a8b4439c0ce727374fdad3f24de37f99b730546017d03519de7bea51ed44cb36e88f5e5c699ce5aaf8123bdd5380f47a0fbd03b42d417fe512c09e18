(function () {
  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  (self["webpackChunkpetcloud"] = self["webpackChunkpetcloud"] || []).push([["src_app_myListing_listing-services_listing-services_module_ts"], {
    /***/
    58718:
    /*!***********************************************************************!*\
      !*** ./src/app/myListing/listing-services/listing-services.module.ts ***!
      \***********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ListingServicesPageModule": function ListingServicesPageModule() {
          return (
            /* binding */
            _ListingServicesPageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/router */
      39895);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _listing_services_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./listing-services.page */
      29846);

      var routes = [{
        path: '',
        component: _listing_services_page__WEBPACK_IMPORTED_MODULE_0__.ListingServicesPage
      }];

      var _ListingServicesPageModule = /*#__PURE__*/_createClass(function ListingServicesPageModule() {
        _classCallCheck(this, ListingServicesPageModule);
      });

      _ListingServicesPageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.IonicModule, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.ReactiveFormsModule, _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule.forChild(routes)],
        declarations: [_listing_services_page__WEBPACK_IMPORTED_MODULE_0__.ListingServicesPage],
        schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_2__.CUSTOM_ELEMENTS_SCHEMA]
      })], _ListingServicesPageModule);
      /***/
    },

    /***/
    29846:
    /*!*********************************************************************!*\
      !*** ./src/app/myListing/listing-services/listing-services.page.ts ***!
      \*********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ListingServicesPage": function ListingServicesPage() {
          return (
            /* binding */
            _ListingServicesPage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_listing_services_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./listing-services.page.html */
      46973);
      /* harmony import */


      var _listing_services_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./listing-services.page.scss */
      46015);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../../api/petcloud-api.service */
      78975);
      /* harmony import */


      var _ionic_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic/storage */
      38605);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      68939);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @ionic/angular */
      80476);

      var _ListingServicesPage = /*#__PURE__*/function () {
        function ListingServicesPage(api, storage, alertController, navCtrl) {
          _classCallCheck(this, ListingServicesPage);

          this.api = api;
          this.storage = storage;
          this.alertController = alertController;
          this.navCtrl = navCtrl;
          this.primaryPrice = [];
          this.extraPrice = [];
          this.activeService = [];
          this.travel_distance = 0;
          this.listingService = {
            listing: [],
            primaryServices: [],
            secondaryServices: []
          };
          this.showRangeGroup = null;
          this.getPricing = {
            getDogPrice: '',
            getCatPrice: '',
            getHorsePrice: '',
            getOtherPrice: '',
            getPrice: ''
          };
          this.pets = {
            sits_dogs: null,
            sits_cat: null,
            sits_horse: null,
            sits_others: null
          };
          this.custom_values = [0, 10, 100, 1000, 10000, 100000, 1000000];
          this.selectedSegment = '';
        }

        _createClass(ListingServicesPage, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            this.api.hideLoader();
            this.getListingService();
            this.selectedSegment = 'mainService';
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.api.hideLoader();
          }
          /**
           * Open and close accordian
           * @param activeBlock
           */

        }, {
          key: "openActiveBlock",
          value: function openActiveBlock(activeBlock) {
            if (this.activeService.length > 0) {
              var indx = this.activeService.indexOf(activeBlock);

              if (indx >= 0) {
                this.activeService.splice(indx, 1);
              } else {
                this.activeService.push(activeBlock);
              }
            } else {
              this.activeService.push(activeBlock);
            }
          }
          /**
           * Get Full Listing service and get full pet details for listing service.
           */

        }, {
          key: "getListingService",
          value: function getListingService() {
            var _this = this;

            this.api.showLoader();
            this.api.getListingInfo().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.finalize)(function () {
              _this.api.hideLoader();
            })).subscribe(function (res) {
              var listData = res.user;
              _this.listingService.listing = res.user.listing;
              _this.listingService.primaryServices = listData.primaryServices;
              _this.listingService.secondaryServices = listData.secondaryServices;

              _this.listingService.primaryServices.map(function (currentelement, index, arrayobj) {
                currentelement.idx = index;
              });

              _this.listingService.secondaryServices.map(function (currentelement, index, arrayobj) {
                currentelement.idx = index;
              });

              _this.compareEnableStringData(res.user.listing, _this.listingService.primaryServices, _this.listingService.secondaryServices); // make proper some string data by parsing it.
              //    this.listingService = this.parsingStringData(this.listingService, listData.listing);


              _this.selectedSegment = 'mainService';
            }, function (err) {
              _this.api.autoLogout(err, "");
            });
          }
        }, {
          key: "compareEnableStringData",
          value: function compareEnableStringData(listing, primaryServices, secondaryServices) {
            var _this2 = this;

            // For inputting user value of prices in pet
            this.listingService.primaryServices.map(function (pl) {
              pl.getDogPrice = pl.dog;
              pl.getCatPrice = pl.cat;
              pl.getHorsePrice = pl.horse;
              pl.getOtherPrice = pl.misc;
              pl.getPrice = pl.price;
              pl.originalDogPrice = pl.dog;
              pl.originalCatPrice = pl.cat;
              pl.originalHorsePrice = pl.horse;
              pl.originalOtherPirce = pl.misc;
              pl.originalPrice = pl.price;
            });
            this.listingService.secondaryServices.map(function (ss) {
              ss.getDogPrice = ss.dog;
              ss.getCatPrice = ss.cat;
              ss.getHorsePrice = ss.horse;
              ss.getOtherPrice = ss.misc;
              ss.getPrice = ss.price;
              ss.originalDogPrice = ss.dog;
              ss.originalCatPrice = ss.cat;
              ss.originalHorsePrice = ss.horse;
              ss.originalOtherPirce = ss.misc;
              ss.originalPrice = ss.price;
            }); // 0 is for not lisited 1 is for listed

            this.pets.sits_dogs = listing.sits_dogs;
            this.pets.sits_cat = listing.sits_cats;
            this.pets.sits_horse = listing.sits_horses;
            this.pets.sits_others = listing.sits_misc;
            this.travel_distance = listing.travel_distance;
            var dataSet = [{
              id: 0,
              value: 0
            }, {
              id: 1,
              value: 5
            }, {
              id: 2,
              value: 10
            }, {
              id: 3,
              value: 20
            },, {
              id: 4,
              value: 30
            }, {
              id: 5,
              value: 50
            }, {
              id: 6,
              value: 75
            }, {
              id: 7,
              value: 100
            }, {
              id: 8,
              value: 250
            }, {
              id: 9,
              value: 500
            }];

            if (listing.distance != "") {
              var distance = dataSet.filter(function (data) {
                return data.value == _this2.travel_distance;
              });

              if (distance.length) {
                this.rangeVal = distance[0].id;
              }
            } else {
              this.rangeVal = 0;
            }
          }
        }, {
          key: "rangeChange",
          value: function rangeChange(event) {
            var customValue = [{
              id: 0,
              value: 0
            }, {
              id: 1,
              value: 5
            }, {
              id: 2,
              value: 10
            }, {
              id: 3,
              value: 20
            },, {
              id: 4,
              value: 30
            }, {
              id: 5,
              value: 50
            }, {
              id: 6,
              value: 75
            }, {
              id: 7,
              value: 100
            }, {
              id: 8,
              value: 250
            }, {
              id: 9,
              value: 500
            }];
            var distance = customValue.filter(function (data) {
              return data.id == event.detail.value;
            });
            this.travel_distance = distance[0].value;
          }
        }, {
          key: "toggleRange",
          value: function toggleRange(group) {
            if (this.isRangeValueShown(group)) {
              this.showRangeGroup = null;
            } else {
              this.showRangeGroup = group;
            }
          }
        }, {
          key: "isRangeValueShown",
          value: function isRangeValueShown(group) {
            return this.showRangeGroup === group;
          }
        }, {
          key: "updateDistance",
          value: function updateDistance() {
            var _this3 = this;

            this.api.showLoader();
            var distanceUpdate = {
              travel_distance: this.travel_distance
            };
            this.api.updateDistance(distanceUpdate).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.finalize)(function () {
              _this3.api.hideLoader();
            })).subscribe(function (res) {
              if (res.success) {
                _this3.api.showToast('Services distance saved successfully', 2000, 'bottom');
              } else {
                _this3.api.showToast('Service distance not Updated try again!', 2000, 'bottom');
              }
            }, function (err) {
              _this3.api.autoLogout(err, distanceUpdate);
            });
          }
        }, {
          key: "saveService",
          value: function saveService(serviceId, serviceTypeId, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, isPrimaryService, price, flag, pricing, perPet, service) {
            var validation = {
              isDogValidated: false,
              isCatValidation: false,
              isHorseValidation: false,
              isOtherValidation: false,
              isPriceValdation: false
            };

            if (perPet == 1) {
              if (pricing[0].type == "Dog") {
                if (service.originalDogPrice != getDogPrice) {
                  if (getDogPrice < pricing[0].minPrice) {
                    validation.isDogValidated = false;
                    this.api.showToast('Minimum price for ' + pricing[0].type + ' is $ ' + pricing[0].minPrice, 200, 'bottom');
                  } else if (getDogPrice > pricing[0].maxPrice) {
                    validation.isDogValidated = false;
                    this.api.showToast('Oops, that number is too high for ' + pricing[0].type, 200, 'bottom');
                  } else {
                    validation.isDogValidated = true;
                    this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                  }
                } else {
                  // Price is Same..
                  validation.isDogValidated = true;
                  this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                }
              }

              if (pricing[1].type == "Cat") {
                if (service.originalCatPrice != getCatPrice) {
                  if (getCatPrice < pricing[1].minPrice) {
                    validation.isCatValidation = false;
                    this.api.showToast('Minimum price for ' + pricing[1].type + ' is $ ' + pricing[1].minPrice, 200, 'bottom');
                  } else if (getCatPrice > pricing[1].maxPrice) {
                    validation.isCatValidation = false;
                    this.api.showToast('Oops, that number is too high for ' + pricing[1].type, 200, 'bottom');
                  } else {
                    validation.isCatValidation = true;
                    this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                  }
                } else {
                  validation.isCatValidation = true;
                  this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                }
              }

              if (pricing[2].type == "Horse") {
                if (service.originalHorsePrice != getHorsePrice) {
                  if (getHorsePrice < pricing[2].minPrice) {
                    validation.isHorseValidation = false;
                    this.api.showToast('Minimum price for ' + pricing[2].type + ' is $ ' + pricing[2].minPrice, 200, 'bottom');
                  } else if (getHorsePrice > pricing[2].maxPrice) {
                    validation.isHorseValidation = false;
                    this.api.showToast('Oops, that number is too high for ' + pricing[2].type, 200, 'bottom');
                  } else {
                    validation.isHorseValidation = true;
                    this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                  }
                } else {
                  validation.isHorseValidation = true;
                  this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                }
              }

              if (pricing[3].type == "Other") {
                if (service.originalOtherPirce != getOtherPrice) {
                  if (getOtherPrice < pricing[3].minPrice) {
                    validation.isOtherValidation = false;
                    this.api.showToast('Minimum price for ' + pricing[3].type + ' is $ ' + pricing[3].minPrice, 200, 'bottom');
                  } else if (getOtherPrice > pricing[3].maxPrice) {
                    validation.isOtherValidation = false;
                    this.api.showToast('Oops, that number is too high for ' + pricing[3].type, 200, 'bottom');
                  } else {
                    validation.isOtherValidation = true;
                    this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                  }
                } else {
                  validation.isOtherValidation = true;
                  this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                }
              } else {
                this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
              }
            } else if (perPet == 0) {
              if (service.originalPrice != getPrice) {
                if (pricing[4].type == "Price") {
                  if (getPrice < pricing[4].minPrice) {
                    validation.isPriceValdation = false;
                    this.api.showToast('Minimum price for ' + pricing[4].type + ' is $ ' + pricing[4].minPrice, 200, 'bottom');
                  } else if (getPrice > pricing[4].maxPrice) {
                    validation.isPriceValdation = false;
                    this.api.showToast('Oops, that number is too high for ' + pricing[4].type, 200, 'bottom');
                  } else {
                    validation.isPriceValdation = true;
                    this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                  }
                } else {
                  validation.isPriceValdation = true;
                  this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
                }
              } else {
                this.saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet);
              }
            }
          }
        }, {
          key: "saveListingService",
          value: function saveListingService(serviceId, serviceTypeId, flag, getDogPrice, getCatPrice, getHorsePrice, getOtherPrice, getPrice, validation, perPet) {
            var _this4 = this;

            if (validation.isDogValidated && validation.isCatValidation && validation.isHorseValidation && validation.isOtherValidation && perPet == 1) {
              this.api.showLoader();
              serviceId == null ? serviceId = "" : serviceId;
              serviceTypeId == null ? serviceTypeId == "" : serviceTypeId;
              var serviceForm = {
                id: serviceId,
                serviceTypeId: serviceTypeId,
                isPrimaryService: flag,
                dog: getDogPrice,
                cat: getCatPrice,
                horse: getHorsePrice,
                misc: getOtherPrice,
                price: getPrice
              };
              var finalServiceFrm = {
                ServiceForm: serviceForm
              };
              this.api.updateListingService(serviceId, finalServiceFrm).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.finalize)(function () {
                _this4.api.hideLoader();
              })).subscribe(function (res) {
                if (res.success) {
                  _this4.activeService = [];

                  _this4.api.showToast('Service is Updated successful', 2000, 'bottom');

                  _this4.getListingService();
                } else {
                  _this4.api.showToast('Service is not Updated try again!', 2000, 'bottom');
                }
              }, function (err) {
                _this4.api.autoLogout(err, serviceForm);
              });
            } else {
              if (perPet == 0 && validation.isPriceValdation) {
                this.api.showLoader();
                serviceId == null ? serviceId = "" : serviceId;
                serviceTypeId == null ? serviceTypeId == "" : serviceTypeId;
                var _serviceForm = {
                  id: serviceId,
                  serviceTypeId: serviceTypeId,
                  isPrimaryService: flag,
                  dog: getDogPrice,
                  cat: getCatPrice,
                  horse: getHorsePrice,
                  misc: getOtherPrice,
                  price: getPrice
                };
                var _finalServiceFrm = {
                  ServiceForm: _serviceForm
                };
                this.api.updateListingService(serviceId, _finalServiceFrm).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.finalize)(function () {
                  _this4.api.hideLoader();
                })).subscribe(function (res) {
                  if (res.success) {
                    _this4.api.showToast('Service is Updated successful', 2000, 'bottom');
                  } else {
                    _this4.api.showToast('Service is not Updated try again!', 2000, 'bottom');
                  }
                }, function (err) {
                  _this4.api.autoLogout(err, _finalServiceFrm);
                });
              }
            }
          }
        }, {
          key: "changeStatusService",
          value: function changeStatusService(service) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
              var _this5 = this;

              var status, alert;
              return _regeneratorRuntime().wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      status = service.notification_message.panel_status == "Active" ? "Deactivate" : "Active";
                      _context.next = 3;
                      return this.alertController.create({
                        header: 'Confirm!',
                        message: 'Do you want to ' + status + " " + service.serviceType.serviceName + ' Service?',
                        buttons: [{
                          text: 'Cancel',
                          role: 'cancel',
                          cssClass: 'secondary',
                          handler: function handler(blah) {
                            console.log('Confirm Cancel: blah');
                          }
                        }, {
                          text: 'Yes',
                          handler: function handler() {
                            //this.api.showLoader();
                            var serviceStatus = {
                              service_id: service.id,
                              is_active: service.notification_message.panel_status == "Active" ? "deactive" : "active"
                            };

                            _this5.api.serviceactivedeactive(serviceStatus).pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.finalize)(function () {
                              _this5.api.hideLoader();
                            })).subscribe(function (res) {
                              if (res.success) {
                                _this5.api.showToast(res.message, 2000, 'bottom');

                                _this5.getListingService();
                              } else {
                                _this5.api.showToast(res.error, 2000, 'bottom');
                              }
                            }, function (err) {
                              _this5.api.autoLogout(err, serviceStatus);
                            });
                          }
                        }]
                      });

                    case 3:
                      alert = _context.sent;
                      _context.next = 6;
                      return alert.present();

                    case 6:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee, this);
            }));
          }
        }]);

        return ListingServicesPage;
      }();

      _ListingServicesPage.ctorParameters = function () {
        return [{
          type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService
        }, {
          type: _ionic_storage__WEBPACK_IMPORTED_MODULE_5__.Storage
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.AlertController
        }, {
          type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__.NavController
        }];
      };

      _ListingServicesPage = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
        selector: 'app-listing-services',
        template: _raw_loader_listing_services_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_listing_services_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      })], _ListingServicesPage);
      /***/
    },

    /***/
    46015:
    /*!***********************************************************************!*\
      !*** ./src/app/myListing/listing-services/listing-services.page.scss ***!
      \***********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "ion-card {\n  box-shadow: none;\n}\n\n.service-card {\n  border: 1px solid #CCCCCC;\n  box-shadow: 0 2px 4px 0 rgba(136, 136, 136, 0.3);\n}\n\n.service-card ion-card-header {\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.service-card ion-card-header div:first-child {\n  width: 70%;\n}\n\n.service-card ion-card-header div:last-child {\n  width: 30%;\n  text-align: center;\n}\n\n.service-card ion-card-header ion-card-title {\n  font-size: 14px;\n  color: #4A4A4A;\n  letter-spacing: 0;\n  margin-bottom: 8px;\n}\n\n.service-card ion-card-header ion-card-subtitle {\n  font-size: 12px;\n  color: #FE4164;\n  letter-spacing: 0;\n}\n\n.service-card ion-card-header ion-button {\n  font-size: 12px;\n  letter-spacing: 0;\n  --box-shadow:none;\n}\n\n.service-card ion-card-header ion-icon {\n  width: 20px;\n  height: 20px;\n}\n\n.service-card ion-card-content {\n  padding: 10px;\n}\n\n.service-card ion-card-content ion-button {\n  --box-shadow: none;\n  margin: 16px 0px 5px;\n  width: 100%;\n}\n\n.data-div {\n  padding-bottom: calc(env(safe-area-inset-bottom) + 10px);\n}\n\n.usd-icon {\n  margin-right: 8px;\n}\n\nion-item {\n  --padding-start: 0px;\n}\n\n.card-content {\n  border: 1px solid #e3e3e3;\n  border-radius: 0px 0px 4px 4px;\n  padding: 5px;\n  border-top: 0px;\n}\n\n.card-content ion-button {\n  --box-shadow: none;\n  --border-radius: 4px;\n  width: 100%;\n}\n\n.distance-header {\n  background-color: #dff0d8;\n  padding-left: 6px;\n  padding-right: 7px;\n  color: #3c763d;\n}\n\n.distance-header ion-text {\n  width: 100%;\n}\n\n.distance-header ion-col {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.distance-header ion-col ion-icon {\n  width: 20px;\n  height: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3Rpbmctc2VydmljZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7QUFDSjs7QUFDQTtFQUNJLHlCQUFBO0VBQ0EsZ0RBQUE7QUFFSjs7QUFESTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0FBR1I7O0FBRlE7RUFDSSxVQUFBO0FBSVo7O0FBRlE7RUFDSSxVQUFBO0VBQ0Esa0JBQUE7QUFJWjs7QUFGUTtFQUNJLGVBQUE7RUFDQSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtBQUlaOztBQUZRO0VBQ0ksZUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtBQUlaOztBQUZRO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUFJWjs7QUFGUTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FBSVo7O0FBREk7RUFDSSxhQUFBO0FBR1I7O0FBRlE7RUFDSSxrQkFBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtBQUlaOztBQUdBO0VBQ0ksd0RBQUE7QUFBSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxvQkFBQTtBQUVKOztBQUNBO0VBQ0kseUJBQUE7RUFDQSw4QkFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FBRUo7O0FBREk7RUFDSSxrQkFBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtBQUdSOztBQUFBO0VBQ0kseUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtBQUdKOztBQUZJO0VBQ0ksV0FBQTtBQUlSOztBQUZJO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUFJUjs7QUFIUTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FBS1oiLCJmaWxlIjoibGlzdGluZy1zZXJ2aWNlcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY2FyZCB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbn1cbi5zZXJ2aWNlLWNhcmR7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0NDQ0NDQztcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggMCByZ2JhKDEzNiwxMzYsMTM2LDAuMzApO1xuICAgIGlvbi1jYXJkLWhlYWRlcntcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBkaXY6Zmlyc3QtY2hpbGR7XG4gICAgICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICB9XG4gICAgICAgIGRpdjpsYXN0LWNoaWxke1xuICAgICAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBpb24tY2FyZC10aXRsZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgICAgICBjb2xvcjogIzRBNEE0QTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgICAgICB9XG4gICAgICAgIGlvbi1jYXJkLXN1YnRpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIGNvbG9yOiAjRkU0MTY0O1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgICAgIH1cbiAgICAgICAgaW9uLWJ1dHRvbntcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgICAgICAgICAgLS1ib3gtc2hhZG93Om5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgaW9uLWljb24ge1xuICAgICAgICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaW9uLWNhcmQtY29udGVudHtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgaW9uLWJ1dHRvbiB7XG4gICAgICAgICAgICAtLWJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgICAgICBtYXJnaW46IDE2cHggMHB4IDVweDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICB9XG5cbiAgICB9XG4gICAgXG59XG5cbi5kYXRhLWRpdiB7XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoZW52KHNhZmUtYXJlYS1pbnNldC1ib3R0b20pICsgMTBweCk7XG59XG4udXNkLWljb24ge1xuICAgIG1hcmdpbi1yaWdodDogOHB4O1xufVxuaW9uLWl0ZW0ge1xuICAgIC0tcGFkZGluZy1zdGFydDogMHB4O1xufVxuXG4uY2FyZC1jb250ZW50IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZTNlM2UzO1xuICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggNHB4IDRweDtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgYm9yZGVyLXRvcDogMHB4O1xuICAgIGlvbi1idXR0b24ge1xuICAgICAgICAtLWJveC1zaGFkb3c6IG5vbmU7XG4gICAgICAgIC0tYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG59XG4uZGlzdGFuY2UtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZmMGQ4O1xuICAgIHBhZGRpbmctbGVmdDogNnB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDdweDtcbiAgICBjb2xvcjogIzNjNzYzZDtcbiAgICBpb24tdGV4dCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICBpb24tY29sIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBpb24taWNvbiB7XG4gICAgICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */";
      /***/
    },

    /***/
    46973:
    /*!*************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/myListing/listing-services/listing-services.page.html ***!
      \*************************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button defaultHref=\"listing\" ></ion-back-button>\n        </ion-buttons>\n        <ion-title>Main Services</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <div>\n        <ion-card class=\"note-info animated fadeIn\" color=\"note\">\n            <ion-card-content>\n                These are the main services that you offer. In addition to these you can also offer extra\n                services below.\n            </ion-card-content>\n        </ion-card>\n        <ion-segment scrollable [(ngModel)]=\"selectedSegment\" color=\"segment-theme\" class=\"custom-segment\">\n            <ion-segment-button class=\"ion-text-capitalize\" value=\"mainService\">Main Service\n            </ion-segment-button>\n            <ion-segment-button class=\"ion-text-capitalize\" value=\"extraService\">Extra Service\n            </ion-segment-button>\n        </ion-segment>\n\n        <div class=\"data-div\" [ngSwitch]=\"selectedSegment\">\n            <!-- main service -->\n            <div *ngSwitchCase=\"'mainService'\">\n                <ion-card>\n                    <ion-card-header  (click)=\"toggleRange('1')\" class=\"distance-header ion-text-left\">\n                        <ion-row>\n                            <ion-col>\n                                <ion-text class=\"fs-14 fw-700\"> Distance willing to Travel</ion-text>\n                                <ion-icon\n                                    [name]=\"(isRangeValueShown('1'))? 'chevron-up-outline' : 'chevron-down-outline'\"\n                                ></ion-icon>\n                            </ion-col>\n                        </ion-row>\n                    </ion-card-header>        \n                    <ion-card-content class=\"card-content ion-text-left\" *ngIf=\"isRangeValueShown('1')\">        \n                        <ion-row>\n                            <ion-col size=\"12\">\n                                <ion-text>\n                                    Please indicate the max distance you are willing to travel for out of home services\n                                    such as dog walking,\n                                    Pet Taxi, House Sitting, and Home Visits.\n                                </ion-text>\n                                <ion-text>\n                                    <ion-label style=\"top: 10px;\"> Radius {{travel_distance}} - kms </ion-label>\n                                </ion-text>\n                            </ion-col>\n                            <ion-col size=\"12\">\n                                <ion-range  class=\"ion-text-capitalize\" min=\"0\" max=\"9\" step=\"1\" value={{rangeVal}} \n                                (ionChange)=\"rangeChange($event)\"\n                                snaps >\n                                    <ion-label slot=\"start\">0</ion-label>\n                                    <ion-label slot=\"end\">500</ion-label>\n                                </ion-range>\n                            </ion-col>\n                            <ion-col size=\"12\">\n                                <ion-button \n                                (click)=\"updateDistance()\"\n                                class=\"ion-text-capitalize\" color=\"submit-btn\">Save</ion-button>\n                            </ion-col>                           \n                       </ion-row>    \n                    </ion-card-content>\n                </ion-card>\n                <ion-card *ngFor=\"let p of listingService?.primaryServices; let idx = index\" class=\"service-card\">\n                    <ion-card-header lines=\"none\">\n                        <div>\n                    \n                        <!-- <ion-card-title *ngIf=\"p.notification_message.noti_flag == 'spacecheck'\">\n                            To offer this service you must first complete a\n                        <a [routerLink]=\"['/profile-email-verify']\">background check</a>\n                        </ion-card-title> -->\n\n                            <ion-card-title\n                                *ngIf=\"p?.notification_message?.noti_flag == 'spacecheck'\"\n                            >\n                                Before this service is active you must first complete your\n                                <a [routerLink]=\"['/home-description']\">home desciption</a>\n                            </ion-card-title>\n                            \n                            <ion-card-title\n                                *ngIf=\"p.notification_message.noti_flag == 'setpricefirst'\"\n                            >\n                                Before this service is active you must first set prices\n                            </ion-card-title>\n                            \n                            <ion-card-title \n                                *ngIf=\"p.notification_message.noti_flag == 'notactive'\"\n                            >\n                                There is an issue with this service and it cannot be activated. \n                                Please contact PetCloud for assistance.\n                            </ion-card-title>\n                            \n                            <ion-card-title  (click)=\"openActiveBlock('primary-'+p.idx)\" >{{p.serviceType.serviceName}}</ion-card-title>\n\n                            <ion-card-subtitle  (click)=\"openActiveBlock('primary-'+p.idx)\" *ngIf=\"p?.notification_message?.panel_status == 'Pending'\" color=\"theme\">\n                                Pending\n                            </ion-card-subtitle>\n                            <ion-card-subtitle  (click)=\"openActiveBlock('primary-'+p.idx)\" *ngIf=\"p?.notification_message?.panel_status != 'Pending'\" color=\"theme\">\n                                {{ (p?.notification_message?.panel_status == 'Active') ? 'Active' : 'Inactive'}}\n                            </ion-card-subtitle>\n                        </div>\n                        <div>\n                            <ion-button *ngIf=\"p?.notification_message?.panel_status == 'Pending'\"\n                                class=\"ion-text-capitalize\" size=\"small\" [color]=\"'theme'\"\n                            >\n                                Pending\n                            </ion-button>\n                            <ion-button *ngIf=\"p?.notification_message?.panel_status != 'Pending'\"\n                                class=\"ion-text-capitalize\" size=\"small\"\n                                [color]=\"(p?.notification_message?.panel_status != 'Active') ? 'theme-sec' : 'theme'\"\n                                (click)=\"changeStatusService(p)\"\n                            >\n                                {{ (p?.notification_message?.panel_status != 'Active') ? 'Activate' : 'Deactivate'}}\n                            </ion-button>\n                        </div>\n                        <ion-icon \n                            (click)=\"openActiveBlock('primary-'+p.idx)\"\n                            [name]=\"(activeService?.indexOf('primary-'+p.idx) >= 0)? 'chevron-up-outline' : 'chevron-down-outline'\"\n                        ></ion-icon>\n                    </ion-card-header>\n                    <ion-card-content class=\"animated fadeIn delay-2s\"\n                        *ngIf=\"activeService?.indexOf('primary-'+p.idx) >= 0\">\n                        \n                        <ion-text *ngIf=\"p?.serviceType?.serviceChargeType == '0'\" class=\"fs-12\">This service is charged on a per night basis.</ion-text>\n\n                        <ion-text *ngIf=\"p?.serviceType?.serviceChargeType == '1'\" class=\"fs-12\">This service is charged on a per day basis.</ion-text>\n\n                        <ion-text *ngIf=\"p?.serviceType?.serviceChargeType == '3'\" class=\"fs-12\">This service is charged on a one off basis.</ion-text>\n\n                        <ion-text  *ngIf=\"p?.serviceType?.serviceChargeType == '4'\" class=\"fs-12\">This service is charged per KM traveled.</ion-text>\n\n\n                        <div *ngIf=\"p?.serviceType?.perPet == '0'\">\n                            <ion-item>\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Price </ion-label>\n                                <ion-input type=\"number\" inputmode=\"decimal\" [(ngModel)]=\"p.getPrice\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n                        </div>\n\n\n                        <!-- If Price is null show block of dog, cat , horse , misc. \n                        IF Price is not null show  -->\n                        <div *ngIf=\"p?.price == null && p?.serviceType?.perPet =='1' \">\n\n                            <ion-item *ngIf=\"pets?.sits_dogs == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Dog </ion-label>\n                                <ion-input type=\"number\" inputmode=\"decimal\" [(ngModel)]=\"p.getDogPrice\" min=\"{30}\" max=\"999\"></ion-input>\n                            </ion-item>\n\n\n                            <ion-item *ngIf=\"pets?.sits_cat == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Cat </ion-label>\n                                <ion-input type=\"number\" inputmode=\"decimal\" [(ngModel)]=\"p.getCatPrice\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n\n                            <ion-item *ngIf=\"pets?.sits_horse == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Horse </ion-label>\n                                <ion-input type=\"number\" inputmode=\"decimal\" [(ngModel)]=\"p.getHorsePrice\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n\n\n                            <ion-item *ngIf=\"pets?.sits_others == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Others </ion-label>\n                                <ion-input type=\"number\" inputmode=\"decimal\" [(ngModel)]=\"p.getOtherPrice\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n\n                        </div>\n\n                        <ion-button class=\"text-capitalize fls-0 fs-14\" type=\"button\" color=\"theme\"\n                            (click)=\"saveService(p.id,p.serviceTypeId,\n                            p.getDogPrice,\n                            p.getCatPrice,\n                            p.getHorsePrice,\n                            p.getOtherPrice,\n                            p.getPrice,\n                            p.isPrimaryService,p.priceRuleByName,1, p.pricingRules,p.serviceType.perPet,p)\">\n                            \n                            <label *ngIf=\"p?.notification_message?.save_text == 'Save'\">Save</label>\n                            <label *ngIf=\"p?.notification_message?.save_text == 'Save & Activate'\">Save & Activate</label>\n                        </ion-button>\n                    </ion-card-content>\n                </ion-card>\n            </div>\n\n            <div *ngSwitchCase=\"'extraService'\">\n                <!-- Extra services -->\n                <ion-card color=\"note\">\n                    <ion-card-header class=\"fs-18\">Extra Services</ion-card-header>\n                    <ion-card-content class=\"fs-14\">These services are offered in addition to the main services above.\n                        For example if you getting a booking to mind in your home you might also offer to pick up and\n                        drop off their pet.</ion-card-content>\n                </ion-card>\n\n                <!-- daily walking 2 -->\n                <ion-card *ngFor=\"let s of listingService.secondaryServices; let idx = index;\" class=\"service-card\">\n                    <ion-card-header lines=\"none\">\n                        <div (click)=\"openActiveBlock('extra-'+s.idx)\">\n                            <ion-card-title>{{s?.serviceType?.serviceName}}</ion-card-title>\n                            <ion-card-subtitle *ngIf=\"s?.notification_message?.panel_status != 'Pending'\" color=\"theme\">\n                                {{ (s?.notification_message?.panel_status == 'Active') ? 'Active' : 'Inactive'}}\n                            </ion-card-subtitle>\n\n                            <ion-card-subtitle *ngIf=\"s?.notification_message?.panel_status == 'Pending'\" color=\"theme\">\n                                Pending</ion-card-subtitle>\n\n                        </div>\n                        <div>\n\n                            <ion-button *ngIf=\"s?.notification_message?.panel_status == 'Pending'\"\n                                class=\"ion-text-capitalize\" size=\"small\" [color]=\"'theme'\">Pending</ion-button>\n\n                            <ion-button *ngIf=\"s?.notification_message?.panel_status != 'Pending'\"\n                                class=\"ion-text-capitalize\" (click)=\"changeStatusService(s)\" size=\"small\"\n                                [color]=\"(s?.notification_message?.panel_status != 'Active') ? 'theme-sec' : 'theme'\">\n                                {{ (s?.notification_message != 'Active') ? 'Activate' : 'Deactivate'}}</ion-button>\n                        </div>\n                        <ion-icon \n                            (click)=\"openActiveBlock('extra-'+s.idx)\"\n                            [name]=\"(activeService?.indexOf('extra-'+s.idx) >= 0)? 'chevron-up-outline' : 'chevron-down-outline'\"\n                        ></ion-icon>\n                    </ion-card-header>\n\n                    <ion-card-content class=\"animated fadeIn delay-2s\"\n                        *ngIf=\"activeService?.indexOf('extra-'+s.idx) >= 0\">\n                        <ion-text *ngIf=\"s?.serviceType?.serviceChargeType == '0'\" class=\"fs-12\">This service is charged on a per night basis.</ion-text>\n\n                        <ion-text *ngIf=\"s?.serviceType?.serviceChargeType == '1'\" class=\"fs-12\">This service is charged on a per day basis.</ion-text>\n\n                        <ion-text *ngIf=\"s?.serviceType?.serviceChargeType == '3'\" class=\"fs-12\">This service is charged on a one off basis.</ion-text>\n\n                        <ion-text  *ngIf=\"s?.serviceType?.serviceChargeType == '4'\" class=\"fs-12\">This service is charged per KM traveled.</ion-text>\n\n\n                        <div *ngIf=\"s?.serviceType?.perPet == '0'\">\n                            <ion-item>\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Price </ion-label>\n                                <ion-input [(ngModel)]=\"s.getPrice\" type=\"number\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n                        </div>\n\n\n                        <!-- If Price is null show block of dog, cat , horse , misc. \n                    IF Price is not null show  -->\n                        <div *ngIf=\"s?.serviceType?.perPet =='1' \">\n\n                            <ion-item *ngIf=\"this.pets.sits_dogs == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Dog </ion-label>\n                                <ion-input type=\"number\" [(ngModel)]=\"s.getDogPrice\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n\n\n                            <ion-item *ngIf=\"this.pets.sits_cat == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Cat </ion-label>\n                                <ion-input type=\"number\" [(ngModel)]=\"s.getCatPrice\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n\n                            <ion-item *ngIf=\"this.pets.sits_horse == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Horse </ion-label>\n                                <ion-input type=\"number\" [(ngModel)]=\"s.getHorsePrice\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n\n\n                            <ion-item *ngIf=\"this.pets.sits_others == 1\">\n                                <ion-icon slot=\"start\" class=\"usd-icon ion-align-self-end\" name=\"logo-usd\" size=\"small\"></ion-icon>\n                                <ion-label position=\"stacked\"> Others </ion-label>\n                                <ion-input [(ngModel)]=\"s.getOtherPrice\" type=\"number\" min=\"30\" max=\"999\"></ion-input>\n                            </ion-item>\n\n                        </div>\n\n                        <ion-button class=\"text-capitalize fls-0 fs-14\" type=\"button\" color=\"theme\"\n                            (click)=\"saveService(s.id,s.serviceTypeId,\n                    s.getDogPrice,\n                            s.getCatPrice,\n                            s.getHorsePrice,\n                            s.getOtherPrice,\n                            s.getPrice,\n                    s.isPrimaryService,s.priceRuleByName,0, s.pricingRules,s.serviceType.perPet,s)\">\n                    <label *ngIf=\"s?.notification_message?.save_text == 'Save'\">Save</label>\n                    <label *ngIf=\"s?.notification_message?.save_text == 'Save & Activate'\">Save & Activate</label>\n                        </ion-button>\n\n                        <!-- <ion-button class=\"text-capitalize fls-0 fs-14\" expand=\"block\" type=\"button\" color=\"theme\"\n                            (click)=\"saveService(s.id,s.serviceTypeId,s.isPrimaryService,s.priceRuleByName)\">\n                            Save\n                        </ion-button> -->\n                    </ion-card-content>\n                </ion-card>\n            </div>\n        </div>\n    </div>\n</ion-content>";
      /***/
    }
  }]);
})();
//# sourceMappingURL=src_app_myListing_listing-services_listing-services_module_ts-es5.js.map