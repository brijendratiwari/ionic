{"version":3,"sources":["./src/app/myListing/payout-prefrence/payout-prefrence.module.ts","./src/app/myListing/payout-prefrence/payout-prefrence.page.ts","./src/app/myListing/payout-prefrence/payout-prefrence.page.scss","./src/app/myListing/payout-prefrence/payout-prefrence.page.html"],"names":[],"mappings":"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","file":"src_app_myListing_payout-prefrence_payout-prefrence_module_ts-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {PayoutPrefrencePage} from './payout-prefrence.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PayoutPrefrencePage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [PayoutPrefrencePage]\n})\nexport class PayoutPrefrencePageModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { PetcloudApiService } from '../../api/petcloud-api.service';\nimport { Validators, FormBuilder, FormGroup, } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { Camera, CameraOptions} from \"@ionic-native/camera/ngx\";\n\n\n// importing model files\nimport { ApiResponse } from '../../model/api-response';\nimport { User } from '../../model/user';\nimport { ActionSheetController, NavController, Platform } from '@ionic/angular';\nimport { CameraService } from '../../../app/camera-service.service';\n\n@Component({\n    selector: 'app-payout-prefrence',\n    templateUrl: './payout-prefrence.page.html',\n    styleUrls: ['./payout-prefrence.page.scss'],\n})\nexport class PayoutPrefrencePage implements OnInit {\n\n    public stripeFrm: FormGroup;\n    public paypalFrm: FormGroup;\n    public selectedSegment = '';\n    public backButton: any = \"\";\n    public isStripeAccountAdded: boolean = false;\n    public documentContainer: boolean = false;\n\n    constructor(public api: PetcloudApiService,\n        private formBuilder: FormBuilder,\n        protected router: Router,\n        public navCntl: NavController,\n        public plt: Platform,\n        public CameraAPI: CameraService,\n        public camera: Camera,\n        public actionSheetCtrl: ActionSheetController,\n        public route: ActivatedRoute,\n        protected storage: Storage) {\n\n        this.backButton = this.route.snapshot.paramMap.get(\"backBtn\");\n\n        this.backButtonEvent();\n    }\n\n    ngOnInit() {\n        this.stripeFrm = this.formBuilder.group({\n            accountNumber: ['', [Validators.required]],\n            accountName: ['', [Validators.required]],\n            bsb: ['', [Validators.required]]\n        });\n        this.paypalFrm = this.formBuilder.group({\n            paypal_email: ['', [Validators.required, Validators.email]]\n        });\n        this.selectedSegment = 'stripe';\n    }\n\n    ionViewDidEnter() {\n        this.isStripeAccountAdded = false;\n        this.storage.get(PetcloudApiService.USER)\n            .then(async (userData: User) => {\n                if (userData != null) {\n                   await this.checkVerificationPending(userData)\n                    if(userData.account){    \n                        this.isStripeAccountAdded = true;\n                       this.stripeFrm.patchValue({\n                            accountName:  userData.account.data[0].account_holder_name,\n                            bsb:  userData.account.data[0].routing_number,\n                            accountNumber: \"xxxxx \"+userData.account.data[0].last4\n                        })\n                    }else{\n                        this.isStripeAccountAdded = false;\n                    }\n                    userData.stripe_connect_update != null ? this.documentContainer = true :  this.documentContainer = false;\n                    \n                    this.paypalFrm.setValue({\n                        paypal_email: userData.paypal_email\n                    });\n                }\n            });\n    }\n\n\n    async checkVerificationPending(userData) {\n        if (userData.user_type == 2 || userData.user_type == 3) {\n                    await this.api.isVerificationPendingModel();\n        } else if (userData.user_type == 1) {\n            if (userData.verified == 0 || userData.verify_phoneflag == \"N\") {\n                await  this.api.isVerificationPendingModel();\n            }\n        }\n    }\n\n    async stripeDocumentUpload(pageSide) {\n        const actionSheet = await this.actionSheetCtrl.create({\n            header: 'Select Photo From',\n            buttons: [{\n                text: 'Camera',\n                handler: () => {\n               \n                    this.photoOption(this.camera.PictureSourceType.CAMERA,pageSide);\n                }\n            }, {\n                text: 'Gallery',\n                handler: async () => {\n                    const status = await this.CameraAPI.checkPhotoLibraryPermission();\n                    if(status) {\n                        this.photoOption(this.camera.PictureSourceType.PHOTOLIBRARY,pageSide);\n                    }\n                }\n            }, {\n                text: 'Cancel',\n             \n            }]\n        });\n        await actionSheet.present();\n    }\n\n    photoOption(params,pageSide) {\n        \n        this.CameraAPI.getPicture(params).then((base64String:any)=>{\n            this.imageUpload('data:image/jpeg;base64,' + base64String,pageSide);\n        },err=>{\n            \n        })\n        \n    }\n\n   \n    imageUpload(base64String,pageSide) {\n            const fileParams = { image: base64String, file_name: \"Imagename.jpg\",pageside:pageSide};\n                this.api.showLoader();\n                this.api.uploadDocumentForBank(fileParams).pipe(\n                    finalize(() => {\n                        this.api.hideLoader();\n                    }))\n                    .subscribe((res: any) => {\n                        if (res.success) {\n                            this.navCntl.navigateRoot('/home/tabs/profile-menu')\n                            this.api.showToast('Document Uploaded.', 2000, 'bottom');\n                           \n                        } else {\n                            this.api.showToast('Filed to add document.', 2000, 'bottom');\n                        }\n                    }, (err: any) => {\n                        this.api.autoLogout(err,fileParams)\n                    });\n        }\n\n    /**\n     * Update Paypal email\n     */\n    public updatePaypal() {\n        this.api.showLoader();\n        const user = {\n            'Users': {\n                paypal_email: this.paypalFrm.value.paypal_email\n            }\n        };\n        this.api.updatePaypal(user)\n            .subscribe((res: any) => {\n                if (res.success) {\n                    // now update local user details\n                    this.api.getUserBasicProfile()\n                        .pipe(finalize(() => {\n                            this.api.hideLoader();\n                        }))\n                        .subscribe(async (apiRes: ApiResponse) => {\n                            if (apiRes.success) {\n                                await this.storage.set(PetcloudApiService.USER, apiRes.user);\n                                this.navCntl.navigateRoot('/home/tabs/profile-menu')\n                                this.api.showToast('payment details updated successful', 2000, 'bottom');\n                            } else {\n                                this.api.showToast('User Payment details not updated in application, Please Try again to update!',\n                                    3000, 'bottom');\n                            }\n                        }, (err: any) => {\n\n                            this.api.showToast('User Payment details not updated in application, Please Try again to update!',\n                                3000, 'bottom');\n                            this.navCntl.navigateRoot('/home/tabs/profile-menu')\n\n                        });\n                } else {\n                    this.navCntl.navigateRoot('/home/tabs/profile-menu')\n                    this.api.showToast(res.error, 2000, 'bottom');\n                }\n            }, (err: any) => {\n                this.api.showToast(err, 3000, 'bottom');\n                this.api.autoLogout(err,user)\n            });\n    }\n\n    /**\n     * Update Stripe Details\n     */\n    public updateStripe() {\n\n        const bankFrm = {\n            'BankForm': this.stripeFrm.value\n        };\n\n   \n        this.api.showLoader();\n        this.api.updateStripeDetails(bankFrm)\n            .pipe(finalize(() => {\n                this.api.hideLoader();\n            }))\n            .subscribe((apiRes: ApiResponse) => {\n                if (apiRes.success) {\n                    this.storage.set(PetcloudApiService.USER, apiRes.user);\n                    this.documentContainer = true;\n                    this.isStripeAccountAdded = true;\n                    this.api.showToast('Details updated', 2000, 'bottom');\n                } else {\n                    this.navCntl.navigateRoot('/home/tabs/profile-menu')\n                    this.api.showToast(apiRes.error, 4000, 'bottom');\n                }\n            }, (err: any) => {\n                this.api.showToast(err, 3000, 'bottom');\n                this.api.autoLogout(err,bankFrm)\n            });\n    }\n\n\n    backButtonNavigate() {\n        if (this.backButton) {\n            this.router.navigateByUrl('/home/tabs/jobs-tab')\n        } else {\n            this.navCntl.pop();\n        }\n    }\n\n\n\n    // active hardware back button\n    backButtonEvent() {\n        this.plt.backButton.subscribe(async () => {\n            this.api.dismissModelorAlert();\n            if (this.router.url === '/payout-preference') {\n                if (new Date().getTime() - this.api.lastTimeBackPress < this.api.timePeriodToExit) {\n                    navigator['app'].exitApp();\n                } else {\n                    this.api.showToast('Press again to exit app.', 2000, \"bottom\");\n                    this.api.lastTimeBackPress = new Date().getTime();\n                }\n            }\n        });\n    }\n\n}\n","export default \".data-div {\\n  padding-bottom: calc(env(safe-area-inset-bottom) + 10px);\\n}\\n\\n.input-form {\\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2);\\n  border-radius: 8px;\\n  padding: 16px 0px 0px;\\n  overflow: hidden;\\n  margin: 16px 10px;\\n}\\n\\n.input-form h4 {\\n  margin: 0px 16px;\\n  font-size: 16px;\\n}\\n\\n.footer-btn {\\n  --border-radius: 0px 0px 8px 8px;\\n  height: 50px;\\n  --padding-bottom: 0px;\\n  width: 100%;\\n  margin-top: 14px;\\n  --box-shadow: none;\\n}\\n\\n.info-card {\\n  box-shadow: none;\\n}\\n\\n.doc-card {\\n  padding: 16px;\\n}\\n\\n.doc-card h4 {\\n  margin: 0px;\\n}\\n\\n.doc-card ion-button {\\n  border-radius: 0px 0px 8px 8px;\\n  --box-shadow: none;\\n  --padding-bottom: 0px;\\n  width: 100%;\\n  margin-top: 14px;\\n}\\n\\n.error {\\n  margin-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheW91dC1wcmVmcmVuY2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksd0RBQUE7QUFDSjs7QUFDQTtFQUNJLHdDQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUFFSjs7QUFESTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtBQUdSOztBQUFBO0VBQ0ksZ0NBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQUdKOztBQURBO0VBQ0ksZ0JBQUE7QUFJSjs7QUFEQTtFQUNJLGFBQUE7QUFJSjs7QUFISTtFQUNJLFdBQUE7QUFLUjs7QUFISTtFQUNJLDhCQUFBO0VBRUEsa0JBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQUlSOztBQUFBO0VBQ0ksaUJBQUE7QUFHSiIsImZpbGUiOiJwYXlvdXQtcHJlZnJlbmNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRhLWRpdiB7XG4gICAgcGFkZGluZy1ib3R0b206IGNhbGMoZW52KHNhZmUtYXJlYS1pbnNldC1ib3R0b20pICsgMTBweCk7XG59XG4uaW5wdXQtZm9ybSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDhweCAwIHJnYigwIDAgMCAvIDIwJSk7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIHBhZGRpbmc6IDE2cHggMHB4IDBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbjogMTZweCAxMHB4O1xuICAgIGg0IHtcbiAgICAgICAgbWFyZ2luOiAwcHggMTZweDtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cbn1cbi5mb290ZXItYnRuIHtcbiAgICAtLWJvcmRlci1yYWRpdXM6IDBweCAwcHggOHB4IDhweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgLS1wYWRkaW5nLWJvdHRvbTogMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDE0cHg7XG4gICAgLS1ib3gtc2hhZG93OiBub25lO1xufVxuLmluZm8tY2FyZCB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbn1cblxuLmRvYy1jYXJkIHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIGg0IHsgXG4gICAgICAgIG1hcmdpbjogMHB4O1xuICAgIH1cbiAgICBpb24tYnV0dG9uIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMHB4IDBweCA4cHggOHB4O1xuICAgICAgICAvLyBoZWlnaHQ6IDUwcHg7XG4gICAgICAgIC0tYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgLS1wYWRkaW5nLWJvdHRvbTogMHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLXRvcDogMTRweDtcbiAgICB9XG59XG5cbi5lcnJvciB7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59Il19 */\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button (click)=\\\"backButtonNavigate()\\\" defaultHref=\\\"home\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Payout Prefrence</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-card class=\\\"info-card\\\" color=\\\"theme-sec\\\">\\n        <ion-card-content class=\\\"ion-text-justify fs-12\\\">\\n            This screen is for Pet Sitters to provide their preferred bank account or Paypal account they want to\\n            receive PetCloud payments to at the end of the stay.\\n        </ion-card-content>\\n    </ion-card>\\n    <ion-segment color=\\\"segment-theme\\\" class=\\\"custom-segment\\\" [(ngModel)]=\\\"selectedSegment\\\">\\n        <ion-segment-button value=\\\"stripe\\\">Stripe</ion-segment-button>\\n        <ion-segment-button value=\\\"paypal\\\">Paypal</ion-segment-button>\\n    </ion-segment>\\n    <div class=\\\"data-div\\\" [ngSwitch]=\\\"selectedSegment\\\">\\n        <ion-grid *ngSwitchCase=\\\"'stripe'\\\">\\n            <ion-row class=\\\"ion-no-margin custom-list\\\">\\n                <ion-col>\\n                    <h4>Stripe</h4>\\n                    <p class=\\\"fs-12 ion-text-justify\\\">We use Stripe payment gateway to securely process payments for bookings by credit cards.</p>\\n                    <p class=\\\"fs-12 ion-text-justify\\\"> Your first payout may take 2-3 days. (We hate delays as much as you do, but this is out of our hands!). This allows Stripe to mitigate some of the risks inherent in providing credit services.</p>\\n                    <p class=\\\"fs-12 ion-text-justify\\\">\\n                        \\n                         Stripe requires us to ask you to upload Government-issued Photo ID, such as a Driver's License or Passport for Verification to comply with regulation. Please upload both Front and Back for Identity verification.\\n                         Please note we can only accept JPG, JPEG or PNG. Our provider does not accept PDF's \\n                    </p>\\n                </ion-col>\\n            </ion-row>\\n\\n            <ng-container *ngIf=\\\"documentContainer\\\">\\n                <ion-card class=\\\"info-card\\\" color=\\\"note\\\">\\n                    <ion-card-header >Step 2. Upload your Identity document.\\n                    </ion-card-header>\\n                </ion-card>\\n                <div class=\\\"input-form doc-card\\\">\\n                    <h4>Identity</h4>\\n                    <ion-row class=\\\"ion-no-margin custom-list\\\">\\n                        <ion-col size=\\\"12\\\">\\n                            <p class=\\\"fs-14 ion-text-justify\\\">Identity document Front <span class=\\\"error\\\">*</span></p>\\n                            <ion-button class=\\\"text-capitalize fls-0 fs-18\\\" color=\\\"theme\\\"\\n                                (click)=\\\"stripeDocumentUpload('front')\\\"\\n                            >\\n                                Upload\\n                            </ion-button>\\n                        </ion-col>\\n    \\n                        <ion-col size=\\\"12\\\">\\n                            <p class=\\\"fs-14 ion-text-justify\\\">Identity document Back</p>\\n                            <ion-button class=\\\"text-capitalize fls-0 fs-18\\\" color=\\\"theme\\\"\\n                                (click)=\\\"stripeDocumentUpload('back')\\\"\\n                            >\\n                                Upload\\n                            </ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                </div>                \\n            </ng-container>\\n\\n\\n            <ng-container>    \\n                <ion-card class=\\\"info-card\\\" *ngIf=\\\"isStripeAccountAdded == false\\\" color=\\\"note\\\">\\n                    <ion-card-header >Step 1. Please Provide your Bank Details.\\n                    </ion-card-header>\\n                </ion-card>\\n                <div class=\\\"input-form\\\">\\n                    <h4 *ngIf=\\\"isStripeAccountAdded\\\">Bank Details</h4>\\n                    <form [formGroup]=\\\"stripeFrm\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"stacked\\\">Account Name</ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"accountName\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                            *ngIf=\\\"stripeFrm.get('accountName').hasError('required') && stripeFrm.get('accountName').touched\\\">\\n                            Enter account name!\\n                        </ion-text>\\n                        <ion-item>\\n                            <ion-label position=\\\"stacked\\\">BSB</ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"bsb\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                            *ngIf=\\\"stripeFrm.get('bsb').hasError('required') && stripeFrm.get('bsb').touched\\\">\\n                            Enter BSB code!\\n                        </ion-text>\\n                        <ion-item>\\n                            <ion-label position=\\\"stacked\\\">Account Number</ion-label>\\n                            <ion-input type=\\\"text\\\" formControlName=\\\"accountNumber\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                            *ngIf=\\\"stripeFrm.get('accountNumber').hasError('required') && stripeFrm.get('accountNumber').touched\\\">\\n                            Enter account number!\\n                        </ion-text>\\n                        <ion-button class=\\\"text-capitalize fls-0 fs-18 footer-btn\\\" color=\\\"theme\\\"\\n                            [disabled]=\\\"!stripeFrm.valid\\\" (click)=\\\"updateStripe()\\\">\\n                            Submit\\n                        </ion-button>\\n                    </form>\\n                </div>\\n            </ng-container>\\n        </ion-grid>\\n        <ion-grid *ngSwitchCase=\\\"'paypal'\\\">\\n            <ion-row>\\n                <ion-col>\\n                    <h4>Paypal</h4>\\n                    <p class=\\\"fs-12\\\">\\n                        Paypal is the least preferred method of payment since Paypal now requires Pet Owners to sign\\n                        into Paypal or to create a Paypal account to pay for bookings.\\n                    </p>\\n                    <p class=\\\"fs-12\\\">Feedback has been that this is a frustrating experience for busy Pet Owners</p>\\n                    <p class=\\\"fs-12\\\">\\n                        If you have not set up a Paypal Account, it is free:\\n                        <ion-list class=\\\"ion-no-padding\\\">\\n                            <ion-item class=\\\"fs-12\\\">Step 1. Sign up on the paypal website</ion-item>\\n                            <ion-item class=\\\"fs-12\\\">Step 2. Link your preferred bank account</ion-item>\\n                            <ion-item class=\\\"fs-12\\\">Step 3. Get Paid!</ion-item>\\n                        </ion-list>\\n                    </p>\\n                    <p class=\\\"fs-12\\\">Payments from PetCloud will arrive in your PayPal account 24 hours after the very\\n                        last minding day.</p>\\n                    <p class=\\\"fs-12\\\">To get paid into your bank account you will need to log into PayPal & withdraw\\n                        money into your bank account.</p>\\n                </ion-col>\\n            </ion-row>\\n            \\n            <div class=\\\"input-form\\\">\\n                <form [formGroup]=\\\"paypalFrm\\\">\\n                    <h4>Paypal Details</h4>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Paypal Email</ion-label>\\n                        <ion-input type=\\\"email\\\" formControlName=\\\"paypal_email\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                        *ngIf=\\\"paypalFrm.get('paypal_email').hasError('required') && paypalFrm.get('paypal_email').touched\\\">\\n                        Enter paypal email!\\n                    </ion-text>\\n                    <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                        *ngIf=\\\"paypalFrm.get('paypal_email').hasError('email')\\\">\\n                        Enter proper email!\\n                    </ion-text>\\n                    <ion-button class=\\\"text-capitalize fls-0 fs-18 footer-btn\\\" color=\\\"theme\\\"\\n                        [disabled]=\\\"!paypalFrm.valid\\\" (click)=\\\"updatePaypal()\\\">Save\\n                    </ion-button>\\n                </form>               \\n            </div>\\n        </ion-grid>\\n    </div>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}