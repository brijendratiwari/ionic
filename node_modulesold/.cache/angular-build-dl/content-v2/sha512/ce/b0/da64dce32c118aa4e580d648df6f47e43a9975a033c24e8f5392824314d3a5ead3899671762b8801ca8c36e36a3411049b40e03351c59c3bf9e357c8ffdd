(function () {
  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  (self["webpackChunkpetcloud"] = self["webpackChunkpetcloud"] || []).push([["src_app_sitter-performace_sitter-performace_module_ts"], {
    /***/
    79031:
    /*!***************************************************************!*\
      !*** ./src/app/sitter-performace/sitter-performace.module.ts ***!
      \***************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "SitterPerformacePageModule": function SitterPerformacePageModule() {
          return (
            /* binding */
            _SitterPerformacePageModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      38583);
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      3679);
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/router */
      39895);
      /* harmony import */


      var _ionic_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @ionic/angular */
      80476);
      /* harmony import */


      var _sitter_performace_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./sitter-performace.page */
      24603);
      /* harmony import */


      var angular_svg_round_progressbar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! angular-svg-round-progressbar */
      4461);

      var routes = [{
        path: '',
        component: _sitter_performace_page__WEBPACK_IMPORTED_MODULE_0__.SitterPerformacePage
      }];

      var _SitterPerformacePageModule = /*#__PURE__*/_createClass(function SitterPerformacePageModule() {
        _classCallCheck(this, SitterPerformacePageModule);
      });

      _SitterPerformacePageModule = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule, _ionic_angular__WEBPACK_IMPORTED_MODULE_5__.IonicModule, _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule.forChild(routes), angular_svg_round_progressbar__WEBPACK_IMPORTED_MODULE_7__.RoundProgressModule],
        declarations: [_sitter_performace_page__WEBPACK_IMPORTED_MODULE_0__.SitterPerformacePage]
      })], _SitterPerformacePageModule);
      /***/
    },

    /***/
    24603:
    /*!*************************************************************!*\
      !*** ./src/app/sitter-performace/sitter-performace.page.ts ***!
      \*************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "SitterPerformacePage": function SitterPerformacePage() {
          return (
            /* binding */
            _SitterPerformacePage
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! tslib */
      64762);
      /* harmony import */


      var _raw_loader_sitter_performace_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! !raw-loader!./sitter-performace.page.html */
      6995);
      /* harmony import */


      var _sitter_performace_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./sitter-performace.page.scss */
      47473);
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      68939);
      /* harmony import */


      var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ../api/petcloud-api.service */
      78975);

      var _SitterPerformacePage = /*#__PURE__*/function () {
        function SitterPerformacePage(api) {
          _classCallCheck(this, SitterPerformacePage);

          this.api = api;
          this.current = 70;
          this.max = 100;
          this.stroke = 8;
          this.radius = 40;
          this.semicircle = false;
          this.rounded = false;
          this.responsive = false;
          this.clockwise = true;
          this.color = '#45ccce';
          this.background = '#eaeaea';
          this.duration = 800;
          this.animation = 'easeOutCubic';
          this.animationDelay = 0;
          this.animations = [];
          this.gradient = false;
          this.realCurrent = 0;
          this.graphData = null;
          this.isGraphDataAvailable = false;
          this.isAPILoaded = false;
        }

        _createClass(SitterPerformacePage, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "ionViewDidEnter",
          value: function ionViewDidEnter() {
            this.getRecurringOptions();
            this.getGraphData("");
          }
          /**
          * get Recurring options get Servies and Recurring Type
          */

        }, {
          key: "getRecurringOptions",
          value: function getRecurringOptions() {
            var _this = this;

            this.api.recurringOptions().pipe((0, rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.finalize)(function () {})).subscribe(function (res) {
              return (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
                return _regeneratorRuntime().wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        this.petCareServices = res.services;

                      case 1:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, this);
              }));
            }, function (err) {
              _this.api.autoLogout(err, "");
            });
          }
        }, {
          key: "petCareSelectedService",
          value: function petCareSelectedService(event) {
            this.isGraphDataAvailable = false;
            this.isAPILoaded = false;
            this.getGraphData(event.detail.value.id); // Passing pet care service Id
          }
        }, {
          key: "getGraphData",
          value: function getGraphData(serviceId) {
            var _this2 = this;

            this.api.showLoader();
            this.api.dashboardPerformace({
              serviceTypeId: serviceId
            }).subscribe(function (data) {
              _this2.isAPILoaded = true;

              _this2.api.hideLoader();

              if (data.status) {
                _this2.isGraphDataAvailable = true;
                _this2.graphData = data.data;
              } else {
                _this2.isGraphDataAvailable = false;

                _this2.api.showToast("Performance Data not available", "3000", "bottom");
              }
            }, function (err) {
              _this2.isGraphDataAvailable = false;
              _this2.isAPILoaded = false;

              _this2.api.autoLogout(err, {
                serviceTypeId: serviceId
              });
            });
          }
        }]);

        return SitterPerformacePage;
      }();

      _SitterPerformacePage.ctorParameters = function () {
        return [{
          type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService
        }];
      };

      _SitterPerformacePage = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'app-sitter-performace',
        template: _raw_loader_sitter_performace_page_html__WEBPACK_IMPORTED_MODULE_0__["default"],
        styles: [_sitter_performace_page_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
      })], _SitterPerformacePage);
      /***/
    },

    /***/
    4461:
    /*!***********************************************************************************************!*\
      !*** ./node_modules/angular-svg-round-progressbar/fesm2020/angular-svg-round-progressbar.mjs ***!
      \***********************************************************************************************/

    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ROUND_PROGRESS_DEFAULTS": function ROUND_PROGRESS_DEFAULTS() {
          return (
            /* binding */
            _ROUND_PROGRESS_DEFAULTS
          );
        },

        /* harmony export */
        "ROUND_PROGRESS_DEFAULTS_PROVIDER": function ROUND_PROGRESS_DEFAULTS_PROVIDER() {
          return (
            /* binding */
            _ROUND_PROGRESS_DEFAULTS_PROVIDER
          );
        },

        /* harmony export */
        "RoundProgressComponent": function RoundProgressComponent() {
          return (
            /* binding */
            _RoundProgressComponent
          );
        },

        /* harmony export */
        "RoundProgressEase": function RoundProgressEase() {
          return (
            /* binding */
            _RoundProgressEase
          );
        },

        /* harmony export */
        "RoundProgressModule": function RoundProgressModule() {
          return (
            /* binding */
            _RoundProgressModule
          );
        },

        /* harmony export */
        "RoundProgressService": function RoundProgressService() {
          return (
            /* binding */
            _RoundProgressService
          );
        },

        /* harmony export */
        "RoundprogressModule": function RoundprogressModule() {
          return (
            /* binding */
            _RoundProgressModule
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      37716);
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      38583);

      var _c0 = ["path"];
      var DEGREE_IN_RADIANS = Math.PI / 180;

      var _RoundProgressService = /*#__PURE__*/function () {
        function _RoundProgressService(document) {
          _classCallCheck(this, _RoundProgressService);

          this.supportsSvg = !!(document && document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);
          this.base = document && document.head.querySelector('base');
          this.hasPerf = typeof window !== 'undefined' && window.performance && window.performance.now && typeof window.performance.now() === 'number';
        }
        /**
         * Resolves a SVG color against the page's `base` tag.
         */


        _createClass(_RoundProgressService, [{
          key: "resolveColor",
          value: function resolveColor(color) {
            if (this.base && this.base.href) {
              var hashIndex = color.indexOf('#');

              if (hashIndex > -1 && color.indexOf('url') > -1) {
                return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);
              }
            }

            return color;
          }
          /**
           * Generates a timestamp.
           */

        }, {
          key: "getTimestamp",
          value: function getTimestamp() {
            return this.hasPerf ? window.performance.now() : Date.now();
          }
          /**
           * Generates the value for an SVG arc.
           *
           * @param current Current value.
           * @param total Maximum value.
           * @param pathRadius Radius of the SVG path.
           * @param elementRadius Radius of the SVG container.
           * @param isSemicircle Whether the element should be a semicircle.
           */

        }, {
          key: "getArc",
          value: function getArc(current, total, pathRadius, elementRadius) {
            var isSemicircle = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var value = Math.max(0, Math.min(current || 0, total));
            var maxAngle = isSemicircle ? 180 : 359.9999;
            var percentage = total === 0 ? maxAngle : value / total * maxAngle;

            var start = this._polarToCartesian(elementRadius, pathRadius, percentage);

            var end = this._polarToCartesian(elementRadius, pathRadius, 0);

            var arcSweep = percentage <= 180 ? 0 : 1;
            return "M ".concat(start, " A ").concat(pathRadius, " ").concat(pathRadius, " 0 ").concat(arcSweep, " 0 ").concat(end);
          }
          /**
           * Converts polar cooradinates to Cartesian.
           *
           * @param elementRadius Radius of the wrapper element.
           * @param pathRadius Radius of the path being described.
           * @param angleInDegrees Degree to be converted.
           */

        }, {
          key: "_polarToCartesian",
          value: function _polarToCartesian(elementRadius, pathRadius, angleInDegrees) {
            var angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;
            var x = elementRadius + pathRadius * Math.cos(angleInRadians);
            var y = elementRadius + pathRadius * Math.sin(angleInRadians);
            return x + ' ' + y;
          }
        }]);

        return _RoundProgressService;
      }();

      _RoundProgressService.ɵfac = function RoundProgressService_Factory(t) {
        return new (t || _RoundProgressService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT, 8));
      };

      _RoundProgressService.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: _RoundProgressService,
        factory: _RoundProgressService.ɵfac,
        providedIn: 'root'
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_RoundProgressService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
              args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT]
            }]
          }];
        }, null);
      })();

      var _ROUND_PROGRESS_DEFAULTS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('ROUND_PROGRESS_DEFAULTS');

      var _ROUND_PROGRESS_DEFAULTS_PROVIDER = {
        provide: _ROUND_PROGRESS_DEFAULTS,
        useValue: {
          radius: 125,
          animation: 'easeOutCubic',
          animationDelay: null,
          duration: 500,
          stroke: 15,
          color: '#45CCCE',
          background: '#EAEAEA',
          responsive: false,
          clockwise: true,
          semicircle: false,
          rounded: false
        }
      };
      /**
       * TERMS OF USE - EASING EQUATIONS
       * Open source under the BSD License.
       *
       * Copyright © 2001 Robert Penner
       * All rights reserved.
       * Redistribution and use in source and binary forms, with or without modification, are permitted
       * provided that the following conditions are met:
       *
       * Redistributions of source code must retain the above copyright notice, this list of conditions
       * and the following disclaimer.
       *
       * Redistributions in binary form must reproduce the above copyright notice, this list of conditions
       * and the following disclaimer in the documentation and/or other materials provided with the
       * distribution.
       *
       * Neither the name of the author nor the names of contributors may be used to endorse or promote
       * products derived from this software without specific prior written permission.
       *
       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
       * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
       * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
       * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
       * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
       * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
       * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
       * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
       */

      var _RoundProgressEase = /*#__PURE__*/function () {
        function _RoundProgressEase() {
          _classCallCheck(this, _RoundProgressEase);
        }

        _createClass(_RoundProgressEase, [{
          key: "linearEase",
          value: // t: current time (or position) of the neonate. This can be seconds or frames, steps,
          // seconds, ms, whatever – as long as the unit is the same as is used for the total time.
          // b: beginning value of the property.
          // c: change between the beginning and destination value of the property.
          // d: total time of the neonate.
          function linearEase(t, b, c, d) {
            return c * t / d + b;
          }
        }, {
          key: "easeInQuad",
          value: function easeInQuad(t, b, c, d) {
            return c * (t /= d) * t + b;
          }
        }, {
          key: "easeOutQuad",
          value: function easeOutQuad(t, b, c, d) {
            return -c * (t /= d) * (t - 2) + b;
          }
        }, {
          key: "easeInOutQuad",
          value: function easeInOutQuad(t, b, c, d) {
            // eslint-disable-next-line no-cond-assign
            if ((t /= d / 2) < 1) {
              return c / 2 * t * t + b;
            }

            return -c / 2 * (--t * (t - 2) - 1) + b;
          }
        }, {
          key: "easeInCubic",
          value: function easeInCubic(t, b, c, d) {
            return c * (t /= d) * t * t + b;
          }
        }, {
          key: "easeOutCubic",
          value: function easeOutCubic(t, b, c, d) {
            return c * ((t = t / d - 1) * t * t + 1) + b;
          }
        }, {
          key: "easeInOutCubic",
          value: function easeInOutCubic(t, b, c, d) {
            // eslint-disable-next-line no-cond-assign
            if ((t /= d / 2) < 1) {
              return c / 2 * t * t * t + b;
            }

            return c / 2 * ((t -= 2) * t * t + 2) + b;
          }
        }, {
          key: "easeInQuart",
          value: function easeInQuart(t, b, c, d) {
            return c * (t /= d) * t * t * t + b;
          }
        }, {
          key: "easeOutQuart",
          value: function easeOutQuart(t, b, c, d) {
            return -c * ((t = t / d - 1) * t * t * t - 1) + b;
          }
        }, {
          key: "easeInOutQuart",
          value: function easeInOutQuart(t, b, c, d) {
            // eslint-disable-next-line no-cond-assign
            if ((t /= d / 2) < 1) {
              return c / 2 * t * t * t * t + b;
            }

            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
          }
        }, {
          key: "easeInQuint",
          value: function easeInQuint(t, b, c, d) {
            return c * (t /= d) * t * t * t * t + b;
          }
        }, {
          key: "easeOutQuint",
          value: function easeOutQuint(t, b, c, d) {
            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
          }
        }, {
          key: "easeInOutQuint",
          value: function easeInOutQuint(t, b, c, d) {
            // eslint-disable-next-line no-cond-assign
            if ((t /= d / 2) < 1) {
              return c / 2 * t * t * t * t * t + b;
            }

            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
          }
        }, {
          key: "easeInSine",
          value: function easeInSine(t, b, c, d) {
            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
          }
        }, {
          key: "easeOutSine",
          value: function easeOutSine(t, b, c, d) {
            return c * Math.sin(t / d * (Math.PI / 2)) + b;
          }
        }, {
          key: "easeInOutSine",
          value: function easeInOutSine(t, b, c, d) {
            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
          }
        }, {
          key: "easeInExpo",
          value: function easeInExpo(t, b, c, d) {
            return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;
          }
        }, {
          key: "easeOutExpo",
          value: function easeOutExpo(t, b, c, d) {
            return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;
          }
        }, {
          key: "easeInOutExpo",
          value: function easeInOutExpo(t, b, c, d) {
            if (t === 0) {
              return b;
            }

            if (t === d) {
              return b + c;
            } // eslint-disable-next-line no-cond-assign


            if ((t /= d / 2) < 1) {
              return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
            }

            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;
          }
        }, {
          key: "easeInCirc",
          value: function easeInCirc(t, b, c, d) {
            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
          }
        }, {
          key: "easeOutCirc",
          value: function easeOutCirc(t, b, c, d) {
            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;
          }
        }, {
          key: "easeInOutCirc",
          value: function easeInOutCirc(t, b, c, d) {
            // eslint-disable-next-line no-cond-assign
            if ((t /= d / 2) < 1) {
              return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
            }

            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
          }
        }, {
          key: "easeInElastic",
          value: function easeInElastic(t, b, c, d) {
            var p = d * 0.3;
            var s = 1.70158;
            var a = c;

            if (t === 0) {
              return b;
            } // eslint-disable-next-line no-cond-assign


            if ((t /= d) === 1) {
              return b + c;
            }

            if (a < Math.abs(c)) {
              a = c;
              s = p / 4;
            } else {
              s = p / (2 * Math.PI) * Math.asin(c / a);
            }

            return -(a * Math.pow(2, 10 * t--) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
          }
        }, {
          key: "easeOutElastic",
          value: function easeOutElastic(t, b, c, d) {
            var p = d * 0.3;
            var s = 1.70158;
            var a = c;

            if (t === 0) {
              return b;
            } // eslint-disable-next-line no-cond-assign


            if ((t /= d) === 1) {
              return b + c;
            }

            if (a < Math.abs(c)) {
              a = c;
              s = p / 4;
            } else {
              s = p / (2 * Math.PI) * Math.asin(c / a);
            }

            return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;
          }
        }, {
          key: "easeInOutElastic",
          value: function easeInOutElastic(t, b, c, d) {
            var p = d * (0.3 * 1.5);
            var s = 1.70158;
            var a = c;

            if (t === 0) {
              return b;
            } // eslint-disable-next-line no-cond-assign


            if ((t /= d / 2) === 2) {
              return b + c;
            }

            if (a < Math.abs(c)) {
              a = c;
              s = p / 4;
            } else {
              s = p / (2 * Math.PI) * Math.asin(c / a);
            }

            if (t < 1) {
              return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
            }

            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;
          }
        }, {
          key: "easeInBack",
          value: function easeInBack(t, b, c, d) {
            var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.70158;
            return c * (t /= d) * t * ((s + 1) * t - s) + b;
          }
        }, {
          key: "easeOutBack",
          value: function easeOutBack(t, b, c, d) {
            var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.70158;
            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
          }
        }, {
          key: "easeInOutBack",
          value: function easeInOutBack(t, b, c, d) {
            var s = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.70158;

            // eslint-disable-next-line no-cond-assign
            if ((t /= d / 2) < 1) {
              return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;
            }

            return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
          }
        }, {
          key: "easeInBounce",
          value: function easeInBounce(t, b, c, d) {
            return c - this.easeOutBounce(d - t, 0, c, d) + b;
          }
        }, {
          key: "easeOutBounce",
          value: function easeOutBounce(t, b, c, d) {
            // eslint-disable-next-line no-cond-assign
            if ((t /= d) < 1 / 2.75) {
              return c * (7.5625 * t * t) + b;
            } else if (t < 2 / 2.75) {
              return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;
            } else if (t < 2.5 / 2.75) {
              return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;
            }

            return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;
          }
        }, {
          key: "easeInOutBounce",
          value: function easeInOutBounce(t, b, c, d) {
            if (t < d / 2) {
              return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;
            }

            return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;
          }
        }]);

        return _RoundProgressEase;
      }();

      _RoundProgressEase.ɵfac = function RoundProgressEase_Factory(t) {
        return new (t || _RoundProgressEase)();
      };

      _RoundProgressEase.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: _RoundProgressEase,
        factory: _RoundProgressEase.ɵfac,
        providedIn: 'root'
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_RoundProgressEase, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], null, null);
      })();

      var _RoundProgressComponent = /*#__PURE__*/function () {
        function _RoundProgressComponent(service, easing, defaults, ngZone) {
          _classCallCheck(this, _RoundProgressComponent);

          this.service = service;
          this.easing = easing;
          this.defaults = defaults;
          this.ngZone = ngZone;
          this.currentLinecap = '';
          /** Radius of the circle. */

          this.radius = this.defaults.radius;
          /** Name of the easing function to use when animating. */

          this.animation = this.defaults.animation;
          /** Time in millisconds by which to delay the animation. */

          this.animationDelay = this.defaults.animationDelay;
          /** Duration of the animation. */

          this.duration = this.defaults.duration;
          /** Width of the circle's stroke. */

          this.stroke = this.defaults.stroke;
          /** Color of the circle. */

          this.color = this.defaults.color;
          /** Background color of the circle. */

          this.background = this.defaults.background;
          /** Whether the circle should take up the width of its parent. */

          this.responsive = this.defaults.responsive;
          /** Whether the circle is filling up clockwise. */

          this.clockwise = this.defaults.clockwise;
          /** Whether to render a semicircle. */

          this.semicircle = this.defaults.semicircle;
          /** Whether the tip of the progress should be rounded off. */

          this.rounded = this.defaults.rounded;
          /** Emits when a new value has been rendered. */

          this.onRender = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.lastAnimationId = 0;
        }
        /** Animates a change in the current value. */


        _createClass(_RoundProgressComponent, [{
          key: "_animateChange",
          value: function _animateChange(from, to) {
            var _this3 = this;

            if (typeof from !== 'number') {
              from = 0;
            }

            to = this._clamp(to);
            from = this._clamp(from);
            var self = this;
            var changeInValue = to - from;
            var duration = self.duration; // Avoid firing change detection for each of the animation frames.

            self.ngZone.runOutsideAngular(function () {
              var start = function start() {
                var startTime = self.service.getTimestamp();
                var id = ++self.lastAnimationId;
                requestAnimationFrame(function animation() {
                  var currentTime = Math.min(self.service.getTimestamp() - startTime, duration);
                  var value = self.easing[self.animation](currentTime, from, changeInValue, duration);

                  self._updatePath(value);

                  if (self.onRender.observers.length > 0) {
                    self.onRender.emit(value);
                  }

                  if (id === self.lastAnimationId && currentTime < duration) {
                    requestAnimationFrame(animation);
                  }
                });
              };

              if (_this3.animationDelay > 0) {
                setTimeout(start, _this3.animationDelay);
              } else {
                start();
              }
            });
          }
          /** Updates the path apperance. */

        }, {
          key: "_updatePath",
          value: function _updatePath(value) {
            if (this.path) {
              var arc = this.service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle);
              var path = this.path.nativeElement; // Remove the rounded line cap when the value is zero,
              // because SVG won't allow it to disappear completely.

              var linecap = this.rounded && value > 0 ? 'round' : ''; // This is called on each animation frame so avoid
              // updating the line cap unless it has changed.

              if (linecap !== this.currentLinecap) {
                this.currentLinecap = linecap;
                path.style.strokeLinecap = linecap;
              }

              path.setAttribute('d', arc);
            }
          }
          /** Clamps a value between the maximum and 0. */

        }, {
          key: "_clamp",
          value: function _clamp(value) {
            return Math.max(0, Math.min(value || 0, this.max));
          }
          /** Determines the SVG transforms for the <path> node. */

        }, {
          key: "getPathTransform",
          value: function getPathTransform() {
            var diameter = this._getDiameter();

            if (this.semicircle) {
              return this.clockwise ? "translate(0, ".concat(diameter, ") rotate(-90)") : "translate(".concat(diameter + ',' + diameter, ") rotate(90) scale(-1, 1)");
            } else if (!this.clockwise) {
              return "scale(-1, 1) translate(-".concat(diameter, " 0)");
            }
          }
          /** Resolves a color through the service. */

        }, {
          key: "resolveColor",
          value: function resolveColor(color) {
            return this.service.resolveColor(color);
          }
          /** Change detection callback. */

        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            if (changes.current) {
              this._animateChange(changes.current.previousValue, changes.current.currentValue);
            } else {
              this._updatePath(this.current);
            }
          }
          /** Diameter of the circle. */

        }, {
          key: "_getDiameter",
          value: function _getDiameter() {
            return this.radius * 2;
          }
          /** The CSS height of the wrapper element. */

        }, {
          key: "_getElementHeight",
          value: function _getElementHeight() {
            if (!this.responsive) {
              return (this.semicircle ? this.radius : this._getDiameter()) + 'px';
            }
          }
          /** Viewbox for the SVG element. */

        }, {
          key: "_getViewBox",
          value: function _getViewBox() {
            var diameter = this._getDiameter();

            return "0 0 ".concat(diameter, " ").concat(this.semicircle ? this.radius : diameter);
          }
          /** Bottom padding for the wrapper element. */

        }, {
          key: "_getPaddingBottom",
          value: function _getPaddingBottom() {
            if (this.responsive) {
              return this.semicircle ? '50%' : '100%';
            }
          }
        }]);

        return _RoundProgressComponent;
      }();

      _RoundProgressComponent.ɵfac = function RoundProgressComponent_Factory(t) {
        return new (t || _RoundProgressComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_RoundProgressService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_RoundProgressEase), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ROUND_PROGRESS_DEFAULTS), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone));
      };

      _RoundProgressComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _RoundProgressComponent,
        selectors: [["round-progress"]],
        viewQuery: function RoundProgressComponent_Query(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 5);
          }

          if (rf & 2) {
            var _t;

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.path = _t.first);
          }
        },
        hostAttrs: ["role", "progressbar"],
        hostVars: 11,
        hostBindings: function RoundProgressComponent_HostBindings(rf, ctx) {
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-valuemin", 0)("aria-valuemax", ctx.max)("aria-valuenow", ctx.current);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.responsive ? "" : ctx._getDiameter() + "px")("height", ctx._getElementHeight())("padding-bottom", ctx._getPaddingBottom());

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("responsive", ctx.responsive);
          }
        },
        inputs: {
          current: "current",
          max: "max",
          radius: "radius",
          animation: "animation",
          animationDelay: "animationDelay",
          duration: "duration",
          stroke: "stroke",
          color: "color",
          background: "background",
          responsive: "responsive",
          clockwise: "clockwise",
          semicircle: "semicircle",
          rounded: "rounded"
        },
        outputs: {
          onRender: "onRender"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
        decls: 4,
        vars: 13,
        consts: [["xmlns", "http://www.w3.org/2000/svg"], ["fill", "none"], ["path", ""]],
        template: function RoundProgressComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "svg", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "circle", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "path", 1, 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("viewBox", ctx._getViewBox());

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("stroke", ctx.resolveColor(ctx.background))("stroke-width", ctx.stroke);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("cx", ctx.radius)("cy", ctx.radius)("r", ctx.radius - ctx.stroke / 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("stroke-width", ctx.stroke)("stroke", ctx.resolveColor(ctx.color));

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("transform", ctx.getPathTransform());
          }
        },
        styles: ["[_nghost-%COMP%]{display:block;position:relative;overflow:hidden}.responsive[_nghost-%COMP%]{width:100%;padding-bottom:100%}.responsive[_nghost-%COMP%] > svg[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0}"],
        changeDetection: 0
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_RoundProgressComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'round-progress',
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            host: {
              role: 'progressbar',
              '[attr.aria-valuemin]': '0',
              '[attr.aria-valuemax]': 'max',
              '[attr.aria-valuenow]': 'current',
              '[style.width]': 'responsive ? "" : _getDiameter() + "px"',
              '[style.height]': '_getElementHeight()',
              '[style.padding-bottom]': '_getPaddingBottom()',
              '[class.responsive]': 'responsive'
            },
            template: "<svg xmlns=\"http://www.w3.org/2000/svg\" [attr.viewBox]=\"_getViewBox()\">\n  <circle\n    fill=\"none\"\n    [attr.cx]=\"radius\"\n    [attr.cy]=\"radius\"\n    [attr.r]=\"radius - stroke / 2\"\n    [style.stroke]=\"resolveColor(background)\"\n    [style.stroke-width]=\"stroke\"/>\n\n  <path\n    #path\n    fill=\"none\"\n    [style.stroke-width]=\"stroke\"\n    [style.stroke]=\"resolveColor(color)\"\n    [attr.transform]=\"getPathTransform()\"/>\n</svg>\n",
            styles: [":host{display:block;position:relative;overflow:hidden}:host(.responsive){width:100%;padding-bottom:100%}:host(.responsive)>svg{position:absolute;width:100%;height:100%;top:0;left:0}\n"]
          }]
        }], function () {
          return [{
            type: _RoundProgressService
          }, {
            type: _RoundProgressEase
          }, {
            type: undefined,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
              args: [_ROUND_PROGRESS_DEFAULTS]
            }]
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
          }];
        }, {
          path: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
            args: ['path']
          }],
          current: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          max: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          radius: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          animation: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          animationDelay: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          duration: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          stroke: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          color: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          background: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          responsive: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          clockwise: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          semicircle: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          rounded: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          onRender: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }]
        });
      })();

      var _RoundProgressModule = /*#__PURE__*/_createClass(function _RoundProgressModule() {
        _classCallCheck(this, _RoundProgressModule);
      });

      _RoundProgressModule.ɵfac = function RoundProgressModule_Factory(t) {
        return new (t || _RoundProgressModule)();
      };

      _RoundProgressModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: _RoundProgressModule,
        declarations: [_RoundProgressComponent],
        exports: [_RoundProgressComponent]
      });
      _RoundProgressModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        providers: [_ROUND_PROGRESS_DEFAULTS_PROVIDER]
      });

      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_RoundProgressModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
          args: [{
            declarations: [_RoundProgressComponent],
            exports: [_RoundProgressComponent],
            providers: [_ROUND_PROGRESS_DEFAULTS_PROVIDER]
          }]
        }], null, null);
      })();
      /**
       * Generated bundle index. Do not edit.
       */
      //# sourceMappingURL=angular-svg-round-progressbar.mjs.map

      /***/

    },

    /***/
    47473:
    /*!***************************************************************!*\
      !*** ./src/app/sitter-performace/sitter-performace.page.scss ***!
      \***************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".progress-wrapper {\n  position: relative;\n  display: flex;\n  justify-content: center;\n}\n\n.progress-text {\n  font-size: 13px;\n  font-weight: 600;\n  justify-content: center;\n  display: flex;\n}\n\n.progress-text-percentage {\n  top: 50%;\n  bottom: auto;\n  left: 50%;\n  transform: translateY(-50%) translateX(-50%);\n  position: absolute;\n  font-size: 13px;\n  font-weight: 600;\n}\n\n.progress-bars-container {\n  padding: 16px;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.progress-bars-container .progress-text {\n  font-size: 12px;\n  padding-top: 10px;\n  color: #FE4164;\n}\n\n.progress-bars-container .big-progress-bar {\n  margin-bottom: 30px;\n  border-bottom: 1px dashed #e0e0e0;\n  padding-bottom: 30px;\n}\n\n.progress-bars-container .big-progress-bar .progress-text-percentage {\n  font-size: 40px;\n  top: calc(50% - 10px);\n}\n\n.progress-bars-container .big-progress-bar .progress-text {\n  font-size: 16px;\n  padding-top: 10px;\n  color: #FE4164;\n  top: calc(50% + 15px);\n  bottom: auto;\n  left: 50%;\n  transform: translateY(-50%) translateX(-50%);\n  position: absolute;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdHRlci1wZXJmb3JtYWNlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0FBQ0o7O0FBRUE7RUFJSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSx1QkFBQTtFQUNBLGFBQUE7QUFGSjs7QUFLQTtFQUNJLFFBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtFQUNBLDRDQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFGSjs7QUFLQTtFQUNJLGFBQUE7RUFDQSxnQ0FBQTtBQUZKOztBQUdJO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQURSOztBQUdJO0VBQ0ksbUJBQUE7RUFDQSxpQ0FBQTtFQUNBLG9CQUFBO0FBRFI7O0FBRVE7RUFDSSxlQUFBO0VBQ0EscUJBQUE7QUFBWjs7QUFFUTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxxQkFBQTtFQUNKLFlBQUE7RUFDQSxTQUFBO0VBQ0EsNENBQUE7RUFDQSxrQkFBQTtBQUFKIiwiZmlsZSI6InNpdHRlci1wZXJmb3JtYWNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9ncmVzcy13cmFwcGVye1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4ucHJvZ3Jlc3MtdGV4dHtcbiAgICAvLyB0b3A6IDQwJTtcbiAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgLy8gd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuLnByb2dyZXNzLXRleHQtcGVyY2VudGFnZXtcbiAgICB0b3A6IDUwJTtcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLnByb2dyZXNzLWJhcnMtY29udGFpbmVye1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG4gICAgLnByb2dyZXNzLXRleHR7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgICAgIGNvbG9yOiAjRkU0MTY0O1xuICAgIH1cbiAgICAuYmlnLXByb2dyZXNzLWJhcntcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZTBlMGUwO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbiAgICAgICAgLnByb2dyZXNzLXRleHQtcGVyY2VudGFnZXtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcbiAgICAgICAgICAgIHRvcDogY2FsYyg1MCUgLSAxMHB4KTtcbiAgICAgICAgfVxuICAgICAgICAucHJvZ3Jlc3MtdGV4dHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgY29sb3I6ICNGRTQxNjQ7XG4gICAgICAgIHRvcDogY2FsYyg1MCUgKyAxNXB4KTtcbiAgICBib3R0b206IGF1dG87XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB9XG4gICAgfVxufSJdfQ== */";
      /***/
    },

    /***/
    6995:
    /*!*****************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/sitter-performace/sitter-performace.page.html ***!
      \*****************************************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\" color=\"theme\">\n      <ion-back-button defaultHref=\"home/tabs/profile-menu\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Performance Score</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-item>\n    <ion-label position=\"stacked\">View Performance for Service\n      <small class=\"error\">*</small>\n    </ion-label>\n\n    <ion-select (ionChange)=\"petCareSelectedService($event)\" placeholder=\"Please select a service\"\n      interface=\"action-sheet\">\n\n      <ion-select-option class=\"fs-14\" *ngFor=\"let service of petCareServices, let idx = index\"\n        [hidden]=\"service?.enabled != '1'\" [value]=\"service\">{{service?.serviceName}}\n      </ion-select-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-card *ngIf=\"isAPILoaded == true && isGraphDataAvailable == false\" color=\"note\">\n    <ion-card-header>\n      No Data Available for Performance Score\n    </ion-card-header>\n  </ion-card>\n\n  <div class=\"progress-bars-container\" *ngIf=\"isAPILoaded == true && isGraphDataAvailable == true\">\n    <div class=\"big-progress-bar\">\n      <div class=\"progress-wrapper\">\n        <round-progress [current]=\"graphData?.repeatscore?.score\" [max]=\"100\" [stroke]=\"10\" [radius]=\"100\"\n          [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\" [clockwise]=\"clockwise\"\n          [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\" [duration]=\"duration\"\n          [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n        </round-progress>\n        <div class=\"progress-text\">\n          <ion-label>Repeat Score </ion-label>\n        </div>\n        <div class=\"progress-text-percentage\">\n          <ion-label> {{graphData?.repeatscore?.score}} </ion-label>\n        </div>\n      </div>\n     \n    </div>\n    <ion-row>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n          <round-progress [current]=\"max\" [max]=\"100\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.repeatscore?.totalclients}}</ion-label>\n          </div>\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Total Clients </ion-label>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n          <round-progress [current]=\"max\" [max]=\"100\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.repeatscore?.repeatedclients}} </ion-label>\n          </div>\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Repeat Clients </ion-label>\n        </div>\n      </ion-col>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n          <round-progress [current]=\"graphData?.repeatscore?.repeatstays\" [max]=\"100\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.repeatscore?.repeatstays}}  </ion-label>\n          </div>\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Repeat Stays </ion-label>\n        </div>\n      </ion-col>\n    </ion-row>\n  </div>\n  <div class=\"progress-bars-container\" *ngIf=\"isAPILoaded == true && isGraphDataAvailable == true\">\n    <div class=\"big-progress-bar\">\n      <div class=\"progress-wrapper\">\n\n        <round-progress [current]=\"graphData?.bookingscore?.score\" [max]=\"max\" [stroke]=\"10\" [radius]=\"100\"\n          [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\" [clockwise]=\"clockwise\"\n          [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\" [duration]=\"duration\"\n          [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n        </round-progress>\n        <div class=\"progress-text\">\n          <ion-label>Booking Score </ion-label>\n        </div>\n        \n  \n        <div class=\"progress-text-percentage\">\n          <ion-label> {{graphData?.bookingscore?.score}} % </ion-label>\n        </div>\n  \n      </div>\n      \n    </div>\n    <ion-row>\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n\n          <round-progress [current]=\"graphData?.bookingscore?.acceptRate\" [max]=\"max\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n\n          \n\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.bookingscore?.acceptRate}} % </ion-label>\n          </div>\n\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Booking Rate </ion-label>\n        </div>\n      </ion-col>\n\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n\n          <round-progress [current]=\"graphData?.bookingscore?.reviewRate\" [max]=\"max\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n\n          \n\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.bookingscore?.reviewRate}} % </ion-label>\n          </div>\n\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Review Rate </ion-label>\n        </div>\n      </ion-col>\n\n      <ion-col size=\"4\" class=\"center\">\n        <div class=\"progress-wrapper\">\n\n          <round-progress [current]=\"max\" [max]=\"max\" [stroke]=\"stroke\"\n            [radius]=\"radius\" [semicircle]=\"semicircle\" [rounded]=\"rounded\" [responsive]=\"responsive\"\n            [clockwise]=\"clockwise\" [color]=\"gradient ? 'url(#gradient)' : color\" [background]=\"background\"\n            [duration]=\"duration\" [animation]=\"animation\" [animationDelay]=\"animationDelay\">\n          </round-progress>\n\n          \n\n          <div class=\"progress-text-percentage\">\n            <ion-label> {{graphData?.bookingscore?.responseRate}} </ion-label>\n          </div>\n\n        </div>\n        <div class=\"progress-text\">\n          <ion-label>Response Time </ion-label>\n        </div>\n      </ion-col>\n    </ion-row>\n\n  </div>\n\n</ion-content>";
      /***/
    }
  }]);
})();
//# sourceMappingURL=src_app_sitter-performace_sitter-performace_module_ts-es5.js.map