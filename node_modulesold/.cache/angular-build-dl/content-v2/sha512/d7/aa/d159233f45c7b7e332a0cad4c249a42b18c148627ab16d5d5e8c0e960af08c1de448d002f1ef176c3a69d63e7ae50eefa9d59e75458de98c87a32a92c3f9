(self["webpackChunkpetcloud"] = self["webpackChunkpetcloud"] || []).push([["src_app_directory-listing-map_directory-listing-map_module_ts"],{

/***/ 69102:
/*!***********************************************************************!*\
  !*** ./src/app/directory-listing-map/directory-listing-map.module.ts ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DirectoryListingMapPageModule": function() { return /* binding */ DirectoryListingMapPageModule; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngx-google-places-autocomplete */ 44836);
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ionic_native_call_number_ngx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ionic-native/call-number/ngx */ 64687);
/* harmony import */ var _ionic_native_clipboard_ngx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic-native/clipboard/ngx */ 69390);
/* harmony import */ var _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic-native/location-accuracy/ngx */ 16030);
/* harmony import */ var _directory_listing_map_page__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./directory-listing-map.page */ 6639);











const routes = [
    {
        path: '',
        component: _directory_listing_map_page__WEBPACK_IMPORTED_MODULE_4__.DirectoryListingMapPage
    }
];
let DirectoryListingMapPageModule = class DirectoryListingMapPageModule {
};
DirectoryListingMapPageModule = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.NgModule)({
        entryComponents: [],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormsModule,
            _ionic_angular__WEBPACK_IMPORTED_MODULE_9__.IonicModule,
            ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_0__.GooglePlaceModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_10__.RouterModule.forChild(routes)
        ],
        providers: [_ionic_native_call_number_ngx__WEBPACK_IMPORTED_MODULE_1__.CallNumber, _ionic_native_clipboard_ngx__WEBPACK_IMPORTED_MODULE_2__.Clipboard, _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_3__.LocationAccuracy],
        declarations: [_directory_listing_map_page__WEBPACK_IMPORTED_MODULE_4__.DirectoryListingMapPage],
    })
], DirectoryListingMapPageModule);



/***/ }),

/***/ 6639:
/*!*********************************************************************!*\
  !*** ./src/app/directory-listing-map/directory-listing-map.page.ts ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DirectoryListingMapPage": function() { return /* binding */ DirectoryListingMapPage; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_directory_listing_map_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./directory-listing-map.page.html */ 78075);
/* harmony import */ var _directory_listing_map_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directory-listing-map.page.scss */ 51851);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/petcloud-api.service */ 78975);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _listing_category_listing_category_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../listing-category/listing-category.component */ 36528);
/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! leaflet */ 64216);
/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 68939);
/* harmony import */ var _ionic_storage__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ionic/storage */ 38605);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic-native/geolocation/ngx */ 87152);
/* harmony import */ var _ionic_native_call_number_ngx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ionic-native/call-number/ngx */ 64687);
/* harmony import */ var _socailshare_socailshare_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../socailshare/socailshare.component */ 97513);
/* harmony import */ var _ionic_native_diagnostic_ngx__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ionic-native/diagnostic/ngx */ 34255);
/* harmony import */ var _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ionic-native/location-accuracy/ngx */ 16030);
/* harmony import */ var _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ionic-native/android-permissions/ngx */ 79315);



















let DirectoryListingMapPage = class DirectoryListingMapPage {
    constructor(api, modalCtrl, route, router, storage, ngZone, callNumber, modelCtrl, geolocation, diagnostic, androidPermission, locationAccuracy, platform, _document, elementRef) {
        this.api = api;
        this.modalCtrl = modalCtrl;
        this.route = route;
        this.router = router;
        this.storage = storage;
        this.ngZone = ngZone;
        this.callNumber = callNumber;
        this.modelCtrl = modelCtrl;
        this.geolocation = geolocation;
        this.diagnostic = diagnostic;
        this.androidPermission = androidPermission;
        this.locationAccuracy = locationAccuracy;
        this.platform = platform;
        this._document = _document;
        this.elementRef = elementRef;
        this.mapPinsData = [];
        this.data = { latitude: "", longitude: "", selected_cate: "", serviceName: "", locationName: "", distance: "" };
        this.isDataFilter = false;
        this.requestForGPSPremission = true;
        this.options = {
            types: ["(regions)"],
            componentRestrictions: { country: "AU" },
            bounds: null,
            fields: null,
            strictBounds: null,
            origin: null
        };
        this.isLoading = false;
        this.route.queryParams.subscribe((params) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            if (Object.keys(params).length === 0 != true) {
                this.data.locationName = params.locationName;
                this.data.latitude = params.latitude;
                this.data.longitude = params.longitude;
                this.data.selected_cate = params.selected_cate;
                this.data.distance = params.distance;
                this.getMapsPin();
            }
            else {
                this.isLocationAuthorized();
            }
        }));
    }
    ngOnInit() { }
    ;
    //Check if application having Location Authorization
    isLocationAuthorized() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            yield this.platform.ready();
            this.diagnostic.isLocationEnabled().then((isEnabled) => {
                if (isEnabled) {
                    this.diagnostic.isLocationAuthorized().then((success) => {
                        if (success) {
                            this.requestForGPSPremission = true;
                            this.getLocationAccuracy();
                        }
                        else {
                            this.requestForGPSPremission = false;
                        }
                    }, err => {
                    });
                }
                else {
                    this.requestForGPSPremission = false;
                }
            }, err => {
                console.log("not available is location enabled", err);
            });
        });
    }
    getLocationAccuracy() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            yield this.platform.ready();
            this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then((response_gps) => {
                // When GPS Turned ON call method to get Accurate location coordinates
                this.getCurrentLatLong();
            }, error => {
                console.log("error in turn on gps", error);
            });
        });
    }
    ionViewDidLeave() {
        var _a, _b;
        if ((_b = (_a = this.map) === null || _a === void 0 ? void 0 : _a._panes) === null || _b === void 0 ? void 0 : _b.markerPane) {
            this.map._panes.markerPane.remove();
            //this._document.getElementById("map").outerHTML = "";
        }
    }
    getCurrentLatLong() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            yield this.geolocation.getCurrentPosition().then((resp) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
                this.data.latitude = yield resp.coords.latitude.toString();
                this.data.longitude = yield resp.coords.longitude.toString();
                yield this.api.getSuburb(this.data.latitude, this.data.longitude).subscribe((response) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
                    this.data.locationName = yield response.locality;
                }), (err) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
                }));
                this.getMapsPin();
            }));
        });
    }
    getMapsPin() {
        let param = {
            latitude: this.data.latitude,
            longitude: this.data.longitude,
            distance: this.data.distance,
            selected_cate: this.data.selected_cate ? this.data.selected_cate : "",
        };
        console.log("getMap pins param", param);
        this.api.showLoader();
        this.isLoading = true;
        this.api
            .getMapPins(param)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.finalize)(() => {
            this.api.hideLoader();
            this.isLoading = false;
        })).subscribe((res) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            this.mapPinsData = [];
            if (res.success) {
                if (res.listing_data.length) {
                    this.mapPinsData = yield res.listing_data;
                    // Set Map Lat Long to 1st Index in Leaflet
                    this.data.latitude = yield this.mapPinsData[0]._geolocation_lat;
                    this.data.longitude = yield this.mapPinsData[0]._geolocation_long;
                    this.initMap(yield this.mapPinsData);
                }
                else {
                    this.clearMap();
                    // this.api.showToast("No Data Found", "3000", "bottom");
                }
            }
            else {
                this.clearMap();
                this.api.showToast("No Data Found", "3000", "bottom");
            }
            this.isLoading = false;
            this.api.hideLoader();
        }));
    }
    clearMap() {
        if (this.map) {
            try {
                this.map.off();
                this.map.remove();
            }
            catch (error) {
            }
            this.map = null;
            this.map = this._document.getElementById('map').innerHTML = "<div id='map' style='height: 100%;'></div>";
        }
    }
    initMap(locations) {
        this.clearMap();
        var container = leaflet__WEBPACK_IMPORTED_MODULE_4__.DomUtil.get('map');
        if (container != null) {
            container._leaflet_id = null;
        }
        let self = this;
        this.map = new leaflet__WEBPACK_IMPORTED_MODULE_4__.Map("map").setView([this.data.latitude, this.data.longitude], 8);
        (0,leaflet__WEBPACK_IMPORTED_MODULE_4__.tileLayer)("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
            maxZoom: 18,
            minZoom: 11,
            zoom: 10,
            center: [this.data.latitude, this.data.longitude],
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        }).addTo(this.map);
        locations.forEach((location) => {
            location.isClicked = 0;
            const customMarkerIcon = (0,leaflet__WEBPACK_IMPORTED_MODULE_4__.icon)({
                iconUrl: location.map_icons,
                iconSize: [50, 50],
                popupAnchor: [0, -20],
            });
            location['isIOS'] = this.platform.is('ios');
            (0,leaflet__WEBPACK_IMPORTED_MODULE_4__.marker)([location._geolocation_lat, location._geolocation_long], {
                icon: customMarkerIcon,
            })
                .bindPopup(`<div class="map-popup-container">
          <div class="event-img"><img src="${location.image}"></div>
          <div class="event-details">
            <a 
            data-category="${[location.category]}"
            data-listing_id="${[location.listing_id]}"
            data-title="${[location.listing_title]}"
            class="partner-link">${location.listing_title}</a>
            <h4 class="event-address">${location._address}</h4>
            <div class="action-btn">
                <ul>
                    <li class="location" 
                     data-lat="${[location._geolocation_lat]}"
                     data-long="${[location._geolocation_long]}" tappable >
                      <ion-icon style="width: 1.5rem;height: 1.5rem;" name="navigate-circle"></ion-icon>
                    </li>
                      
                    <ng-container ${[location.hasOwnProperty("_phone") == false ? 'style="display: none;"' : "",]}">
                       <li class="call" data-call="${location._phone}" tappable >
                        <ion-icon style="width: 1.5rem;height: 1.5rem;" name="call"></ion-icon> 
                      </li>
                    </ng-container>
                   
                    <ng-container>
                      <li class="save" 
                      data-isClicked = "${location.bookamrked}"
                      data-listId="${[location.listing_id]}"
                      data-title="${[location.listing_title]}" tappable>
                      
                      <ng-container
                      ${[location.hasOwnProperty("bookamrked") == 0 ? 'style="width: 1.5rem;height: 1.5rem; color: red"' : 'style="width: 1.5rem;height: 1.5rem;']}">
                      <ion-icon style="width: 1.5rem;height: 1.5rem;"
                      name="heart"></ion-icon>
                    </ng-container>
                  
                   </li>

                </ng-container>
                    <li
                        class="share"
                        data-category="${[location.category]}"
                        data-title="${[location.listing_title]}"
                        data-lat="${[location._geolocation_lat]}"
                        data-long="${[location._geolocation_long]}"
                        
                        tappable>
                        <ion-icon style="width: 1.5rem;height: 1.5rem;" name="share"></ion-icon> 
                    </li>
              </ul>
           </div>
       </div>
      </div>`).addTo(this.map)
                .on("popupopen", (e) => (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
                let listingTitle = self._document.getElementsByClassName("partner-link");
                let locationData = self._document.getElementsByClassName("location");
                let mobileNumberData = self._document.getElementsByClassName("call");
                let saveData = self._document.getElementsByClassName("save");
                let shareData = self._document.getElementsByClassName("share");
                // Listing Title
                for (var i = 0, len = listingTitle.length; i < len; i++) {
                    listingTitle[i].onclick = navigateToListingDetail;
                }
                // Map Navigation
                for (var i = 0, len = locationData.length; i < len; i++) {
                    locationData[i].onclick = navigateToGoogleApp;
                }
                // Mobile Number
                for (var i = 0, len = mobileNumberData.length; i < len; i++) {
                    mobileNumberData[i].onclick = navigateToMobileNumber;
                }
                // Book mark
                for (var i = 0, len = saveData.length; i < len; i++) {
                    saveData[i].onclick = navigateToBookmark;
                }
                // Share Data
                for (var i = 0, len = shareData.length; i < len; i++) {
                    shareData[i].onclick = navigateToShare;
                }
                function navigateToListingDetail() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
                        let cat_title = this.getAttribute("data-title");
                        let category = this.getAttribute("data-category");
                        let listingId = this.getAttribute("data-listing_id");
                        self.router.navigate(["/directory-listing-details"], {
                            queryParams: {
                                listingName: cat_title,
                                listingId: listingId,
                                serviceName: category
                            },
                        });
                    });
                }
                function navigateToShare() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
                        let latitude = this.getAttribute("data-lat");
                        let langitude = this.getAttribute("data-long");
                        let catName = this.getAttribute("data-category");
                        let cat_title = this.getAttribute("data-title");
                        let shareMessage = "Check out this AWESOME " +
                            cat_title +
                            " spot I found on PetCloud!" +
                            "link";
                        const modal = yield self.modelCtrl.create({
                            component: _socailshare_socailshare_component__WEBPACK_IMPORTED_MODULE_7__.SocailshareComponent,
                            animated: true,
                            cssClass: "modalCss",
                            componentProps: {
                                description: shareMessage,
                                shareType: "directory-listing-map",
                            },
                        });
                        return yield modal.present();
                    });
                }
                function navigateToBookmark() {
                    let list_Id = this.getAttribute("data-listId");
                    locations.forEach(element => {
                        if (element.listing_id == list_Id) {
                            if (element.bookamrked == 0) {
                                element.bookamrked = 1;
                                this.setAttribute("style", "color: red");
                                self.saveAsBookMark(list_Id, 1);
                            }
                            else {
                                element.bookamrked = "0";
                                this.setAttribute("style", "width: 1.5rem;height: 1.5rem;");
                                self.saveAsBookMark(list_Id, 0);
                            }
                        }
                    });
                }
                function navigateToMobileNumber() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
                        let mobileNumber = yield this.getAttribute("data-call");
                        if (mobileNumber == "undefined") {
                            self.api.showToast("Mobile number not provided, sorry for inconvience caused", "3000", "bottom");
                        }
                        else {
                            self.callNumber
                                .callNumber(mobileNumber, true)
                                .then((res) => self.api.showToast("Please Wait", "3000", "bottom"))
                                .catch((err) => self.api.showToast("Error in Launching Dailer", "3000", "bottom"));
                        }
                    });
                }
                function navigateToGoogleApp() {
                    let latitude = this.getAttribute("data-lat");
                    let langitude = this.getAttribute("data-long");
                    var coords = location._geolocation_lat + ',' + location._geolocation_long;
                    var q;
                    if (location.isIOS) {
                        q = 'maps://maps.apple.com/?q=' + coords;
                    }
                    else {
                        q = 'geo:' + coords + '?q=' + coords;
                    }
                    q = q.replace(' ', '');
                    window.location.href = q;
                }
            }));
        });
    }
    saveAsBookMark(listingId, isClicked) {
        let params = {
            bookmark: isClicked,
            listing_id: listingId
        };
        this.api.bookmarkListing(params).subscribe((data) => {
            if (data.success) {
                //     this.api.showToast(data.message,3000,"bottom")
            }
        }, (err) => {
            this.api.autoLogout(err, params);
        });
    }
    filter() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _listing_category_listing_category_component__WEBPACK_IMPORTED_MODULE_3__.ListingCategoryComponent,
                animated: true,
                componentProps: {
                    data: this.data
                },
            });
            modal.onDidDismiss().then((data) => {
                if (data.data == "no") {
                    this.isDataFilter = false;
                }
                else {
                    this.isDataFilter = true;
                    this.filterParams = data.data;
                    this.data.serviceName = data.data.categoryName;
                    this.data.distance = data.data.distance;
                    this.data.latitude = data.data.latitude;
                    this.data.longitude = data.data.longitude;
                    this.data.selected_cate = data.data.selected_cate;
                    this.data.locationName = data.data.locationName;
                    this.mapPinsData = [];
                    this.getMapsPin();
                }
            });
            return yield modal.present();
        });
    }
    handleAddressChange(address) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            this.data.latitude = yield address.geometry.location.lat();
            this.data.longitude = yield address.geometry.location.lng();
            this.data.locationName = address.address_components[0].long_name + " , " + address.address_components[2].long_name;
            if (this.map) {
                this.map._panes.markerPane.remove();
            }
            this.getMapsPin();
        });
    }
    goTodirectory() {
        this.router.navigateByUrl("/home/tabs/explore");
    }
    goToMapView() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function* () {
            this.data.serviceName = this.data.serviceName == "" ? "Pet Friendly Places" : this.data.serviceName;
            yield this.router.navigate(["/directory-listing"], {
                queryParams: {
                    data: JSON.stringify(this.data)
                },
            });
        });
    }
    openDiagnosticSettings() {
    }
};
DirectoryListingMapPage.ctorParameters = () => [
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.ModalController },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_14__.ActivatedRoute },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_14__.Router },
    { type: _ionic_storage__WEBPACK_IMPORTED_MODULE_15__.Storage },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_16__.NgZone },
    { type: _ionic_native_call_number_ngx__WEBPACK_IMPORTED_MODULE_6__.CallNumber },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.ModalController },
    { type: _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_5__.Geolocation },
    { type: _ionic_native_diagnostic_ngx__WEBPACK_IMPORTED_MODULE_8__.Diagnostic },
    { type: _ionic_native_android_permissions_ngx__WEBPACK_IMPORTED_MODULE_10__.AndroidPermissions },
    { type: _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_9__.LocationAccuracy },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.Platform },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_16__.Inject, args: [_angular_common__WEBPACK_IMPORTED_MODULE_17__.DOCUMENT,] }] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_16__.ElementRef }
];
DirectoryListingMapPage = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_16__.Component)({
        selector: "app-directory-listing-map",
        template: _raw_loader_directory_listing_map_page_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_directory_listing_map_page_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], DirectoryListingMapPage);



/***/ }),

/***/ 51851:
/*!***********************************************************************!*\
  !*** ./src/app/directory-listing-map/directory-listing-map.page.scss ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("ion-content #map {\n  width: 100%;\n  height: 100%;\n}\n\n.search-input {\n  background: #ffffff;\n  color: #000000;\n  --placeholder-color: #888888;\n  border: none;\n  width: 100%;\n  height: auto;\n  padding: 0.5em;\n  border-radius: 3px;\n  font-size: 15px;\n  border: 1px solid #888;\n  -webkit-appearance: none;\n}\n\n.search-input:focus {\n  outline: 0;\n}\n\nbutton.map-button {\n  position: fixed;\n  bottom: 30px;\n  background-color: rgba(0, 0, 0, 0.8);\n  padding: 10px 18px;\n  color: #fff;\n  border-radius: 30px;\n  left: 50%;\n  font-size: 16px;\n  transform: translateX(-50%);\n}\n\n.back-arrow {\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n}\n\n.back-arrow ion-icon {\n  width: 24px;\n  height: 24px;\n}\n\n.filter-btn {\n  margin: 0;\n  width: 100%;\n}\n\n.search-wrapper {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n\n.search-wrapper .search-div {\n  display: flex;\n  flex-direction: column;\n  width: calc(100% - 56px);\n}\n\n.search-wrapper .filter-div {\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-start;\n  width: 56px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpcmVjdG9yeS1saXN0aW5nLW1hcC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQUFSOztBQUlFO0VBQ0UsbUJBQUE7RUFDQSxjQUFBO0VBQ0EsNEJBQUE7RUFFQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7RUFDQSx3QkFBQTtBQUZKOztBQUlJO0VBQ0ksVUFBQTtBQUZSOztBQUtFO0VBQ0UsZUFBQTtFQUNBLFlBQUE7RUFDQSxvQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7RUFDQSwyQkFBQTtBQUZKOztBQUtBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0FBRkY7O0FBR0U7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQURKOztBQUtBO0VBQ0UsU0FBQTtFQUNBLFdBQUE7QUFGRjs7QUFJQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtFQUNBLDJCQUFBO0FBREY7O0FBRUU7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx3QkFBQTtBQUFKOztBQUVFO0VBQ0UsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsMkJBQUE7RUFDQSxXQUFBO0FBQUoiLCJmaWxlIjoiZGlyZWN0b3J5LWxpc3RpbmctbWFwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgICAjbWFwIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gIH1cblxuICAuc2VhcmNoLWlucHV0IHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgIC0tcGxhY2Vob2xkZXItY29sb3I6ICM4ODg4ODg7XG4gICAgLy8gYm9yZGVyLXJhZGl1czo0cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBwYWRkaW5nOiAwLjVlbTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxuICB9XG4gIGJ1dHRvbi5tYXAtYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAzMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgICBwYWRkaW5nOiAxMHB4IDE4cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgfVxuXG4uYmFjay1hcnJvdyB7XG4gIHBhZGRpbmc6IDBweDtcbiAgbWFyZ2luOiAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGlvbi1pY29uIHtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gIH1cbn1cblxuLmZpbHRlci1idG4ge1xuICBtYXJnaW46IDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnNlYXJjaC13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgd2lkdGg6IDEwMCU7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIC5zZWFyY2gtZGl2IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDU2cHgpO1xuICB9XG4gIC5maWx0ZXItZGl2IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgd2lkdGg6IDU2cHg7XG4gIH1cbn0iXX0= */");

/***/ }),

/***/ 78075:
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/directory-listing-map/directory-listing-map.page.html ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header class=\"ion-no-border\">\n    <ion-toolbar>\n        <ion-grid>\n            <ion-row style=\"align-items: center;\">\n                <ion-col class=\"back-arrow\" size=\"1\">\n                    <ion-back-button (click)=\"goTodirectory()\" defaultHref=\"/home/tabs/sitter-listing\"></ion-back-button>\n                </ion-col>\n                <ion-col class=\"search-wrapper\" size=\"11\">\n                    <div class=\"search-div\">\n                        <input type=\"search\" [options]='options' ngx-google-places-autocomplete #placesRef=\"ngx-places\"\n                            clearInput [(ngModel)]=\"data.locationName\" placeholder=\"Search by suburb\"\n                            class=\"search-input native-input sc-ion-input-md\" (onAddressChange)=\"handleAddressChange($event)\"\n                            id=\"suburb\" \n                        />\n                    </div>\n                    <div class=\"filter-div\">\n                        <ion-button class=\"filter-btn\" fill=\"clear\" color=\"theme\" (click)=\"filter()\">\n                            <ion-icon size=\"large\" slot=\"icon-only\" name=\"options\"></ion-icon>\n                        </ion-button>\n                    </div>\n                   \n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n\n     <!-- Request For GPS Permission -->\n     <ion-card *ngIf=\"requestForGPSPremission == false\">\n        <ion-card-content>\n          <ion-text>{{api?.noLocationAccess}}</ion-text>\n         \n          <div style=\"padding-top: 10px;\">\n            <ion-button expand=\"full\" (click)=\"openDiagnosticSettings()\" color=\"theme\" > Turn on Location </ion-button>\n          </div>\n        \n        </ion-card-content>\n      </ion-card>\n      <ion-card class=\"nodata-msg\" color=\"theme-sec\" *ngIf=\"!isLoading && mapPinsData?.length <= 0\">\n        <ion-card-content>\n            No service available for this location\n        </ion-card-content>\n    </ion-card>\n    <div id=\"map\" [style.visibility]=\"(mapPinsData?.length>0)? 'visible': 'hidden'\" style=\"height:100%;\"></div>\n\n    <div style=\"position: absolute;\n    z-index: 999;\">\n        <button class=\"map-button\" (click)=\"goToMapView()\">Grid View</button>\n    </div>\n</ion-content>");

/***/ })

}]);
//# sourceMappingURL=src_app_directory-listing-map_directory-listing-map_module_ts-es2015.js.map