{"version":3,"sources":["./src/app/booking-authorize/booking-authorize.module.ts","./src/app/booking-authorize/booking-authorize.page.ts","./src/app/booking-authorize/booking-authorize.page.scss","./src/app/booking-authorize/booking-authorize.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEmB;AAEhE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAoB;KAChC;CACF,CAAC;IAWW,0BAA0B,SAA1B,0BAA0B;CAAG;AAA7B,0BAA0B;IATtC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,kEAAqB,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,yEAAoB,CAAC;KACrC,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBW;AACe;AACvB;AACe;AACV;AACT;IAOzB,oBAAoB,SAApB,oBAAoB;IAI/B,YAAmB,GAAuB,EAAQ,MAAc,EACvD,KAAqB,EACrB,OAAgB,EAAQ,OAAsB;QAFpC,QAAG,GAAH,GAAG,CAAoB;QAAQ,WAAM,GAAN,MAAM,CAAQ;QACvD,UAAK,GAAL,KAAK,CAAgB;QACrB,YAAO,GAAP,OAAO,CAAS;QAAQ,YAAO,GAAP,OAAO,CAAe;QALtD,yBAAyB;QACzB,aAAQ,GAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAKvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IAEH,QAAQ;IACR,CAAC;IAED,aAAa;QAEV,gCAAgC;QAChC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC;aACpC,IAAI,CAAC,wDAAQ,CAAC,GAAG,EAAE;YAChB,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAC,GAAG,CAAC,CAAC;YAChD,IAAI,GAAG,CAAC,OAAO,EAAE;gBACb,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;aACrD;iBAAM;gBACH,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;aACpD;QACL,CAAC,EAAE,CAAC,GAAQ,EAAE,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAC;YACpD,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IAEV,CAAC;CAEF;;YA9CQ,yEAAkB;YAElB,mDAAM;YAAE,2DAAc;YAEvB,mDAAO;YADN,yDAAa;;AAQT,oBAAoB;IALhC,wDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,sFAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAmChC;AAnCgC;;;;;;;;;;;;;ACZjC,+DAAe,8CAA8C,mIAAmI,E;;;;;;;;;;;;ACAhM,+DAAe,mpCAAmpC,E","file":"src_app_booking-authorize_booking-authorize_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookingAuthorizePage } from './booking-authorize.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookingAuthorizePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BookingAuthorizePage]\n})\nexport class BookingAuthorizePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { PetcloudApiService } from '../api/petcloud-api.service';\nimport { finalize } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport {Storage} from '@ionic/storage'\n\n@Component({\n  selector: 'app-booking-authorize',\n  templateUrl: './booking-authorize.page.html',\n  styleUrls: ['./booking-authorize.page.scss'],\n})\nexport class BookingAuthorizePage implements OnInit {\n   // Accept Job Params Data\n   authCard: any = { id: \"\" };\n   public messageId: any;\n  constructor(public api: PetcloudApiService,public router: Router,\n    public route: ActivatedRoute,\n    public storage: Storage,public navcntl: NavController) { \n       this.messageId = this.route.snapshot.paramMap.get('id');\n    }\n\n  ngOnInit() {\n  }\n\n  authorizeCard(){\n\n     // Lets Meet API Param Set Value\n     this.authCard.id = this.messageId;\n     this.api.showLoader();\n     this.api.bookingAuthorized(this.authCard)\n         .pipe(finalize(() => {\n             this.api.hideLoader();\n         })).subscribe((res: any) => {\n             console.log(\"Responsein Booking Authorize\",res);\n             if (res.success) {\n                 this.api.showToast(res.message, '2000', 'bottom');\n             } else {\n                 this.api.showToast(res.message, '2000', 'bottom')\n             }\n         }, (err: any) => {\n             console.log('error from update user setting', err);\n            this.api.autoLogout(err,this.authCard);\n         });\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJib29raW5nLWF1dGhvcml6ZS5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Booking Authorize</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      Congrats! You have Accepted Application from Pankit for your job.\\n\\n      Hurry! Next step is to make an Authorization. This will allow you to see the phone number of the Sitter/Walker &\\n      also places a hold on your credit card for the booking dollar amount.\\n\\n      Your card will not be charged until you confirm on PetCloud that you have met the Sitter & that you are happy to\\n      proceed. If after meeting you indicate the booking will not proceed, this Authorization will fall off the card.\\n\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n            <ion-button size=\\\"full\\\" (click)=\\\"authorizeCard()\\\" color=\\\"success\\\">Authorize Card</ion-button>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n            <ion-button size=\\\"full\\\" color=\\\"danger\\\">Cancel Booking</ion-button>\\n          </ion-col>\\n      </ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\";"],"sourceRoot":"webpack:///"}