(self["webpackChunkpetcloud"] = self["webpackChunkpetcloud"] || []).push([["src_app_pet-update_pet-update_module_ts"],{

/***/ 70542:
/*!************************************************************!*\
  !*** ./src/app/add-vacination/add-vacination.component.ts ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AddVacinationComponent": function() { return /* binding */ AddVacinationComponent; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_add_vacination_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./add-vacination.component.html */ 41564);
/* harmony import */ var _add_vacination_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-vacination.component.scss */ 40528);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/petcloud-api.service */ 78975);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 68939);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ 16738);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 38583);










let AddVacinationComponent = class AddVacinationComponent {
    constructor(navParams, formBuilder, api, actionSheetCtrl, model) {
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.api = api;
        this.actionSheetCtrl = actionSheetCtrl;
        this.model = model;
        this.selectedPetId = "";
        this.startMinDate = "";
        this.isImage = false;
        this.selectedPetId = navParams.get("petId");
    }
    ngOnInit() {
        this.startMinDate = new Date(new Date()).toISOString();
        ;
        this.addVaction = this.formBuilder.group({
            vactionationType: ['0', [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required]],
            alertFrequeny: ['0', [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required]],
            lastVactionation: [this.startMinDate, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required]],
            startTime: [new _angular_common__WEBPACK_IMPORTED_MODULE_5__.DatePipe('en-US').transform(new Date(), 'HH:mm'), [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required]],
        });
    }
    closeModal() {
        this.model.dismiss();
    }
    addAlert() {
        const vaccinationRecord = {
            PetAlerts: {
                petId: this.selectedPetId,
                alertType: this.addVaction.value.vactionationType,
                alertFrequency: this.addVaction.value.alertFrequeny,
                alertDate: moment__WEBPACK_IMPORTED_MODULE_3__(this.addVaction.value.lastVactionation).format('YYYY-MM-DD'),
                startTime: this.addVaction.value.startTime
            }
        };
        this.api.showLoader();
        this.api.addVaccinationAlert(vaccinationRecord)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.finalize)(() => {
            this.api.hideLoader();
        })).subscribe((res) => {
            if (res.success) {
                this.api.showToast(res.message, '2000', 'bottom');
                this.closeModal();
            }
            else {
                this.api.showToast(res.message, '2000', 'bottom');
                this.closeModal();
            }
        }, (err) => {
            this.api.autoLogout(err, vaccinationRecord);
            this.api.hideLoader();
            this.closeModal();
        });
    }
};
AddVacinationComponent.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.NavParams },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormBuilder },
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.ActionSheetController },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.ModalController }
];
AddVacinationComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_9__.Component)({
        selector: 'app-add-vacination',
        template: _raw_loader_add_vacination_component_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_add_vacination_component_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], AddVacinationComponent);



/***/ }),

/***/ 32446:
/*!*************************************************!*\
  !*** ./src/app/pet-update/pet-update.module.ts ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PetUpdatePageModule": function() { return /* binding */ PetUpdatePageModule; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _pet_update_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pet-update.page */ 97836);
/* harmony import */ var _ionic_native_camera_ngx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ionic-native/camera/ngx */ 84267);
/* harmony import */ var _ionic_native_ionic_webview_ngx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic-native/ionic-webview/ngx */ 24575);
/* harmony import */ var _add_vacination_add_vacination_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add-vacination/add-vacination.component */ 70542);
/* harmony import */ var _vaccination_explaination_vaccination_explaination_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../vaccination-explaination/vaccination-explaination.component */ 92787);







// native plugins




const routes = [
    {
        path: '',
        component: _pet_update_page__WEBPACK_IMPORTED_MODULE_0__.PetUpdatePage
    }
];
let PetUpdatePageModule = class PetUpdatePageModule {
};
PetUpdatePageModule = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.NgModule)({
        entryComponents: [_add_vacination_add_vacination_component__WEBPACK_IMPORTED_MODULE_3__.AddVacinationComponent, _vaccination_explaination_vaccination_explaination_component__WEBPACK_IMPORTED_MODULE_4__.VaccinationExplainationComponent],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__.ReactiveFormsModule,
            _ionic_angular__WEBPACK_IMPORTED_MODULE_9__.IonicModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_10__.RouterModule.forChild(routes)
        ],
        providers: [
            _ionic_native_camera_ngx__WEBPACK_IMPORTED_MODULE_1__.Camera,
            _ionic_native_ionic_webview_ngx__WEBPACK_IMPORTED_MODULE_2__.WebView,
        ],
        declarations: [_pet_update_page__WEBPACK_IMPORTED_MODULE_0__.PetUpdatePage, _add_vacination_add_vacination_component__WEBPACK_IMPORTED_MODULE_3__.AddVacinationComponent, _vaccination_explaination_vaccination_explaination_component__WEBPACK_IMPORTED_MODULE_4__.VaccinationExplainationComponent]
    })
], PetUpdatePageModule);



/***/ }),

/***/ 97836:
/*!***********************************************!*\
  !*** ./src/app/pet-update/pet-update.page.ts ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PetUpdatePage": function() { return /* binding */ PetUpdatePage; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_pet_update_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./pet-update.page.html */ 43053);
/* harmony import */ var _pet_update_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pet-update.page.scss */ 71827);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/petcloud-api.service */ 78975);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _ionic_storage__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ionic/storage */ 38605);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 68939);
/* harmony import */ var _add_vacination_add_vacination_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../add-vacination/add-vacination.component */ 70542);
/* harmony import */ var _camera_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../camera-service.service */ 77836);
/* harmony import */ var _ionic_native_camera_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic-native/camera/ngx */ 84267);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! moment */ 16738);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _vaccination_explaination_vaccination_explaination_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../vaccination-explaination/vaccination-explaination.component */ 92787);
/* harmony import */ var _view_image_model_view_image_model_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../view-image-model/view-image-model.component */ 33011);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 38583);



















let PetUpdatePage = class PetUpdatePage {
    constructor(actionSheetCtrl, platform, activeRoute, formBuilder, modalCtrl, api, router, navCtrl, storage, cameraAPI, camera) {
        this.actionSheetCtrl = actionSheetCtrl;
        this.platform = platform;
        this.activeRoute = activeRoute;
        this.formBuilder = formBuilder;
        this.modalCtrl = modalCtrl;
        this.api = api;
        this.router = router;
        this.navCtrl = navCtrl;
        this.storage = storage;
        this.cameraAPI = cameraAPI;
        this.camera = camera;
        this.lastImage = null;
        this.todayDate = "";
        this.selectedPetImage = "";
        this.selectedPetId = 0;
        this.vaccinationRecordImage = "";
        this.petType = "";
        this.petChildrenStaySelectoption = {
            header: "Fine to stay with children?",
            translucent: true,
        };
        this.isVaccineRecordUploaded = false;
        this.fileURLVaccine = "";
        this.newPetid = 0; // store new added pet id for update
        this.selectedSegment = "";
        this.healthAlerts = [];
        this.activeCard = [];
        this.suppliments = [{
                value: "Glucosamine - joints",
            }, {
                value: "Fish Oil - Coat/Skin"
            }, {
                value: "Anxiety related"
            }, {
                value: "Probiotics - digestion"
            }, {
                value: "Antioxidants"
            }, {
                value: "Other"
            }];
        this.food_considerations = [{
                label: "Digestive sensitivity",
                value: 0
            }, {
                label: "Coughing up fur balls",
                value: 1
            }, {
                label: "Has little to no teeth, so needs soft food",
                value: 2
            }, {
                label: "Skin irritation and itching",
                value: 3
            }, {
                label: "Needs to lose weight",
                value: 4
            }, {
                label: "High energy working dog",
                value: 5
            }, {
                label: "Growing Puppy",
                value: 6
            }, {
                label: "Adult",
                value: 7
            }, {
                label: "Senior",
                value: 8
            }, {
                label: "Pregnant",
                value: 9
            }];
        this.bone_problems = [
            {
                label: "Have arthritis",
                value: "Have arthritis",
                isChecked: false
            }, {
                label: "Has hip dysplasia",
                value: "Has hip dysplasia",
                isChecked: false
            }
        ];
        this.petSleepLocation = [{
                label: "Own bed in bedroom",
                value: 1,
            }, {
                label: "Lounge/Family room",
                value: 2,
            }, {
                label: "Other part of house",
                value: 3,
            }, {
                label: "Laundry/Garage/Patio/Other",
                value: 4,
            }, {
                label: "Outside",
                value: 5,
            }, {
                label: "Stables",
                value: 6,
            }, {
                label: "On my bed",
                value: 7,
            }];
        this.frequency = [{
                label: "Weekly",
                value: 0
            }, {
                label: "Fortnightly",
                value: 1
            }, {
                label: "Monthy",
                value: 2
            }, {
                label: "Quarterly",
                value: 3
            }, {
                label: "Half-yearly",
                value: 4
            }, {
                label: "Yearly",
                value: 5
            }, {
                label: "Once Off",
                value: 6
            }];
        this.exericeFreq = [{
                value: 0,
                label: "Daily"
            }, {
                value: 1,
                label: "A couple of times a week"
            }, {
                value: 2,
                label: "Once a week"
            }, {
                value: 3,
                label: "Occasionally"
            }, {
                value: 4,
                label: "Never"
            }];
        this.exerciseTime = [{
                value: "Early Morning"
            }, {
                value: "Late Afternoon"
            }, {
                value: "Twice a day"
            }];
        this.feaFrequency = [{
                label: "Every Week",
                value: 0
            }, {
                label: "Every 2nd Week",
                value: 1
            }, {
                label: "Every Month",
                value: 2
            }, {
                label: "Every 3 Months",
                value: 3
            }, {
                label: "Every 6 Months",
                value: 4
            }, {
                label: "Every Year",
                value: 5
            }, {
                label: "Once Off",
                value: 6
            }];
        this.walkKms = Array.from({ length: 10 }, (_, i) => i + 1);
        this.coreVaccination1 = [
            {
                id: 1,
                vaccinationName: "C3",
                stage: "6 to 8 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: "reminder"
            }, {
                id: 2,
                vaccinationName: "C3 (C4 or C5 can be given in its place if the vet recommends it)",
                stage: "10 to 12 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: "reminder"
            }, {
                id: 3,
                vaccinationName: "C3",
                stage: "14 to 16 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: "reminder"
            }, {
                id: 4,
                vaccinationName: "FIV, (Leukaemia, Chlamydia)",
                stage: "5 Month old",
                dueOrComplete: null,
                action: true,
                actionType: "reminder"
            }, {
                id: 5,
                vaccinationName: "FIV, (Leukaemia, Chlamydia)",
                stage: "Every 1-3 years",
                dueOrComplete: "Every 3 years",
                action: false,
                actionType: "",
            }
        ];
        this.coreVaccination = [];
        // For PetType = 1;
        this.coreVaccinationType1 = [
            {
                id: 1,
                vaccinationName: "C3",
                stage: "6 to 8 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 2,
                vaccinationName: "C3 (C4 or C5 can be given in its place if the vet recommends it)",
                stage: "10 to 12 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 3,
                vaccinationName: "C3",
                stage: "14 to 16 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 4,
                vaccinationName: "C3 Booster",
                stage: "15 months old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 5,
                vaccinationName: "C3 Booster",
                stage: "Every 3 years",
                dueOrComplete: "Every 3 years",
                action: false,
                actionType: true,
                disabled: false
            }
        ];
        // For PetType = 2
        this.coreVaccinationType2 = [
            {
                id: 1,
                vaccinationName: "FIV",
                stage: "6 to 8 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 2,
                vaccinationName: "FIV, (Leukaemia, Chlamydia)",
                stage: "10 to 12 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 3,
                vaccinationName: "FIV, (Leukaemia, Chlamydia)",
                stage: "14 to 16 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 4,
                vaccinationName: "FIV, (Leukaemia, Chlamydia)",
                stage: "5 Month old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 5,
                vaccinationName: "FIV, (Leukaemia, Chlamydia)",
                stage: "Every 1-3 years",
                dueOrComplete: "Every 3 years",
                action: false,
                actionType: true,
                disabled: false
            }
        ];
        // For PetType = 3;
        this.coreVaccinationType3 = [
            {
                id: 1,
                vaccinationName: "Equivac 2 in 1",
                stage: "12 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 2,
                vaccinationName: "Equivac S",
                stage: "14 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 3,
                vaccinationName: "Equivac 2 in 1",
                stage: "16 weeks old",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 4,
                vaccinationName: "Duvaxyn(EHV)r",
                stage: "Every 6 Months",
                dueOrComplete: null,
                action: true,
                actionType: true,
                disabled: false
            }, {
                id: 5,
                vaccinationName: "Duvaxyn(EHV)Booster",
                stage: "Every 6 Months",
                dueOrComplete: "Every 3 years",
                action: false,
                actionType: true,
                disabled: false
            }
        ];
        this.selectedPetId = this.activeRoute.snapshot.paramMap.get("petid");
        this.currnetDt = new Date().toISOString();
        this.todayDate = new _angular_common__WEBPACK_IMPORTED_MODULE_9__.DatePipe('en-US').transform(new Date(), 'yyyy-MM-dd');
        console.log("today date", this.todayDate);
    }
    ngOnInit() {
        this.petForm = this.formBuilder.group({
            id: [],
            petType: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            name: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            gender: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            dob: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            beed: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            pet_fleas: [""],
            desexed: [""],
            children_stay: [""],
            petImage: [null],
            emergency_contacts: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            emergency_charge: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            weight: [""],
            dangerDog: [],
            habbits: [""],
            microchipYesNo: [],
            microchip: [""],
            rspcaTAG: [],
            pet_rego: [""],
            pet_council: [""],
            councilTag: [],
            personalTag: [],
            friendly_pet: [],
            love_men: [],
            love_women: [],
            petspend_home: [""],
            petspend_out: [""],
            petsleep_night: [""],
            petalone_hour: [""],
            pet_react: [""],
            pet_walk: [""],
            pet_behave: [""],
            additional_care: [""],
            health_issue: [""],
            on_medication: [],
            medication_instructions: [""],
            usual_vet: [""],
            about_breed: [""],
            attend_training: [""],
            toilet_trained: [""],
            use_for_toilet: [""],
            minder_cat: [],
            minder_dog: [],
            care_routine_breakfast_desc: [""],
            care_routine_breakfast_time: [""],
            care_routine_dinner_desc: [""],
            care_routine_dinner_time: [""],
            food_considerations: [""],
            food_consideration: this.formBuilder.array([]),
            supplements: this.formBuilder.array([]),
            supplement: [""],
            exercise: this.formBuilder.array([]),
            bone_problem: [""],
            extra_details: [""],
            exercise_freq: [""],
            exercise_time: [""],
            walkdistance: [""],
            sleeping_location: [""],
            parasite_flea_description: [""],
            parasite_flea_frequency: [""],
            parasite_flea_date: [""],
            parasite_heartworm_date: [""],
            parasite_heartworm_description: [""],
            parasite_heartworm_frequency: [""],
            parasite_stomach_wormer_date: [""],
            parasite_stomach_wormer_frequency: [""],
            parasite_stomach_wormer_description: [""],
            grooming_location: [""],
            grooming_frequency: [""],
            grooming_date: [""],
            insurance_cover_insurance_name: [""],
            insurance_cover_insurance_amount: [""],
            vaccinationsbl_date1: [""],
            vaccinationsbl_date2: [""],
            vaccinationsbl_date3: [""],
            vaccinationsbl_date4: [""],
            non_core_vaccinationsbl_date1: [""],
            parasite_control: this.formBuilder.array([]),
            other_medications: this.formBuilder.array([]),
            agree: [""],
            emergency_contactsbl_contact_name: [""],
            emergency_contactsbl_contact_number: [""],
            emergency_contactsbl_contact_email: [""],
            emergency_contactsbl_vet_name: [""],
            emergency_contactsbl_vet_email: [""],
        });
        this.selectedSegment = "details";
        this.getVaccinationAlert();
        this.getUploadedVaccinationRecord();
        this.getInsurancePolicy();
    }
    initParasiteControlItems(data) {
        if (data) {
            return this.formBuilder.group({
                type: data.type,
                application: data.application,
                brand: data.brand,
                product: data.product,
                frequency: data.frequency,
            });
        }
        return this.formBuilder.group({
            type: [''],
            application: [''],
            brand: [''],
            product: [''],
            frequency: [''],
        });
    }
    initother_medications(data) {
        if (data) {
            return this.formBuilder.group({
                type: data.type,
                application: data.application,
                brand: data.brand,
                product: data.product,
                frequency: data.frequency,
            });
        }
        return this.formBuilder.group({
            type: [''],
            application: [''],
            brand: [''],
            product: [''],
            frequency: [''],
        });
    }
    get otherMedsArr() {
        return this.petForm.get('other_medications');
    }
    get parastiteArr() {
        return this.petForm.get('parasite_control');
    }
    addParasiteControl() {
        this.parastiteArr.push(this.initParasiteControlItems());
    }
    addOtherMedicine() {
        this.otherMedsArr.push(this.initother_medications());
    }
    ionViewDidEnter() {
        // fillup form with already stored value.
        this.getPet(this.selectedPetId);
        localStorage.setItem("updatePetId", this.selectedPetId);
    }
    /**
     * Get Pet details
     * @param petId
     */
    getPet(petId) {
        this.api.showLoader();
        this.api
            .getPet(petId)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
            this.api.hideLoader();
        }))
            .subscribe((res) => {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
            const petData = res.pet;
            this.newPetid = petData.id;
            localStorage.setItem("updatePetId", petData.id);
            this.petForm.patchValue({
                id: petData.id,
                petType: petData.petType != null || petData.petType != undefined
                    ? petData.petType
                    : "",
                name: petData.name,
                gender: petData.gender,
                dob: petData.dob == "1970-01-01" || petData.dob == null
                    ? new Date()
                    : petData.dob,
                beed: petData.beed,
                pet_fleas: petData.pet_fleas == null ? "" : petData.pet_fleas,
                desexed: petData.desexed,
                children_stay: petData.children_stay != null ||
                    petData.children_stay != undefined
                    ? petData.children_stay
                    : "",
                emergency_contacts: petData.emergency_contacts,
                emergency_charge: petData.emergency_charge,
                petImage: petData.imagename,
                weight: petData.weight == null || petData.weight == undefined
                    ? "1"
                    : petData.weight,
                dangerDog: false,
                habbits: petData.habbits,
                microchipYesNo: petData.microchip !== null && petData.microchip.length > 0
                    ? true
                    : false,
                microchip: petData.microchip,
                rspcaTAG: petData.rspcaTAG == false ? '' : true,
                pet_rego: petData.pet_rego,
                pet_council: petData.pet_council,
                councilTag: petData.councilTag == 1 ? true : false,
                personalTag: petData.personalTag == 1 ? true : false,
                friendly_pet: petData.friendly_pet == "Y" ? true : false,
                love_men: petData.love_men == "Y" ? true : false,
                love_women: petData.love_women == "Y" ? true : false,
                petspend_home: petData.petspend_home,
                petspend_out: petData.petspend_out,
                petsleep_night: petData.petsleep_night ? parseInt(petData.petsleep_night) : "",
                petalone_hour: petData.petalone_hour,
                pet_react: petData.pet_react,
                pet_walk: petData.pet_walk,
                pet_behave: petData.pet_behave,
                additional_care: petData.additional_care,
                health_issue: petData.health_issue,
                on_medication: petData.on_medication == 1 ? true : false,
                medication_instructions: petData.medication_instructions,
                usual_vet: petData.usual_vet,
                minder_cat: petData.minder_cat == "Y" ? true : false,
                minder_dog: petData.minder_dog == "Y" ? true : false,
                attend_training: petData.attend_training == "Y" ? true : false,
                toilet_trained: petData.toilet_trained,
                use_for_toilet: petData.use_for_toilet,
                about_breed: petData.about_breed,
            });
            this.petType = res.pet.petType;
            if (this.petType == 1) {
                this.coreVaccination = this.coreVaccinationType1;
            }
            else if (this.petType == 2) {
                this.coreVaccination = this.coreVaccinationType2;
            }
            else {
                this.coreVaccination = this.coreVaccinationType3;
            }
            if (petData.care_routine) {
                this.petForm.patchValue({
                    care_routine_breakfast_desc: (_a = petData.care_routine.breakfast) === null || _a === void 0 ? void 0 : _a.description,
                    care_routine_breakfast_time: moment__WEBPACK_IMPORTED_MODULE_6__((_b = petData.care_routine.breakfast) === null || _b === void 0 ? void 0 : _b.time, ["hh:mm a"]).format("hh:mm"),
                    care_routine_dinner_desc: (_c = petData.care_routine.dinner) === null || _c === void 0 ? void 0 : _c.description,
                    care_routine_dinner_time: moment__WEBPACK_IMPORTED_MODULE_6__((_d = petData.care_routine.dinner) === null || _d === void 0 ? void 0 : _d.time, ["hh:mm a"]).format("hh:mm"),
                    extra_details: petData.care_routine["extra-details"],
                    sleeping_location: petData.care_routine["sleeping_location"],
                    grooming_location: (_e = petData.care_routine.grooming) === null || _e === void 0 ? void 0 : _e.location,
                    grooming_frequency: (_f = petData.care_routine.grooming) === null || _f === void 0 ? void 0 : _f.frequency,
                    grooming_date: (_g = petData === null || petData === void 0 ? void 0 : petData.care_routine.grooming) === null || _g === void 0 ? void 0 : _g.date,
                    parasite_flea_description: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["flea_control"].description : "",
                    parasite_flea_frequency: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["flea_control"].frequency : "",
                    parasite_flea_date: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["flea_control"].date : "",
                    parasite_heartworm_description: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["flea_control"].description : "",
                    parasite_heartworm_frequency: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["flea_control"].frequency : "",
                    parasite_heartworm_date: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["flea_control"].date : "",
                    parasite_stomach_wormer_date: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["stomach_wormer"].date : "",
                    parasite_stomach_wormer_frequency: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["stomach_wormer"].frequency : "",
                    parasite_stomach_wormer_description: petData.care_routine.parasite_control ? petData.care_routine.parasite_control["stomach_wormer"].description : "",
                    bone_problem: (((_h = petData.care_routine.bone_problem) === null || _h === void 0 ? void 0 : _h.length) > 0) ? petData.care_routine.bone_problem : [],
                    exercise_freq: (_j = petData.care_routine.exercise) === null || _j === void 0 ? void 0 : _j.frequency,
                    walkdistance: (_k = petData.care_routine.exercise) === null || _k === void 0 ? void 0 : _k.distance,
                    exercise_time: (((_m = (_l = petData.care_routine.exercise) === null || _l === void 0 ? void 0 : _l.time) === null || _m === void 0 ? void 0 : _m.length) > 0) ? petData.care_routine.exercise.time : "",
                    food_considerations: (((_o = petData.care_routine.food_consideration) === null || _o === void 0 ? void 0 : _o.length) > 0) ? petData.care_routine.food_consideration : [],
                    supplement: (((_p = petData.care_routine.supplements) === null || _p === void 0 ? void 0 : _p.length) > 0) ? petData.care_routine.supplements : []
                });
                this.bone_problems.forEach(element => {
                    if (this.petForm.value.bone_problem.length > 0) {
                        this.petForm.value.bone_problem.forEach(ele => {
                            if (element.value == ele) {
                                element.isChecked = true;
                            }
                        });
                    }
                });
            }
            if (petData.other_medications) {
                if (petData.other_medications.length) {
                    petData.other_medications.forEach(element => {
                        this.otherMedsArr.push(this.initother_medications(element));
                    });
                }
            }
            if (petData.parasite_control) {
                if (petData.parasite_control.length) {
                    petData.parasite_control.forEach(element => {
                        this.parastiteArr.push(this.initParasiteControlItems(element));
                    });
                }
            }
            if (petData.emergency_contactsbl) {
                let emergency_contactsbl = petData.emergency_contactsbl.emergency_contactsbl;
                if (emergency_contactsbl) {
                    if (emergency_contactsbl.contact) {
                        this.petForm.patchValue({
                            emergency_contactsbl_contact_name: emergency_contactsbl.contact.name,
                            emergency_contactsbl_contact_number: emergency_contactsbl.contact.number,
                            emergency_contactsbl_contact_email: emergency_contactsbl.contact.email,
                        });
                    }
                    if (emergency_contactsbl.vet) {
                        this.petForm.patchValue({
                            emergency_contactsbl_vet_name: emergency_contactsbl.vet.name,
                            emergency_contactsbl_vet_email: emergency_contactsbl.vet.email
                        });
                    }
                }
            }
            if (petData.insurance_cover) {
                let insurancecover = petData.insurance_cover.insurance;
                if (insurancecover) {
                    this.petForm.patchValue({
                        insurance_cover_insurance_name: insurancecover.name,
                        insurance_cover_insurance_amount: insurancecover.amount,
                    });
                }
            }
            if (petData.vaccinationsbl) {
                if (petData.vaccinationsbl.length) {
                    this.petForm.patchValue({
                        vaccinationsbl_date1: petData.vaccinationsbl[0].date,
                        vaccinationsbl_date2: petData.vaccinationsbl[1].date,
                        vaccinationsbl_date3: petData.vaccinationsbl[2].date,
                        vaccinationsbl_date4: petData.vaccinationsbl[3].date,
                    });
                    console.log(this.todayDate);
                    console.log(petData.vaccinationsbl[0].date);
                    petData.vaccinationsbl[0].date != "" ? this.todayDate > petData.vaccinationsbl[0].date ? this.coreVaccination[0].disabled = true : this.coreVaccination[0].disabled = false : this.coreVaccination[0].disabled;
                    petData.vaccinationsbl[1].date != "" ? this.todayDate > petData.vaccinationsbl[1].date ? this.coreVaccination[1].disabled = true : this.coreVaccination[1].disabled = false : this.coreVaccination[1].disabled;
                    petData.vaccinationsbl[2].date != "" ? this.todayDate > petData.vaccinationsbl[2].date ? this.coreVaccination[2].disabled = true : this.coreVaccination[2].disabled = false : this.coreVaccination[2].disabled;
                    petData.vaccinationsbl[3].date != "" ? this.todayDate > petData.vaccinationsbl[3].date ? this.coreVaccination[3].disabled = true : this.coreVaccination[3].disabled = false : this.coreVaccination[3].disabled;
                    petData.vaccinationsbl[2].date != "" ? this.todayDate > petData.vaccinationsbl[2].date ? this.coreVaccination[4].disabled = true : this.coreVaccination[4].disabled = false : this.coreVaccination[4].disabled;
                }
            }
            if (petData.non_core_vaccinationsbl) {
                if (petData.non_core_vaccinationsbl.length) {
                    this.petForm.patchValue({
                        non_core_vaccinationsbl_date1: petData.non_core_vaccinationsbl[0].date
                    });
                }
            }
            this.selectedPetImage =
                "https://cdn.petcloud.com.au/uploads/pet/" + petData.imagename;
        }, (err) => {
            this.api.showToast("Pet not found please go back and Try again!", 2000, "bottom");
            this.api.autoLogout(err, petId);
        });
    }
    getUploadedVaccinationRecord() {
        this.api.getUploadedVaccinationRecord(this.selectedPetId).subscribe((res) => {
            if (res.status) {
                this.isVaccineRecordUploaded = true;
                this.fileURLVaccine = res.image;
            }
        }, (err) => {
            this.api.autoLogout(err, this.selectedPetId);
        });
    }
    uploadVaccinationRecord(image) {
        this.api.showLoader();
        const data = {
            data: image,
            name: this.api.generateRandomId(7) + ".jpg",
        };
        this.api
            .uploadVaccinationRecord(this.selectedPetId, data)
            .subscribe((res) => {
            this.api.hideLoader();
            if (res.success) {
                this.api.showToast("Record Uploaded", "3000", "bottom");
                this.getUploadedVaccinationRecord();
            }
        }),
            (err) => {
                this.api.autoLogout(err, data);
            };
    }
    uploadInsurancePolicy(image) {
        this.api.showLoader();
        const data = {
            data: image,
            name: this.api.generateRandomId(7) + ".jpg",
        };
        this.api
            .uploadInsurancePolicy(this.selectedPetId, data)
            .subscribe((res) => {
            this.api.hideLoader();
            if (res.success) {
                this.api.showToast("Record Uploaded", "3000", "bottom");
                this.getInsurancePolicy();
            }
        }),
            (err) => {
                this.api.autoLogout(err, data);
            };
    }
    onChangeBoneProblem(event, value) {
        if (value.label == "Have arthritis") {
            value.isChecked = event.detail.checked;
        }
        else if (value.label == "Has hip dysplasia") {
            value.isChecked = event.detail.checked;
        }
    }
    updatePetProfile() {
        let petForm = this.petForm.value;
        let parasite_control = {};
        petForm.councilTag = petForm.councilTag == true ? "1" : "0";
        petForm.personalTag = petForm.personalTag == true ? "1" : "0";
        petForm.microchipYesNo = petForm.microchipYesNo == true ? "1" : "0";
        petForm.on_medication = petForm.on_medication == true ? "1" : "0";
        petForm.friendly_pet = petForm.friendly_pet == true ? "Y" : "N";
        petForm.love_men = petForm.love_men == true ? "Y" : "N";
        petForm.love_women = petForm.love_women == true ? "Y" : "N";
        petForm.on_medication = petForm.on_medication == true ? 1 : 0;
        petForm.microchip = petForm.microchip == null ||
            petForm.microchip == "" ? "" : petForm.microchip.toString();
        petForm.minder_cat = petForm.minder_cat == true ? "Y" : "N";
        petForm.minder_dog = petForm.minder_dog == true ? "Y" : "N";
        petForm.attend_training = petForm.attend_training == true ? "Y" : "N";
        petForm.emergency_charge = petForm.emergency_charge;
        petForm.emergency_contacts = petForm.emergency_contacts;
        this.petForm.value.exercise = {
            "frequency": petForm.exercise_freq,
            "time": petForm.exercise_time,
            "distance": petForm.walkdistance,
        },
            parasite_control = {
                "flea_control": {
                    "description": petForm.parasite_flea_description,
                    "frequency": petForm.parasite_flea_frequency,
                    "date": petForm.parasite_flea_date != "" ? moment__WEBPACK_IMPORTED_MODULE_6__(petForm.parasite_flea_date).format("YYYY-MM-DD") : "",
                }, "heartworm": {
                    "description": petForm.parasite_heartworm_description,
                    "frequency": petForm.parasite_heartworm_frequency,
                    "date": petForm.parasite_heartworm_date != "" ? moment__WEBPACK_IMPORTED_MODULE_6__(petForm.parasite_heartworm_date).format("YYYY-MM-DD") : "",
                },
                "stomach_wormer": {
                    "description": petForm.parasite_stomach_wormer_description,
                    "frequency": petForm.parasite_stomach_wormer_frequency,
                    "date": petForm.parasite_stomach_wormer_date != "" ?
                        moment__WEBPACK_IMPORTED_MODULE_6__(petForm.parasite_stomach_wormer_date).format("YYYY-MM-DD") : "",
                }
            };
        this.petForm.value.grooming = {
            frequency: petForm.grooming_frequency,
            date: petForm.grooming_date != "" ? moment__WEBPACK_IMPORTED_MODULE_6__(petForm.grooming_date).format("YYYY-MM-DD") : "",
            location: petForm.grooming_location
        };
        const care_routine = {
            breakfast: {
                time: petForm.care_routine_breakfast_time != "" ? moment__WEBPACK_IMPORTED_MODULE_6__(petForm.care_routine_breakfast_time, ["HH.mm"]).format("hh:mm a") : "",
                description: petForm.care_routine_breakfast_desc
            },
            dinner: {
                description: petForm.care_routine_dinner_desc, time: petForm.care_routine_dinner_time != "" ? moment__WEBPACK_IMPORTED_MODULE_6__(petForm.care_routine_dinner_time, ["HH.mm"]).format("hh:mm a") : ""
            },
            "extra-details": petForm.extra_details,
            parasite_control,
            grooming: petForm.grooming,
            food_consideration: petForm.food_considerations,
            supplements: petForm.supplement,
            exercise: petForm.exercise,
            "bone_problem": this.bone_problems.length ? this.bone_problems.filter(boneProb => boneProb.isChecked == true).map(data => data.label) : [],
            "sleeping_location": petForm.sleeping_location,
        };
        const emergency_contactsbl = {
            "emergency_contactsbl": {
                "contact": {
                    "name": petForm.emergency_contactsbl_contact_name,
                    "number": petForm.emergency_contactsbl_contact_number,
                    "email": petForm.emergency_contactsbl_contact_email,
                },
                "vet": {
                    "name": petForm.emergency_contactsbl_vet_name,
                    "email": petForm.emergency_contactsbl_vet_email
                }
            }
        };
        const insurance_cover = {
            "insurance_cover": {
                "insurance": {
                    "name": petForm.insurance_cover_insurance_name,
                    "amount": petForm.insurance_cover_insurance_amount
                }
            }
        };
        const vaccinationsbl = {
            "vaccinationsbl": [
                { "date": petForm.vaccinationsbl_date1 != "" ? this.convertDate(petForm.vaccinationsbl_date1) : "" },
                { "date": petForm.vaccinationsbl_date2 != "" ? this.convertDate(petForm.vaccinationsbl_date2) : "" },
                { "date": petForm.vaccinationsbl_date3 != "" ? this.convertDate(petForm.vaccinationsbl_date3) : "" },
                { "date": petForm.vaccinationsbl_date4 != "" ? this.convertDate(petForm.vaccinationsbl_date4) : "" },
            ],
        };
        const non_core_vaccinationsbl = {
            "non_core_vaccinationsbl": [
                { "date": petForm.non_core_vaccinationsbl_date1 != "" ? this.convertDate(petForm.non_core_vaccinationsbl_date1) : "" },
            ],
        };
        petForm.care_routine = care_routine;
        petForm.emergency_contactsbl = emergency_contactsbl;
        petForm.insurance_cover = insurance_cover.insurance_cover;
        petForm.vaccinationsbl = vaccinationsbl.vaccinationsbl;
        petForm.non_core_vaccinationsbl = non_core_vaccinationsbl.non_core_vaccinationsbl;
        petForm.parasite_control = this.petForm.value.parasite_control;
        petForm.other_medications = this.petForm.value.other_medications;
        if (petForm.dangerDog == true) {
            this.api.showAlert("Pet Disallowed", "Unfortunately, we can't allow you register a dangerous dog. Ensuring the safety of our customers is PetCloud's first priority. We hope you understand", ["ok"]);
            return false;
        }
        else if (petForm.microchipYesNo == 1 && petForm.microchip == "") {
            this.api.showAlert("Microchip Number", "Please Enter Microchip Number.", ["ok"]);
            return false;
        }
        const pets = {
            Pets: petForm,
        };
        this.api.showLoader();
        this.api
            .updatePetProfile(pets, this.newPetid)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
            this.api.hideLoader();
        }))
            .subscribe((res) => {
            if (res.success) {
                this.api.showToast("Pet profile Updated.", 2000, "bottom");
                // this.selectedSegment = 'image';
            }
        }, (err) => {
            this.api.showToast("Pet profile not updated.", 2000, "bottom");
            this.api.autoLogout(err, petForm);
        });
    }
    // Show action sheet to display option for upload pet image with camera or gallery
    showActionSheet(param) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            const actionSheet = yield this.actionSheetCtrl.create({
                header: "choose Photo from",
                buttons: [
                    {
                        text: "Camera",
                        icon: "camera",
                        handler: () => {
                            this.pickImage(this.camera.PictureSourceType.CAMERA, param);
                        },
                    },
                    {
                        text: "Gallery",
                        icon: "images",
                        handler: () => (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
                            const status = yield this.cameraAPI.checkPhotoLibraryPermission();
                            if (status) {
                                this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY, param);
                            }
                        }),
                    },
                    {
                        text: "Cancel",
                        icon: "close",
                        role: "cancel",
                        handler: () => {
                        },
                    },
                ],
            });
            yield actionSheet.present();
        });
    }
    pickImage(params, param) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            this.cameraAPI.getPicture(params).then((base64) => {
                console.log('pickImage', param);
                this.selectedPetImage = "data:image/jpeg;base64," + base64;
                let imageURL = "data:image/jpeg;base64," + base64;
                if (param == "petprofile") {
                    this.uploadImageData(imageURL, param);
                }
                else if (param == "vaccinerecord") {
                    this.uploadVaccinationRecord(imageURL);
                }
                else if (param == "insurancepolicy") {
                    this.uploadInsurancePolicy(imageURL);
                }
            }, err => {
            });
        });
    }
    // upload image to the server
    uploadImageData(imageUrL, param) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            const fileParams = {
                data: imageUrL,
                name: "Imagename.jpg",
                id: this.newPetid,
            };
            console.log('newPetid', this.newPetid);
            this.api.showLoader();
            this.api
                .uploadImagefile(fileParams)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
                this.api.hideLoader();
            }))
                .subscribe((res) => {
                if (res.success) {
                    this.api.showToast("Photo Updated.", 2000, "bottom");
                }
                else {
                    this.api.showToast("Error: Image upload failed.", 2000, "bottom");
                }
            }, (err) => {
                this.api.autoLogout(err, fileParams);
            });
        });
    }
    setDate(dateStr) {
        let str = dateStr;
        // str = str.split('/').join('-');
        str = new Date(str).toISOString();
        return str;
    }
    getVaccinationAlert() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            this.api.getVaccinationAlert(this.selectedPetId).subscribe((res) => {
                if (res.success) {
                    if (res.data) {
                        this.healthAlerts = res.data;
                        console.log("health alert", this.healthAlerts);
                    }
                }
            }, (err) => {
            });
        });
    }
    getInsurancePolicy() {
        this.api.getInsurancePolicy(this.selectedPetId).subscribe((res) => {
            if (res.status) {
                if (res.image) {
                    this.vaccinationRecordImage = res.image;
                }
                else {
                    this.vaccinationRecordImage = "";
                }
            }
            else {
                this.vaccinationRecordImage = "";
            }
        }, (err) => {
        });
    }
    deleteVaccine(id) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            this.api.deleteVaccinationRecord(id).subscribe((res) => {
                if (res.success) {
                    this.getVaccinationAlert();
                }
                else {
                }
            }, (err) => {
            });
        });
    }
    addVacination() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _add_vacination_add_vacination_component__WEBPACK_IMPORTED_MODULE_3__.AddVacinationComponent,
                animated: true,
                componentProps: {
                    petId: this.selectedPetId,
                },
            });
            modal.onDidDismiss().then((data) => {
                this.getVaccinationAlert();
            });
            return yield modal.present();
        });
    }
    viewImageModel(image) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _view_image_model_view_image_model_component__WEBPACK_IMPORTED_MODULE_8__.ViewImageModelComponent,
                animated: true,
                componentProps: {
                    image
                },
            });
            modal.onDidDismiss().then((data) => {
            });
            return yield modal.present();
        });
    }
    getReminderType(reminderType) {
        return _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService.remindersType(reminderType);
    }
    reminderFrequency(reminderFreq) {
        return _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService.reminderFrequency(reminderFreq);
    }
    vaccinationExplaination() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__awaiter)(this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _vaccination_explaination_vaccination_explaination_component__WEBPACK_IMPORTED_MODULE_7__.VaccinationExplainationComponent,
                animated: true,
                componentProps: {},
            });
            modal.onDidDismiss().then((data) => {
            });
            return yield modal.present();
        });
    }
    openPrescription() {
        this.api.openExteralLinks(this.fileURLVaccine);
    }
    openActiveBlock(activeBlock) {
        if (this.activeCard.length > 0) {
            // store index of value in array
            const indx = this.activeCard.indexOf(activeBlock);
            if (indx >= 0) {
                this.activeCard.splice(indx, 1);
            }
            else {
                this.activeCard.push(activeBlock);
            }
        }
        else {
            this.activeCard.push(activeBlock);
        }
    }
    convertDate(date) {
        return new _angular_common__WEBPACK_IMPORTED_MODULE_9__.DatePipe("en-US").transform(date, "y-MM-dd");
    }
};
PetUpdatePage.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.ActionSheetController },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.Platform },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_14__.ActivatedRoute },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormBuilder },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.ModalController },
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_14__.Router },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.NavController },
    { type: _ionic_storage__WEBPACK_IMPORTED_MODULE_15__.Storage },
    { type: _camera_service_service__WEBPACK_IMPORTED_MODULE_4__.CameraService },
    { type: _ionic_native_camera_ngx__WEBPACK_IMPORTED_MODULE_5__.Camera }
];
PetUpdatePage = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_16__.Component)({
        selector: "app-pet-update",
        template: _raw_loader_pet_update_page_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_pet_update_page_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], PetUpdatePage);



/***/ }),

/***/ 92787:
/*!********************************************************************************!*\
  !*** ./src/app/vaccination-explaination/vaccination-explaination.component.ts ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VaccinationExplainationComponent": function() { return /* binding */ VaccinationExplainationComponent; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_vaccination_explaination_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./vaccination-explaination.component.html */ 27857);
/* harmony import */ var _vaccination_explaination_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaccination-explaination.component.scss */ 80793);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/petcloud-api.service */ 78975);






let VaccinationExplainationComponent = class VaccinationExplainationComponent {
    constructor(api, model) {
        this.api = api;
        this.model = model;
    }
    ngOnInit() { }
    closeModal() {
        this.model.dismiss();
    }
};
VaccinationExplainationComponent.ctorParameters = () => [
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.ModalController }
];
VaccinationExplainationComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_5__.Component)({
        selector: 'app-vaccination-explaination',
        template: _raw_loader_vaccination_explaination_component_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_vaccination_explaination_component_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], VaccinationExplainationComponent);



/***/ }),

/***/ 40528:
/*!**************************************************************!*\
  !*** ./src/app/add-vacination/add-vacination.component.scss ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtdmFjaW5hdGlvbi5jb21wb25lbnQuc2NzcyJ9 */");

/***/ }),

/***/ 71827:
/*!*************************************************!*\
  !*** ./src/app/pet-update/pet-update.page.scss ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".petupdate {\n  padding: 0px 16px 16px;\n}\n.petupdate ion-card {\n  margin: 16px 0px 0px;\n}\n.petprofile {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n  max-height: 300px;\n  box-shadow: 0px 3px 5px 0px rgba(153, 153, 153, 0.2);\n  margin-bottom: 10px;\n}\n.petprofile img {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n     object-fit: cover;\n}\n.petprofile .upload {\n  position: absolute;\n  right: 10px;\n  bottom: 10px;\n  border-radius: 50%;\n  height: 35px;\n  width: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #ffffff;\n  background: #f44164;\n  font-size: 18px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2);\n}\nion-card {\n  box-shadow: none;\n}\nion-item {\n  --padding-start:0;\n  --inner-padding-end:0;\n  font-size: 15px;\n}\n.careRoutine ion-item {\n  --padding-start: 10px;\n  --inner-padding-end:10px;\n  font-size: 15px;\n}\n.decleation-text {\n  font-size: 14px;\n  line-height: 24px;\n}\n.download-card {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n.download-card .icon {\n  height: 3rem;\n  width: 3rem;\n  background-color: rgba(254, 65, 100, 0.2);\n  color: #fe4164;\n  border-radius: 1000px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 10px;\n}\n.download-card .icon ion-icon.md {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.download-card .label {\n  font-size: 12px;\n  font-weight: 400;\n  text-decoration: underline;\n  color: #fe4164;\n}\n.details a, .details ion-text {\n  font-size: 12px;\n}\ntable.details {\n  width: 100%;\n  margin-top: 16px;\n  margin-bottom: 16px;\n}\ntable.details th {\n  font-size: 12px;\n  font-weight: 400;\n  color: #fe5474;\n  text-align: left;\n}\ntable.details td {\n  font-size: 12px;\n  font-weight: 400;\n}\n.my-label {\n  white-space: normal;\n  margin-bottom: 10px;\n}\n.theme-text {\n  color: #FE4164;\n}\n.theme-text-no {\n  color: grey;\n}\n.form-section {\n  border-bottom: 1px dashed #e0e0e0;\n}\n.form-section .title {\n  font-size: 14px;\n  font-weight: 600;\n  margin: 0;\n  margin-bottom: 10px;\n  margin-top: 15px;\n}\n.form-section .info {\n  font-size: 14px;\n  font-weight: 400;\n  margin: 0;\n  margin-bottom: 10px;\n  color: #999;\n}\n.form-section .form-inner {\n  border: 1px solid #e0e0e0;\n  margin-bottom: 16px;\n  padding: 0px;\n  padding-top: 0;\n  border-radius: 4px;\n  overflow: hidden;\n}\n.custom-list {\n  padding: 16px;\n}\n.custom-list .details .time {\n  font-size: 12px;\n  line-height: 16px;\n}\n.custom-list ion-card {\n  margin: 10px 0px;\n  box-shadow: none;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n}\n.custom-list ion-card ion-card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 16px;\n  color: #2D2D2D;\n  font-weight: 500;\n}\n.custom-list ion-card ion-card-content {\n  padding: 16px;\n}\n.repeat-list-item {\n  border: 1px dashed #e0e0e0;\n  padding: 16px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n.decleration h3 {\n  font-size: 16px;\n}\n.decleration .decleation-text {\n  font-size: 13px;\n  line-height: 19px;\n  color: #666;\n}\n.decleration .decleation-text ol {\n  padding-left: 20px;\n}\nion-grid, ion-row, ion-col {\n  margin: 0px;\n  padding: 0px;\n}\n.health-form ion-card-content {\n  padding: 0px 16px 16px !important;\n}\n.health-form ion-card-content ion-button {\n  --box-shadow: none;\n  --border-radius: 4px;\n  width: 100%;\n  text-transform: capitalize;\n  margin: 16px 0px 5px;\n}\n.agree-term ion-checkbox {\n  margin-right: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBldC11cGRhdGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksc0JBQUE7QUFDSjtBQUFHO0VBQ0ksb0JBQUE7QUFFUDtBQUNBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLG9EQUFBO0VBQ0EsbUJBQUE7QUFFSjtBQURJO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxvQkFBQTtLQUFBLGlCQUFBO0FBR1I7QUFESTtFQUNJLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0Esd0NBQUE7QUFHUjtBQUFBO0VBQ0ksZ0JBQUE7QUFHSjtBQURBO0VBQ0ksaUJBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUFJSjtBQURJO0VBQ0kscUJBQUE7RUFDQSx3QkFBQTtFQUNBLGVBQUE7QUFJUjtBQURBO0VBQ0ksZUFBQTtFQUNBLGlCQUFBO0FBSUo7QUFGQTtFQUNJLGFBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFLSjtBQUpJO0VBQ0ksWUFBQTtFQUNBLFdBQUE7RUFDQSx5Q0FBQTtFQUNBLGNBQUE7RUFDQSxxQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7QUFNUjtBQUxRO0VBQ0ksYUFBQTtFQUNBLGNBQUE7QUFPWjtBQUpJO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0VBQ0EsMEJBQUE7RUFDQSxjQUFBO0FBTVI7QUFESTtFQUNJLGVBQUE7QUFJUjtBQUFBO0VBQ0ksV0FBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUFHSjtBQUZJO0VBQ0ksZUFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGdCQUFBO0FBSVI7QUFGSTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtBQUlSO0FBQUE7RUFDSSxtQkFBQTtFQUNBLG1CQUFBO0FBR0o7QUFBQTtFQUNJLGNBQUE7QUFHSjtBQURFO0VBQ0UsV0FBQTtBQUlKO0FBREU7RUFDRSxpQ0FBQTtBQUlKO0FBSEk7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUtSO0FBSEk7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0FBS1I7QUFISTtFQUNJLHlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFLUjtBQURBO0VBQ0ksYUFBQTtBQUlKO0FBRlE7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7QUFJWjtBQURJO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLG9DQUFBO0FBR1I7QUFGUTtFQUNJLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUlaO0FBRlE7RUFDSSxhQUFBO0FBSVo7QUFDQTtFQUNJLDBCQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQUVKO0FBRUk7RUFDSSxlQUFBO0FBQ1I7QUFDSTtFQUNJLGVBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7QUFDUjtBQUFRO0VBQ0ksa0JBQUE7QUFFWjtBQUdBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFBSjtBQUlJO0VBQ0ksaUNBQUE7QUFEUjtBQUVRO0VBQ0ksa0JBQUE7RUFDQSxvQkFBQTtFQUNBLFdBQUE7RUFDQSwwQkFBQTtFQUNBLG9CQUFBO0FBQVo7QUFLSTtFQUNJLGtCQUFBO0FBRlIiLCJmaWxlIjoicGV0LXVwZGF0ZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGV0dXBkYXRle1xuICAgIHBhZGRpbmc6IDBweCAxNnB4IDE2cHg7XG4gICBpb24tY2FyZCB7XG4gICAgICAgbWFyZ2luOiAxNnB4IDBweCAwcHg7XG4gICB9XG59XG4ucGV0cHJvZmlsZXtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xuICAgIGJveC1zaGFkb3c6IDBweCAzcHggNXB4IDBweCByZ2IoMTUzIDE1MyAxNTMgLyAyMCUpO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgfVxuICAgIC51cGxvYWQge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICBib3R0b206IDEwcHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgaGVpZ2h0OiAzNXB4O1xuICAgICAgICB3aWR0aDogMzVweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZjQ0MTY0O1xuICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCA4cHggMCByZ2IoMCAwIDAgLyAyMCUpO1xuICAgIH1cbn1cbmlvbi1jYXJkIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xufVxuaW9uLWl0ZW17XG4gICAgLS1wYWRkaW5nLXN0YXJ0OjA7XG4gICAgLS1pbm5lci1wYWRkaW5nLWVuZDowO1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbn1cbi5jYXJlUm91dGluZSB7XG4gICAgaW9uLWl0ZW17XG4gICAgICAgIC0tcGFkZGluZy1zdGFydDogMTBweDtcbiAgICAgICAgLS1pbm5lci1wYWRkaW5nLWVuZDoxMHB4O1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgfVxufVxuLmRlY2xlYXRpb24tdGV4dHtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG59XG4uZG93bmxvYWQtY2FyZHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIC5pY29ue1xuICAgICAgICBoZWlnaHQ6IDNyZW07XG4gICAgICAgIHdpZHRoOiAzcmVtO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NCwgNjUsIDEwMCwgMC4yKTtcbiAgICAgICAgY29sb3I6IHJnYmEoMjU0LCA2NSwgMTAwLCAxKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwMHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICBpb24taWNvbi5tZCB7XG4gICAgICAgICAgICB3aWR0aDogMS4zcmVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAxLjNyZW07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmxhYmVse1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICBjb2xvcjogcmdiKDI1NCwgNjUsIDEwMCk7XG4gICAgfVxufVxuXG4uZGV0YWlsc3tcbiAgICBhLCBpb24tdGV4dHtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbn1cblxudGFibGUuZGV0YWlsc3tcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgdGh7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgY29sb3I6ICNmZTU0NzQ7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuICAgIHRke1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgfVxufVxuXG4ubXktbGFiZWx7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4udGhlbWUtdGV4dHtcbiAgICBjb2xvcjogI0ZFNDE2NDtcbiAgfVxuICAudGhlbWUtdGV4dC1ub3tcbiAgICBjb2xvcjogZ3JleTtcbiAgfVxuXG4gIC5mb3JtLXNlY3Rpb257XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjZTBlMGUwO1xuICAgIC50aXRsZXtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XG4gICAgfVxuICAgIC5pbmZve1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgY29sb3I6ICM5OTk7XG4gICAgfVxuICAgIC5mb3JtLWlubmVye1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTBlMGUwO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xuICAgICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICAgIHBhZGRpbmctdG9wOiAwO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxufVxuXG4uY3VzdG9tLWxpc3R7XG4gICAgcGFkZGluZzogMTZweDtcbiAgICAuZGV0YWlsc3tcbiAgICAgICAgLnRpbWV7XG4gICAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpb24tY2FyZHtcbiAgICAgICAgbWFyZ2luOiAxMHB4IDBweDtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjIpO1xuICAgICAgICBpb24tY2FyZC1oZWFkZXJ7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIGNvbG9yOiAjMkQyRDJEO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgfVxuICAgICAgICBpb24tY2FyZC1jb250ZW50e1xuICAgICAgICAgICAgcGFkZGluZzogMTZweDtcbiAgICAgICAgICAgIC8vIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7ICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG59XG4ucmVwZWF0LWxpc3QtaXRlbXtcbiAgICBib3JkZXI6IDFweCBkYXNoZWQgI2UwZTBlMDtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG59XG5cbi5kZWNsZXJhdGlvbntcbiAgICBoM3tcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cbiAgICAuZGVjbGVhdGlvbi10ZXh0e1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgb2x7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmlvbi1ncmlkLCBpb24tcm93LCBpb24tY29sIHtcbiAgICBtYXJnaW46IDBweDtcbiAgICBwYWRkaW5nOiAwcHg7XG59XG5cbi5oZWFsdGgtZm9ybSB7XG4gICAgaW9uLWNhcmQtY29udGVudHtcbiAgICAgICAgcGFkZGluZzogMHB4IDE2cHggMTZweCAhaW1wb3J0YW50O1xuICAgICAgICBpb24tYnV0dG9uIHtcbiAgICAgICAgICAgIC0tYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgICAgIC0tYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICAgICAgICAgIG1hcmdpbjogMTZweCAwcHggNXB4O1xuICAgICAgICB9XG4gICAgfVxufVxuLmFncmVlLXRlcm0ge1xuICAgIGlvbi1jaGVja2JveCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB9XG59Il19 */");

/***/ }),

/***/ 80793:
/*!**********************************************************************************!*\
  !*** ./src/app/vaccination-explaination/vaccination-explaination.component.scss ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".title {\n  font-size: 14px;\n  line-height: 24px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhY2NpbmF0aW9uLWV4cGxhaW5hdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQUE7RUFDQSxpQkFBQTtBQUNKIiwiZmlsZSI6InZhY2NpbmF0aW9uLWV4cGxhaW5hdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZXtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG59Il19 */");

/***/ }),

/***/ 41564:
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/add-vacination/add-vacination.component.html ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"closeModal()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Add Reminder</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding animated fadeIn\">\n\n\n\n     <form [formGroup]=\"addVaction\">\n\n      <ion-item>\n        <ion-label>Select Reason</ion-label>\n        <ion-select okText=\"Okay\" value=\"0\" interface=\"action-sheet\" formControlName=\"vactionationType\" \n          cancelText=\"Dismiss\">\n          <ion-select-option value=\"0\">Grooming</ion-select-option>\n          <ion-select-option value=\"1\">Vaccination</ion-select-option>\n          <ion-select-option value=\"2\">General Check Up</ion-select-option>\n          <ion-select-option value=\"3\">(6-8 weeks age) C3 Vaccination</ion-select-option>\n          <ion-select-option value=\"4\">(10-12 weeks age) C3 Vaccination</ion-select-option>\n          <ion-select-option value=\"5\">(14-16 weeks age) C3 Vaccination</ion-select-option>\n          <ion-select-option value=\"6\">Annual Vaccination Booster</ion-select-option>\n          <ion-select-option value=\"7\">Socialisation</ion-select-option>\n          <ion-select-option value=\"8\">Puppy School</ion-select-option>\n          <ion-select-option value=\"9\">Desexing</ion-select-option>\n          <ion-select-option value=\"10\">Microchip</ion-select-option>\n          <ion-select-option value=\"11\">Council</ion-select-option>\n          <ion-select-option value=\"12\">Teeth Descale</ion-select-option>\n          <ion-select-option value=\"13\">Training</ion-select-option>\n          <ion-select-option value=\"14\">Medication</ion-select-option>\n          <ion-select-option value=\"15\">Flea Control</ion-select-option>\n          <ion-select-option value=\"16\">Birthday Pawty!</ion-select-option>\n          <ion-select-option value=\"17\">Exercise</ion-select-option>\n          <ion-select-option value=\"18\">Gut Worming</ion-select-option>\n          <ion-select-option value=\"19\">Heart Worm</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label>Reminder Frequency</ion-label>\n        <ion-select value=\"6\" interface=\"action-sheet\" okText=\"Okay\" formControlName=\"alertFrequeny\" \n          cancelText=\"Dismiss\">\n        \n          <ion-select-option  value=\"6\">Once Off</ion-select-option>\n          <ion-select-option  value=\"0\">Weekly</ion-select-option>\n          <ion-select-option value=\"1\">Fortnightly</ion-select-option>\n          <ion-select-option value=\"2\">Monthy</ion-select-option>\n          <ion-select-option value=\"3\">Quarterly</ion-select-option>\n          <ion-select-option value=\"4\">Half-yearly</ion-select-option>\n          <ion-select-option value=\"5\">Yearly</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label position=\"stacked\">Start Date<small class=\"error\"></small></ion-label>\n        <ion-datetime  display-format=\"DDD DD MMM YYYY\" \n        max=\"2024-12-31\"\n       picker-format=\"DD/MMM/YYYY\" placeholder=\"Thu 16 Jan 2019\" formControlName=\"lastVactionation\"></ion-datetime>\n      </ion-item>\n\n      <ion-item>\n      <ion-label position=\"stacked\">Start Time<small class=\"error\"></small></ion-label>\n      <ion-datetime \n      max=\"2024-12-31\"\n      display-format=\"HH:mm\"  picker-format=\"HH:mm\" placeholder=\"11:20\" formControlName=\"startTime\"></ion-datetime>\n     </ion-item> \n\n\n\n      <ion-button [disabled]=\"!addVaction.valid\" class=\"text-capitalize fls-0 fs-18\" size=\"large\" expand=\"full\"\n        color=\"submit-btn\" (click)=\"addAlert()\">Save\n      </ion-button>\n    </form> \n \n</ion-content>");

/***/ }),

/***/ 43053:
/*!***************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pet-update/pet-update.page.html ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button defaultHref=\"pet\"></ion-back-button>\n        </ion-buttons>\n        <ion-title>Update Pet Details</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <ion-segment scrollable [(ngModel)]=\"selectedSegment\" color=\"theme\" class=\"custom-segment\">\n        <ion-segment-button value=\"details\">Details</ion-segment-button>\n        <ion-segment-button value=\"identity\">Identity</ion-segment-button>\n        <ion-segment-button value=\"careRoutine\">Care Routine</ion-segment-button>\n        <ion-segment-button value=\"routineHabits\">Routine & Habits</ion-segment-button>\n        <ion-segment-button value=\"health\">Health</ion-segment-button>\n    </ion-segment>\n    <form [formGroup]=\"petForm\">\n        <ion-grid>\n            <ion-row>\n                <ion-col [ngSwitch]=\"selectedSegment\">\n                    <!-- 1. Details section start -->\n                    <div *ngSwitchCase=\"'details'\">\n                        <div *ngIf=\"selectedPetImage\" class=\"petprofile\">\n                            <img [src]=\"selectedPetImage\" />\n                            <div class=\"upload\" (click)=\"showActionSheet('petprofile')\">\n                                <ion-icon name=\"pencil\"></ion-icon>\n                            </div>\n                        </div>\n                        <ion-list class=\"petupdate\">\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('petImage').hasError('required') && petForm.get('petImage').touched\">\n                                <p> select your pet image!</p>\n                            </ion-text>\n                            <ion-item>\n                                <ion-label position=\"stacked\">Your Pet Name</ion-label>\n                                <ion-input type=\"text\" name=\"petName\" id=\"petName\" formControlName=\"name\"></ion-input>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('name').hasError('required') && petForm.get('name').touched\">\n                                <p> enter pet name!</p>\n                            </ion-text>\n                            <ion-item>\n                                <ion-label>Type Of Pet\n                                    <small class=\"error\">*</small>\n                                </ion-label>\n                                <ion-select placeholder=\"select pet type\" color=\"theme\" formControlName=\"petType\">\n                                    <ion-select-option value=\"1\">Dog</ion-select-option>\n                                    <ion-select-option value=\"2\">Cat</ion-select-option>\n                                    <ion-select-option value=\"3\">Horse</ion-select-option>\n                                    <ion-select-option value=\"4\">Other</ion-select-option>\n                                </ion-select>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('petType').hasError('required') && petForm.get('petType').touched\">\n                                <p> select pet type!</p>\n                            </ion-text>\n                            <ion-item>\n                                <ion-label position=\"stacked\">Your Pets Breed\n                                    <small class=\"error\">*</small>\n                                </ion-label>\n                                <ion-input type=\"text\" name=\"petBreed\" id=\"petBreed\" formControlName=\"beed\"></ion-input>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('beed').hasError('required') && petForm.get('beed').touched\">\n                                <p> enter pet breed!</p>\n                            </ion-text>\n                            <ion-item>\n                                <ion-label class=\"ion-text-wrap\">Has your dog been declared dangerous?</ion-label>\n                                <ion-toggle color=\"theme-sec\" formControlName=\"dangerDog\"></ion-toggle>\n                            </ion-item>\n                            <ion-card *ngIf=\"petForm.get('dangerDog').value == true\" color=\"warning\">\n                                <ion-card-content>\n                                    You cannot register your animal with PetCloud.\n                                </ion-card-content>\n                            </ion-card>\n                            <ion-item>\n                                <ion-label>Gender\n                                    <small class=\"error\">*</small>\n                                </ion-label>\n                                <ion-select placeholder=\"gender\" name=\"gender\" id=\"gender\" formControlName=\"gender\">\n                                    <ion-select-option value=\"M\">Male</ion-select-option>\n                                    <ion-select-option value=\"F\">Female</ion-select-option>\n                                </ion-select>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('gender').hasError('required') && petForm.get('gender').touched\">\n                                <p> select pet gender!</p>\n                            </ion-text>\n                            <ion-item *ngIf=\"petForm.get('petType').value == 1 || petForm.get('petType').value == 2\">\n                                <ion-label>Desexed</ion-label>\n                                <ion-select name=\"desexed\" id=\"desexed\" formControlName=\"desexed\">\n                                    <ion-select-option value=\"Y\">Yes</ion-select-option>\n                                    <ion-select-option value=\"N\">No</ion-select-option>\n                                </ion-select>\n                            </ion-item>\n                            <ion-item>\n                                <ion-label position=\"stacked\">Date Of Birth</ion-label>\n                                <ion-datetime display-format=\"DD/MM/YYYY\" [max]=\"currnetDt\" picker-format=\"DD/MM/YYYY\"\n                                    formControlName=\"dob\" placeholder=\"e.g 02/12/2019\"></ion-datetime>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('dob').hasError('required') && petForm.get('dob').touched\">\n                                <p> select pet date of birth!</p>\n                            </ion-text>\n                            <ion-item>\n                                <ion-label position=\"stacked\">Weight\n                                    <small class=\"error\">*</small>\n                                </ion-label>\n                                <ion-select formControlName=\"weight\" placeholder=\"select weight\">\n                                    <ion-select-option value=\"1\">\n                                        < 10kg (small)</ion-select-option>\n                                            <ion-select-option value=\"2\">11-25kg (medium)\n                                            </ion-select-option>\n                                            <ion-select-option value=\"3\">26-40kg (large)</ion-select-option>\n                                            <ion-select-option value=\"4\"> > 41kg (very large)</ion-select-option>\n                                </ion-select>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('weight').hasError('required') && petForm.get('weight').touched\">\n                                <p> select pet weight!</p>\n                            </ion-text>\n                            <ion-item>\n                                <ion-label position=\"stacked\">Habits\n                                    <!--<small class=\"error\">*</small>-->\n                                </ion-label>\n                                <ion-select placeholder=\"select pet habits\" formControlName=\"habbits\" multiple>\n                                    <ion-select-option value=\"1\">Escapism</ion-select-option>\n                                    <ion-select-option value=\"2\">Digging holes</ion-select-option>\n                                    <ion-select-option value=\"3\">Destructive behaviour</ion-select-option>\n                                    <ion-select-option value=\"4\">Barking/meowing/calling</ion-select-option>\n                                    <ion-select-option value=\"5\">Growling</ion-select-option>\n                                    <ion-select-option value=\"6\">Health Issues</ion-select-option>\n                                </ion-select>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"petForm.get('habbits').hasError('required') && petForm.get('habbits').touched\">\n                                <p> select pet habits!</p>\n                            </ion-text>\n                            <ion-card color=\"note\" class=\"ion-no-margin\">\n                                <ion-card-content>Dogs that have a history of destruction and fence jumping are not suited\n                                    to Pet Sitting & must be booked into a kennel\n                                </ion-card-content>\n                            </ion-card>\n                            <ion-item *ngIf=\"petForm.get('petType').value == 1 || petForm.get('petType').value == 2\">\n                                <ion-label class=\"my-label\" position=\"stacked\">How often do you treat your pet for fleas?\n                                </ion-label>\n                                <ion-select name=\"petFleas\" id=\"petFleas\" formControlName=\"pet_fleas\">\n                                    <ion-select-option value=\"1\">Weekly</ion-select-option>\n                                    <ion-select-option value=\"2\">Monthly</ion-select-option>\n                                    <ion-select-option value=\"3\">Never</ion-select-option>\n                                    <ion-select-option value=\"4\">No Problem</ion-select-option>\n                                </ion-select>\n                            </ion-item>\n                            <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                                *ngIf=\"(petForm.get('petType').value == 1 || petForm.get('petType').value == 2) && (petForm.get('pet_fleas').hasError('required') && petForm.get('pet_fleas').touched)\">\n                                <p> select treat your pet for fleas!</p>\n                            </ion-text>\n                        </ion-list>                        \n                    </div>\n                    <!-- 1. Details section end -->\n                    <ion-list *ngSwitchCase=\"'identity'\" class=\"custom-list\">\n                        <ion-card color=\"note\" class=\"ion-no-margin\">\n                            <ion-card-content>Part of responsible pet ownership is making sure your furry friends can be\n                                swiftly identified if they ever go missing and find themselves at the RSPCA, council\n                                pound or with a member of the public. The need for multiple and varied forms of ID is\n                                essential as no one type is completely fool proof.\n                            </ion-card-content>\n                        </ion-card>\n                        <ion-item>\n                            <ion-label class=\"ion-text-wrap\">Does your pet have a Microchip?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"microchipYesNo\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.microchipYesNo\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.microchipYesNo\">No</span> </div>\n                        </ion-item>\n\n                        <ion-item *ngIf=\"petForm.get('microchipYesNo').value == true\">\n                            <ion-label position=\"stacked\">Microchip</ion-label>\n                            <ion-input type=\"number\" formControlName=\"microchip\" placeholder=\"e.g. 1122334455\">\n                            </ion-input>\n                        </ion-item>\n                        <ion-card color=\"note\" class=\"ion-margin-top\"\n                            *ngIf=\"petForm.get('microchipYesNo').value == false\">\n                            <ion-card-content>A microchip is a permanent method of electronic identification. The\n                                chip\n                                itself is very small - about the size of a grain of rice - and is implanted just\n                                under\n                                the skin between the shoulder blades at the back of your pet's neck by a Vet. Each\n                                chip\n                                has a unique number that is detected using a microchip scanner.\n                            </ion-card-content>\n                        </ion-card>\n                        <ion-item>\n                            <ion-label class=\"ion-text-wrap\">Does your pet have a RSPCA VIP tag?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"rspcaTAG\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.rspcaTAG\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.rspcaTAG\">No</span> </div>\n                        </ion-item>\n                        <ion-card color=\"note\" class=\"ion-margin-top\" *ngIf=\"petForm.get('rspcaTAG').value == false\">\n                            <ion-card-content>\n                                An RSPCA VIP tag is a coloured plastic tag with your pet's individual ID number and\n                                our 24 hour hotline. Should a member of the public, a vet or the council find your\n                                pet they will simply need to call our hotline, quote your pet's ID number and we\n                                will put them through to you. This means that at any time of the day or night you\n                                can be reunited with your loved one. RSPCA VIP tags never expire and are well worth\n                                a small contribution of $5 for the peace of mind they provide. To purchase a VIP tag\n                                for your cat or dog you can call us on (07) 3426 9999 or purchase one at your local\n                                RSPCA shelter.\n                            </ion-card-content>\n                        </ion-card>\n                        <ion-item>\n                            <ion-label class=\"ion-text-wrap\">Is your pet currently registered with Council?\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            <ion-select placeholder=\"select\" formControlName=\"pet_rego\">\n                                <ion-select-option value=\"Y\">Yes</ion-select-option>\n                                <ion-select-option value=\"N\">No</ion-select-option>\n                                <ion-select-option value=\"N/A\">N/A</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-card *ngIf=\"petForm.get('pet_rego').value == 'N'\" color=\"note\" class=\"ion-no-margin\">\n                            <ion-card-content>\n                                Pet registration is a legal requirement under the Domestic Animals Act 1994, please\n                                register your domestic pet with your Council as you will not be able to use PetCloud\n                                until you do\n                            </ion-card-content>\n                        </ion-card>\n                        <ion-item *ngIf=\"petForm.get('pet_rego').value == 'Y'\">\n                            <ion-label position=\"stacked\">Pet Council</ion-label>\n                            <ion-input type=\"text\" placeholder=\"e.g. Brisbane City Council\"\n                                formControlName=\"pet_council\"></ion-input>\n                        </ion-item>\n                        <ion-item>\n                            <ion-label class=\"ion-text-wrap\">Does your pet have a council registration tag?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"councilTag\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.councilTag\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.councilTag\">No</span> </div>\n                        </ion-item>\n                        <ion-card color=\"note\" class=\"ion-no-margin\" *ngIf=\"petForm.get('councilTag').value == false\">\n                            <ion-card-content>\n                                Your city council provides registration tags and you will need to contact them if\n                                you don't have one.\n                            </ion-card-content>\n                        </ion-card>\n                        <ion-item>\n                            <ion-label class=\"ion-text-wrap\">Does your pet have a personal tag with your name and phone\n                                number?\n                            </ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"personalTag\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.personalTag\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.personalTag\">No</span> </div>\n                        </ion-item>\n                        <ion-card color=\"note\" class=\"ion-no-margin\" *ngIf=\"petForm.get('personalTag').value == false\">\n                            <ion-card-content>\n                                A personally designed pet tag can usually be ordered online or from a key engraving\n                                shop.\n                            </ion-card-content>\n                        </ion-card>\n                    </ion-list>\n                    <!-- 2. Identity section end-->\n\n\n\n                    <!-- 3. Care Routine section start-->\n                    <ion-list *ngSwitchCase=\"'careRoutine'\" class=\"custom-list careRoutine\">\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Food & Water</h3>\n                            <p class=\"info\">\n                                Normally fed what brand and type of food & how many times a day?\n                            </p>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Breakfast</ion-label>\n                                    <ion-textarea rows=\"3\" formControlName=\"care_routine_breakfast_desc\"\n                                        placeholder=\"Eg. Quarter cup of Farmer's Market dry kibble mixed with 2 tablespoons of raw mince. Bowl of fresh water on side.\"\n                                        maxlength=\"500\"></ion-textarea>\n                                </ion-item>\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Next Due</ion-label>\n                                    <ion-datetime display-format=\"hh:mm A\" picker-format=\"hh:mm A\"\n                                        placeholder=\"11:20 AM\" formControlName=\"care_routine_breakfast_time\">\n                                    </ion-datetime>\n                                </ion-item>\n                            </div>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Dinner</ion-label>\n                                    <ion-textarea rows=\"3\" formControlName=\"care_routine_dinner_desc\"\n                                        placeholder=\"Eg. Quarter cup of dry food mixed with 2 tablespoons of raw mince. Bowl of fresh water on side.\"\n                                        maxlength=\"500\"></ion-textarea>\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Next Due</ion-label>\n                                    <ion-datetime display-format=\"hh:mm A\" picker-format=\"hh:mm A\"\n                                        placeholder=\"11:20 AM\" formControlName=\"care_routine_dinner_time\">\n                                    </ion-datetime>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Any Conditions that need food consideration?</h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Select food consideration?\n                                    </ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"Digestive sensitivity\"\n                                        formControlName=\"food_considerations\" multiple=\"true\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\"\n                                            *ngFor=\"let food_consideration of food_considerations\"\n                                            [value]=\"food_consideration.label\">{{food_consideration?.label}}\n                                        </ion-select-option>\n                                    </ion-select>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Do they take any supplements? </h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Select supplements </ion-label>\n\n\n                                    <ion-select color=\"theme\" placeholder=\"Glucosamine - joints\"\n                                        formControlName=\"supplement\" multiple=\"true\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let suppliment of suppliments\"\n                                            [value]=\"suppliment.value\">{{suppliment?.value}}\n                                        </ion-select-option>\n                                    </ion-select>\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Provide more detail such as brand, quantity, and how\n                                        given.</ion-label>\n                                    <ion-textarea rows=\"3\" formControlName=\"extra_details\"\n                                        placeholder=\"x1 scoop of xyz every meal time on top of their food.\"\n                                        maxlength=\"500\"></ion-textarea>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Exercise </h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">How Often is your pet usually walked?</ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"A couple of times in a week\"\n                                        formControlName=\"exercise_freq\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let exerFreq of exericeFreq\"\n                                            [value]=\"exerFreq.label\">{{exerFreq?.label}}\n                                        </ion-select-option>\n                                    </ion-select>\n\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">How far are they usually walked per session ?\n                                    </ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"2 km\" formControlName=\"walkdistance\"\n                                        interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let walk of walkKms\" [value]=\"walk\">\n                                            {{walk}} km\n                                        </ion-select-option>\n                                    </ion-select>\n\n\n                                </ion-item>\n\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Time of day\n                                    </ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"Early Morning\"\n                                        formControlName=\"exercise_time\" multiple=\"true\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let exerciseTime of exerciseTime\"\n                                            [value]=\"exerciseTime.value\">{{exerciseTime?.value}}\n                                        </ion-select-option>\n                                    </ion-select>\n\n\n                                </ion-item>\n\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Any bone or muscle problems walking? </h3>\n                            <div class=\"form-inner\">\n\n\n                                <ion-item lines=\"full\" *ngFor=\"let boneProblem of bone_problems\">\n                                    <ion-label>{{boneProblem.label}}\n                                    </ion-label>\n                                    <ion-checkbox (ionChange)=\"onChangeBoneProblem($event,boneProblem)\"\n                                        formControlName=\"bone_problem\" [checked]=\"boneProblem?.isChecked\" color=\"theme\"\n                                        slot=\"end\">\n                                    </ion-checkbox>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Sleeping Time </h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Where does the pet sleep at night?\n                                    </ion-label>\n\n\n                                    <ion-select color=\"theme\" placeholder=\"Laundry/Garage/Patio/Others\"\n                                        formControlName=\"sleeping_location\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let petSleepLoc of petSleepLocation\"\n                                            [value]=\"petSleepLoc.value\">{{petSleepLoc?.label}}\n                                        </ion-select-option>\n                                    </ion-select>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Flea & Tick control </h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">What brand & quantity of flea & tick control do you\n                                        give them?\n                                    </ion-label>\n\n                                    <ion-textarea rows=\"3\" formControlName=\"parasite_flea_description\"\n                                        placeholder=\"x1 Comfortis tablet once per month\" maxlength=\"500\"></ion-textarea>\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\"> Frequency</ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"Weekly\"\n                                        formControlName=\"parasite_flea_frequency\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let freq of frequency\"\n                                            [value]=\"freq.value\">{{freq?.label}}\n                                        </ion-select-option>\n                                    </ion-select>\n\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Next Due</ion-label>\n                                    <ion-datetime placeholder=\"DD/MM/YYYY\" [min]=\"currnetDt\" displayFormat=\"DD/MM/YYYY\"\n                                        formControlName=\"parasite_flea_date\" max=\"2030-12-09\"></ion-datetime>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Heartworm</h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">What brand & quantity of heart worm do you give them?\n                                    </ion-label>\n\n                                    <ion-textarea rows=\"3\" formControlName=\"parasite_heartworm_description\"\n                                        placeholder=\"x1 Blah once per month.\" maxlength=\"500\"></ion-textarea>\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\"> Frequency</ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"Weekly\"\n                                        formControlName=\"parasite_heartworm_frequency\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let freq of frequency\"\n                                            [value]=\"freq.value\">{{freq?.label}}\n                                        </ion-select-option>\n                                    </ion-select>\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Next Due</ion-label>\n                                    <ion-datetime [min]=\"currnetDt\" displayFormat=\"DD/MM/YYYY\" placeholder=\"DD/MM/YYYY\"\n                                        formControlName=\"parasite_heartworm_date\" max=\"2030-12-09\"></ion-datetime>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Stomach Wormer</h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">What brand & quantity of stomach wormer do you give\n                                        them?\n                                    </ion-label>\n\n                                    <ion-textarea rows=\"3\" formControlName=\"parasite_stomach_wormer_description\"\n                                        placeholder=\"x1 Blah All Wormer once per month\" maxlength=\"500\"></ion-textarea>\n\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\"> Frequency</ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"Weekly\"\n                                        formControlName=\"parasite_stomach_wormer_frequency\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let freq of frequency\"\n                                            [value]=\"freq.value\">{{freq?.label}}\n                                        </ion-select-option>\n                                    </ion-select>\n\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Next Due</ion-label>\n                                    <ion-datetime [min]=\"currnetDt\" displayFormat=\"DD/MM/YYYY\" placeholder=\"DD/MM/YYYY\"\n                                        formControlName=\"parasite_stomach_wormer_date\" max=\"2030-12-09\"></ion-datetime>\n                                </ion-item>\n                            </div>\n                        </div>\n                        <div class=\"form-section\">\n                            <h3 class=\"title\">Grooming</h3>\n                            <div class=\"form-inner\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Where do you take them for grooming?\n                                    </ion-label>\n                                    <ion-input placeholder=\"ABC Grooming\" formControlName=\"grooming_location\">\n                                    </ion-input>\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Reminder Frequency</ion-label>\n\n                                    <ion-select color=\"theme\" placeholder=\"Frequency\"\n                                        formControlName=\"grooming_frequency\" interface=\"action-sheet\">\n                                        <ion-select-option class=\"fs-14\" *ngFor=\"let freq of frequency\"\n                                            [value]=\"freq.value\">{{freq?.label}}\n                                        </ion-select-option>\n                                    </ion-select>\n\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\">Next Due Date</ion-label>\n                                    <ion-datetime [min]=\"currnetDt\" displayFormat=\"DD/MM/YYYY\" placeholder=\"DD/MM/YYYY\"\n                                        formControlName=\"grooming_date\" max=\"2030-12-09\"></ion-datetime>\n                                </ion-item>\n                            </div>\n                        </div>\n                    </ion-list>\n\n                    <!-- 3. Care Routine section end-->\n\n                    <!-- 4. Routine & Habits section start-->\n                    <ion-list *ngSwitchCase=\"'routineHabits'\" class=\"custom-list\">\n\n                        <ion-item>\n                            <ion-label position=\"stacked\">About My Breed:</ion-label>\n                            <ion-textarea rows=\"4\" cols=\"5\" formControlName=\"about_breed\"\n                                placeholder=\"Cavoodles are a mixed of Cavilier King Charles Spaniel and a Toy Poodle. A love of people. Good with kids.\">\n                            </ion-textarea>\n                        </ion-item>\n                        <ion-text slot=\"end\" align-items-end>\n                            <small><i>{{500 - petForm.get('about_breed').value?.length}} char left</i></small>\n                        </ion-text>\n\n\n                        <ion-item>\n                            <ion-label class=\"ion-text-wrap\">Fine to stay with minder's other friendly pets?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"friendly_pet\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.friendly_pet\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.friendly_pet\">No</span> </div>\n                        </ion-item>\n                        <ion-item>\n                            <ion-label position=\"stacked\">Fine to stay with children\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            <ion-select placeholder=\"select fine to stay\" formControlName=\"children_stay\"\n                                [interfaceOptions]=\"petChildrenStaySelectoption\" interface=\"action-sheet\"\n                                multiple=\"false\">\n                                <ion-select-option value=\"6\">Not ok with children</ion-select-option>\n                                <ion-select-option value=\"5\">Fine with children all ages</ion-select-option>\n                                <ion-select-option value=\"1\">Fine with children over age 2</ion-select-option>\n                                <ion-select-option value=\"2\">Fine with children over age 5</ion-select-option>\n                                <ion-select-option value=\"3\">Fine with children over age 8</ion-select-option>\n                                <ion-select-option value=\"4\">Fine with children over age 10</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"petForm.get('children_stay').hasError('required') && petForm.get('children_stay').touched\">\n                            <p> select your pet is fine to stay with children!</p>\n                        </ion-text>\n                        <ion-item>\n                            <ion-label>Loves men?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"love_men\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.love_men\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.love_men\">No</span> </div>\n                        </ion-item>\n                        <ion-item>\n                            <ion-label>Loves women?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"love_women\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.love_women\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.love_women\">No</span> </div>\n                        </ion-item>\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">When you're home where does your pet spend most of his/her\n                                time?\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            <ion-select placeholder=\"select\" formControlName=\"petspend_home\">\n                                <ion-select-option value=\"I\">Inside</ion-select-option>\n                                <ion-select-option value=\"O\">Outside</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"petForm.get('petspend_home').hasError('required') && petForm.get('petspend_home').touched\">\n                            <p> select your pet spend time!</p>\n                        </ion-text>\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">When you're out where does your pet spend most of his/her\n                                time?\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            <ion-select placeholder=\"select\" formControlName=\"petspend_out\">\n                                <ion-select-option value=\"I\">Inside</ion-select-option>\n                                <ion-select-option value=\"O\">Outside</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"petForm.get('petspend_out').hasError('required') && petForm.get('petspend_out').touched\">\n                            <p> select your pet spend time!</p>\n                        </ion-text>\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">Where does your pet sleep at night?</ion-label>\n\n\n                            <ion-select color=\"theme\" placeholder=\"Pet Sleeping Location\"\n                                formControlName=\"petsleep_night\" interface=\"action-sheet\">\n                                <ion-select-option class=\"fs-14\" *ngFor=\"let petSleep of petSleepLocation\"\n                                    [value]=\"petSleep.value\">{{petSleep?.label}}\n                                </ion-select-option>\n                            </ion-select>\n\n                        </ion-item>\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">How long is your pet used to being left alone?</ion-label>\n                            <ion-select placeholder=\"select\" formControlName=\"petalone_hour\">\n                                <ion-select-option value=\"1\">1 to 4 hours</ion-select-option>\n                                <ion-select-option value=\"2\">4 to 8 hours</ion-select-option>\n                                <ion-select-option value=\"3\">8 to 12 hours</ion-select-option>\n                                <ion-select-option value=\"4\">Daily</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">How does your dog react during thunderstorms or fireworks?\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            <ion-select placeholder=\"select\" formControlName=\"pet_react\">\n                                <ion-select-option value=\"4\">No Problem at all</ion-select-option>\n                                <ion-select-option value=\"1\">Unsettled but Ok</ion-select-option>\n                                <ion-select-option value=\"2\">Terrified</ion-select-option>\n                                <ion-select-option value=\"3\">May try to escape</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"petForm.get('pet_react').hasError('required') && petForm.get('pet_react').touched\">\n                            <p> select your pet reaction!</p>\n                        </ion-text>\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">How often is your pet usually walked?\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            <ion-select placeholder=\"select\" formControlName=\"pet_walk\">\n                                <ion-select-option value=\"5\">Daily</ion-select-option>\n                                <ion-select-option value=\"1\">A couple of times a week</ion-select-option>\n                                <ion-select-option value=\"2\">Once a week</ion-select-option>\n                                <ion-select-option value=\"3\">Occasionally</ion-select-option>\n                                <ion-select-option value=\"4\">Never</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"petForm.get('pet_walk').hasError('required') && petForm.get('pet_walk').touched\">\n                            <p> select your pet walk!</p>\n                        </ion-text>\n\n                        <ion-item lines=\"none\">\n                            <ion-text style=\"font-weight: 700;\">Training</ion-text>\n                        </ion-item>\n\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">How does your pet behave when walked?\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            <ion-select placeholder=\"select\" formControlName=\"pet_behave\">\n                                <ion-select-option value=\"1\">Pulls at first and then settles down</ion-select-option>\n                                <ion-select-option value=\"2\">Needs a strong person to walk him/her</ion-select-option>\n                                <ion-select-option value=\"3\">Impossible to walk</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"petForm.get('pet_behave').hasError('required') && petForm.get('pet_behave').touched\">\n                            <p> select your pet behave!</p>\n                        </ion-text>\n\n\n                        <ion-item>\n                            <ion-label class=\"ion-text-wrap\">Have they attended a behavioural training school?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"attend_training\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.attend_training\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.attend_training\">No</span> </div>\n                        </ion-item>\n\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">Are they toilet trained?</ion-label>\n                            <ion-select placeholder=\"Are they toilet trained?\" formControlName=\"toilet_trained\"\n                                interface=\"action-sheet\" multiple=\"false\">\n                                <ion-select-option value=\"0\">No</ion-select-option>\n                                <ion-select-option value=\"1\">Yes</ion-select-option>\n                                <ion-select-option value=\"2\">Mostly, with the Occasional Accident</ion-select-option>\n\n                            </ion-select>\n\n                        </ion-item>\n\n\n                        <ion-item>\n                            <ion-label position=\"stacked\" class=\"ion-text-wrap\">What do they use for toileting?</ion-label>\n                            <ion-select formControlName=\"use_for_toilet\" okText=\"Okay\" cancelText=\"Dismiss\">\n                                <ion-select-option value=\"Potty Grass\">Potty Grass</ion-select-option>\n                                <ion-select-option value=\"Puppy Pads\">Puppy Pads</ion-select-option>\n                                <ion-select-option value=\"Litter Box\">Litter Box</ion-select-option>\n                                <ion-select-option value=\"Box/Outdoor\">Outdoor Grass</ion-select-option>\n                            </ion-select>\n                        </ion-item>\n\n                        <ion-item lines=\"none\">\n                            <ion-text style=\"font-weight: 700;\">Social Interaction</ion-text>\n                        </ion-item>\n\n                        <div>\n                            <ion-label>If the Minder owns other pets, do they get along with:</ion-label>\n                        </div>\n\n\n\n                        <ion-item>\n                            <ion-label>Other Cats?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"minder_cat\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.minder_cat\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.minder_cat\">No</span>\n                            </div>\n                        </ion-item>\n\n                        <ion-item>\n\n                            <ion-label>Other Dog?</ion-label>\n                            <ion-toggle color=\"theme-sec\" formControlName=\"minder_dog\"></ion-toggle>\n                            <div> <span class=\"theme-text\" *ngIf=\"petForm.value.minder_dog\">Yes</span> <span\n                                    class=\"theme-text-no\" *ngIf=\"!petForm.value.minder_dog\">No</span>\n                            </div>\n                        </ion-item>\n\n\n                        <ion-item>\n                            <ion-label position=\"stacked\">Additional Care Instructions</ion-label>\n                            <ion-textarea rows=\"4\" cols=\"5\" formControlName=\"additional_care\"\n                                placeholder=\"Eg. Is fussy with certain foods\"></ion-textarea>\n                        </ion-item>\n                        <ion-text slot=\"end\" align-items-end>\n                            <small><i>{{500 - petForm.get('additional_care').value?.length}} char left</i></small>\n                        </ion-text>\n                    </ion-list>\n                    <!-- 4. Routine & Habits section end -->\n                    <!-- 5. Health section start -->\n                    <ion-list *ngSwitchCase=\"'health'\" class=\"custom-list health-form\">\n\n\n                        <!-- Vaccination Alert -->\n                        <ion-card>\n                            <ion-card-header (click)=\"openActiveBlock('vaccinationalert')\">\n                                <ion-text> Reminders </ion-text>\n                                <ion-icon [name]=\"activeCard?.indexOf('vaccinationalert') >= 0 ? 'chevron-up' : 'chevron-down'\"></ion-icon>\n                            </ion-card-header>\n\n                            <ion-card-content *ngIf=\"activeCard?.indexOf('vaccinationalert') >= 0\">\n                                <ion-list *ngIf=\"healthAlerts.length\" class=\"details\">\n                                    <ion-grid>\n                                        <ion-row>\n                                            <ion-col size=\"9\">\n                                                <a> Reminder </a>\n                                            </ion-col>\n\n                                            <ion-col size=\"3\" style=\"white-space: nowrap;\">\n                                                <a> Frequency </a>\n                                            </ion-col>\n                                        </ion-row>\n\n                                        <ion-row *ngFor=\"let record of healthAlerts\">\n\n                                            <ion-item-sliding>\n                                                <ion-item>\n                                                    <ion-label>\n                                                        <ion-row>\n                                                            <ion-col  size=\"9\">\n                                                                <ion-text style=\"white-space: pre-wrap\">\n                                                                    <p>{{getReminderType(record?.alertType)}}</p>\n                                                                    <p class=\"time\">\n                                                                        {{record?.alertDate | date : \"dd-MM-y\"}} {{record?.startTime}}\n                                                                    </p>\n                                                                </ion-text>\n                                                            </ion-col>\n\n                                                            <ion-col class=\"ion-text-center\" size=\"3\">\n                                                                <ion-text> \n                                                                    {{reminderFrequency(record?.alertFrequency)}}\n                                                                 </ion-text>\n                                                            </ion-col>\n                                                        </ion-row>\n                                                    </ion-label>\n                                                </ion-item>\n                                                <ion-item-options>\n\n\n                                                    <ion-item-option (click)=\"deleteVaccine(record.id)\" color=\"danger\">\n                                                        <ion-icon slot=\"start\" name=\"trash\"></ion-icon>\n                                                        Delete\n                                                    </ion-item-option>\n                                                </ion-item-options>\n                                            </ion-item-sliding>\n\n                                        </ion-row>\n\n                                    </ion-grid>\n\n                                </ion-list>\n\n\n                                <ng-container>\n                                    <ion-text color=\"theme\">If you would like to create a alert to be reminded of\n                                        vaccination dates, click the button below.</ion-text>\n\n                                        <ion-button (click)=\"addVacination()\" color=\"submit-btn\">Add a Reminder\n                                        </ion-button>\n                                </ng-container>\n                            </ion-card-content>\n                        </ion-card>\n\n                        <!-- Insurance Cover -->\n                        <ion-card>\n                            <ion-card-header (click)=\"openActiveBlock('insurancecover')\">\n                                <ion-text> Insurance Cover</ion-text>\n                                <ion-icon [name]=\"activeCard?.indexOf('insurancecover') >= 0 ? 'chevron-up' : 'chevron-down'\" ></ion-icon>\n                            </ion-card-header>\n\n                            <ion-card-content *ngIf=\"activeCard?.indexOf('insurancecover') >= 0\">\n                                <ion-item>\n                                    <ion-label position=\"stacked\"> Insurer Name\n                                    </ion-label>\n                                    <ion-input type=\"text\" formControlName=\"insurance_cover_insurance_name\"\n                                        placeholder=\"Insurer Name\"></ion-input>\n                                </ion-item>\n\n                                <ion-item>\n                                    <ion-label position=\"stacked\"> Cover Amount\n                                    </ion-label>\n                                    <ion-input type=\"text\" formControlName=\"insurance_cover_insurance_amount\"\n                                        placeholder=\"$100\"></ion-input>\n                                </ion-item>\n\n                                <div class=\"download-card\" (click)=\"viewImageModel(vaccinationRecordImage)\" *ngIf=\"vaccinationRecordImage != '' \">\n                                    <div class=\"icon\">\n                                        <ion-icon name=\"document\"></ion-icon>\n                                    </div>\n                                    <div class=\"label\">\n                                        Insurance Record.jpg\n                                    </div>\n                                </div>\n                                <ion-button (click)=\"showActionSheet('insurancepolicy')\" color=\"theme-sec\">Upload Record</ion-button>\n                            </ion-card-content>\n                        </ion-card>\n\n                        <!-- Vaccination Certificate -->\n                        <ion-card>\n                            <ion-card-header (click)=\"openActiveBlock('vaccinationcertificate')\">\n                                <ion-text>Vaccination Certificate</ion-text>\n                                <ion-icon [name]=\"activeCard?.indexOf('vaccinationcertificate') >= 0 ? 'chevron-up' : 'chevron-down'\"></ion-icon>\n                            </ion-card-header>\n\n                            <ion-card-content *ngIf=\"activeCard?.indexOf('vaccinationcertificate') >= 0\">\n                \n                                \n                                <div class=\"download-card\" (click)=\"viewImageModel(fileURLVaccine)\" *ngIf=\"fileURLVaccine != ''\">\n                                    <div class=\"icon\">\n                                        <ion-icon name=\"document\"></ion-icon>\n                                    </div>\n                                    <div class=\"label\">\n                                        Vaccination Record.jpg\n                                    </div>\n                                </div>\n                                \n                                <ion-button (click)=\"showActionSheet('vaccinerecord')\"  color=\"theme-sec\">Upload Vaccination Record</ion-button>\n\n                            </ion-card-content>\n                        </ion-card>\n\n                        <!-- Core Vaccination Complete -->\n                        <ion-card>\n                            <ion-card-header (click)=\"openActiveBlock('corevaccinationscomplete')\">\n                                <ion-text>Core Vaccinations Complete</ion-text>\n                                <ion-icon [name]=\"activeCard?.indexOf('corevaccinationscomplete') >= 0 ? 'chevron-up' : 'chevron-down'\"></ion-icon>\n                            </ion-card-header>\n\n                            <ion-card-content *ngIf=\"activeCard?.indexOf('corevaccinationscomplete') >= 0\">\n                                <ion-text>\n                                    Core vaccines are vaccines for three life-threatening diseases that are extremely\n                                    dangerous to your pup:\n                                    canine distemper virus, canine parvovirus and canine adenovirus (or canine\n                                    hepatitis).\n                                    Your vet will give these vaccines in a single combination called the C3 vaccination\n                                    and your pup will need 2 or 3 rounds of the C3 between 6 and 16 weeks of age.\n                                    The C3 is necessary for all dogs no matter how they are raised or where they live in\n                                    the world.\n                                </ion-text>\n\n                                <ion-text>Core Vaccination Schedule</ion-text>\n\n                                <div class=\"repeat-list-item\" *ngFor=\"let coreVacc of coreVaccination; let i = index\">\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Type\n                                        </ion-label>\n                                        <ion-input readonly>{{coreVacc?.vaccinationName}}</ion-input>\n                                    </ion-item>\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Stage in time\n                                        </ion-label>\n                                        <ion-input readonly>{{coreVacc?.stage}}</ion-input>\n                                    </ion-item>\n\n    \n\n                                    <ion-item>\n                                        <ion-label >Due or Complete?</ion-label> \n\n                                        <ion-datetime *ngIf=\"coreVacc?.dueOrComplete == null\" min=\"2021\" max=\"2035\"\n                                            formControlName=\"vaccinationsbl_date{{i + 1}}\"\n                                            [disabled]=\"coreVacc.disabled\"\n                                            display-format=\"DD/MM/YYYY\"\n                                            picker-format=\"DD/MM/YYYY\" placeholder=\"01/02/2021\"></ion-datetime>\n                                    </ion-item>\n\n                                     \n                                    <div>\n                                        <ion-item *ngIf=\"coreVacc.disabled\" >\n                                          <ion-label>Completed</ion-label> \n                                        </ion-item>\n\n                    \n                                        <ion-button (click)=\"addVacination()\"  *ngIf=\"!coreVacc.disabled\"\n                                            color=\"theme-sec\">Set Reminder</ion-button> \n                                    </div>\n\n                                </div>\n                                <ion-card-content>\n                                    <ng-container>\n                                        <ion-col size=\"6\">\n                                            <ion-text>Core Vaccination Schedule</ion-text>\n                                        </ion-col>\n                                        <ion-col (click)=\"vaccinationExplaination()\" size=\"6\">Vaccinations Explanation\n                                        </ion-col>\n                                    </ng-container>\n\n                                    <ng-container>\n                                        <ion-item>\n                                            <div><ion-label > Type</ion-label></div> \n                                            <div> <ion-label>Parainfluenza virus (PI)</ion-label></div>\n                                           \n                                        </ion-item>\n\n                                        <ion-item>\n                                            <ion-label position=\"stacked\">Date</ion-label>\n                                            <ion-datetime min=\"2021\" max=\"2035\"\n                                                formControlName=\"non_core_vaccinationsbl_date1\"\n                                                display-format=\"DD/MM/YYYY\" picker-format=\"DD/MM/YYYY\"\n                                                placeholder=\"01/02/2021\"></ion-datetime>\n\n                                            <!-- <ion-label *ngIf=\"coreVacc?.dueOrComplete != null\" position=\"stacked\">\n                                            </ion-label> -->\n                                        </ion-item>\n\n                                        <ion-button (click)=\"addVacination()\" \n                                        color=\"theme-sec\">Set Reminder</ion-button> \n\n                                    </ng-container>\n                                </ion-card-content>\n\n                            </ion-card-content>\n                        </ion-card>\n\n                        <!-- Parasite control -->\n                        <ion-card>\n                            <ion-card-header (click)=\"openActiveBlock('parasitecontrol')\">\n                                <ion-text>Parasite Control Up to Date:</ion-text>\n                                <ion-icon [name]=\"activeCard?.indexOf('parasitecontrol') >= 0 ? 'chevron-up' : 'chevron-down'\"></ion-icon>\n                            </ion-card-header>\n\n                            <ion-card-content *ngIf=\"activeCard?.indexOf('parasitecontrol') >= 0\">\n                                <ion-text>\n                                    Responsible pet parasite control can reduce the risks associated with transmission\n                                    of parasitic diseases from pets to people.\n                                    By following a few simple guidelines,pet owners can better protect their pets and\n                                    prevent diseases and parasites being spread to their family.\n                                </ion-text>\n\n                                <ng-container formArrayName=\"parasite_control\">\n\n                                    <ng-container\n                                        *ngFor=\"let itemrow of petForm.controls.parasite_control['controls']; let i=index\"\n                                        [formGroupName]=\"i\">\n\n                                        <div  class=\"repeat-list-item\" >\n\n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Type\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"type\" placeholder=\"Type\"></ion-input>\n                                            </ion-item>\n    \n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Application\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"application\" placeholder=\"Application\"></ion-input>\n                                            </ion-item>\n    \n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Brand\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"brand\" placeholder=\"Brand\"></ion-input>\n                                            </ion-item>\n    \n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Product\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"product\" placeholder=\"Product\"></ion-input>\n                                            </ion-item>\n    \n    \n                                            <ion-item>\n                                                <ion-label position=\"stacked\"> Frequency</ion-label>\n                                                <ion-select color=\"theme\" formControlName=\"frequency\" placeholder=\"Weekly\" interface=\"action-sheet\">\n                                                    <ion-select-option class=\"fs-14\" *ngFor=\"let freq of feaFrequency\"\n                                                        [value]=\"freq.value\">{{freq?.label}}\n                                                    </ion-select-option>\n                                                </ion-select>\n                                            </ion-item>\n                                        </div>\n\n                                    \n                                    </ng-container>\n\n                                </ng-container>\n\n\n                                <div>\n                                    <ion-button (click)=\"addParasiteControl()\" color=\"theme-sec\">Add New\n                                    </ion-button>\n                                </div>\n\n                            </ion-card-content>\n                        </ion-card>\n\n                        <!-- Other Medications -->\n                        <ion-card>\n                            <ion-card-header (click)=\"openActiveBlock('other-medications')\">\n                                <ion-text>Other Medication</ion-text>\n                                <ion-icon [name]=\"activeCard?.indexOf('other-medications') >= 0 ? 'chevron-up' : 'chevron-down'\"></ion-icon>\n                            </ion-card-header>\n\n                            <ion-card-content *ngIf=\"activeCard?.indexOf('other-medications') >= 0\">\n\n                                <ng-container formArrayName=\"other_medications\">\n\n                                    <ng-container\n                                        *ngFor=\"let itemrow of petForm.controls.other_medications['controls']; let i=index\"\n                                        [formGroupName]=\"i\">\n\n                                        <div class=\"repeat-list-item\" >\n\n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Type\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"type\" placeholder=\"Type\"></ion-input>\n                                            </ion-item>\n            \n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Application\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"application\" placeholder=\"Application\"></ion-input>\n                                            </ion-item>\n            \n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Brand\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"brand\" placeholder=\"Brand\"></ion-input>\n                                            </ion-item>\n            \n                                            <ion-item>\n                                                <ion-label position=\"stacked\">Product\n                                                </ion-label>\n                                                <ion-input type=\"text\" formControlName=\"product\" placeholder=\"Product\"></ion-input>\n                                            </ion-item>\n            \n            \n                                            <ion-item>\n                                                <ion-label position=\"stacked\"> Frequency</ion-label>\n                                                <ion-select color=\"theme\" formControlName=\"frequency\" placeholder=\"Weekly\" interface=\"action-sheet\">\n                                                    <ion-select-option class=\"fs-14\" *ngFor=\"let freq of feaFrequency\"\n                                                        [value]=\"freq.value\">{{freq?.label}}\n                                                    </ion-select-option>\n                                                </ion-select>\n                                            </ion-item>\n                                        </div>\n\n                             \n\n                                </ng-container>\n                            </ng-container>\n\n\n                                <div>\n                                    <ion-button (click)=\"addOtherMedicine()\" color=\"theme-sec\">Add New\n                                    </ion-button>\n                                </div>\n\n                            </ion-card-content>\n                        </ion-card>\n\n\n                        <!-- Emergency Contact -->\n                        <ion-card>\n                            <ion-card-header lines=\"none\" (click)=\"openActiveBlock('emeregency-contact')\">\n                                <ion-text>Emergency Contacts + Authorisation</ion-text>\n                                <ion-icon [name]=\"activeCard?.indexOf('emeregency-contact') >= 0 ? 'chevron-up' : 'chevron-down'\"></ion-icon>\n                            </ion-card-header>\n\n                            <ion-card-content *ngIf=\"activeCard?.indexOf('emeregency-contact') >= 0\">\n\n                                <div class=\"repeat-list-item\">\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Emergency Holiday Contact\n                                        </ion-label>\n                                    </ion-item>\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Name\n                                        </ion-label>\n                                        <ion-input type=\"text\" formControlName=\"emergency_contactsbl_contact_name\"\n                                            placeholder=\"Name\"></ion-input>\n                                    </ion-item>\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Number\n                                        </ion-label>\n                                        <ion-input type=\"text\" formControlName=\"emergency_contactsbl_contact_number\"\n                                            placeholder=\"+61  77010 1111\"></ion-input>\n                                    </ion-item>\n\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Email\n                                        </ion-label>\n                                        <ion-input type=\"text\" formControlName=\"emergency_contactsbl_contact_email\"\n                                            placeholder=\"Email\"></ion-input>\n                                    </ion-item>\n\n\n                                </div>\n\n                                <div class=\"repeat-list-item\">\n                                    <ion-item *ngIf=\"petForm.get('on_medication').value == true\">\n                                        <ion-label position=\"stacked\">Medication Instructions</ion-label>\n                                        <ion-textarea rows=\"3\" formControlName=\"medication_instructions\"\n                                            placeholder=\"Any instructions for your pet's medication?\" maxlength=\"500\">\n                                        </ion-textarea>\n                                    </ion-item>\n\n                                    <ion-text slot=\"end\" align-items-end\n                                        *ngIf=\"petForm.get('on_medication').value == true\">\n                                        <small><i>{{500 - petForm.get('medication_instructions').value?.length}} char\n                                                left</i>\n                                        </small>\n                                    </ion-text>\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Emergency Vet Name\n                                        </ion-label>\n                                        <ion-input type=\"text\" placeholder=\"Vet Name\"\n                                            formControlName=\"emergency_contactsbl_vet_name\"></ion-input>\n                                    </ion-item>\n\n                                    <ion-item>\n                                        <ion-label position=\"stacked\">Number\n                                        </ion-label>\n                                        <ion-input type=\"text\" placeholder=\"Contact Number\"\n                                        formControlName=\"emergency_contacts\"></ion-input>\n                                    </ion-item>\n\n\n                                    <ion-item>\n                                        <ion-label class=\"ion-text-wrap\" position=\"stacked\">Authorised Spend Limit\n                                        </ion-label>\n                                        <ion-input type=\"text\" formControlName=\"emergency_charge\"></ion-input>\n                                    </ion-item>\n\n                                    <ion-item>\n                                        <ion-label class=\"ion-text-wrap\" position=\"stacked\">Email </ion-label>\n                                        <ion-input type=\"text\" formControlName=\"emergency_contactsbl_vet_email\"\n                                            placeholder=\"Email\"></ion-input>\n                                    </ion-item>\n                                </div>\n                            </ion-card-content>\n                        </ion-card>\n\n                        <div class=\"decleration\">\n                            <h3 class=\"text-theme\">Declaration</h3>\n                            <div class=\"decleation-text\">\n                                <ol>\n                                    <li>In the event of emergency, I agree for my pet to be taken to the Vet and to have the\n                                        above amount spent. \n                                    </li>\n                                    <li>\n                                        I give my permission to my booked Pet Sitter to take my pet/s to the above-mentioned\n                                        veterinarian (or to the closest open facility if the primary vet is not available). \n                                    </li>\n                                    <li>\n                                        I give permission for the veterinarian to administer any care or medications\n                                        necessary during an emergency. \n                                    </li>\n                                    <li>\n                                        I will assume full responsibility for the payment for any and all veterinary services\n                                        provided. \n                                    </li>\n                                    <li>\n                                        My booked Pet Sitter is authorised to transport my pet(s) to and from a veterinary\n                                        clinic for treatment or to request \"on-site\" treatment if deemed necessary. \n                                    </li>\n                                    <li>\n                                        If I cannot be reached in case of an emergency, the Sitter shall act on my behalf to\n                                        authorise any treatment - excluding euthanasia.\n                                    </li>\n                                </ol>\n                            </div>\n\n                            <ion-item class=\"agree-term\" lines=\"none\">\n                                <ion-checkbox formControlName=\"agree\" slot=\"start\"></ion-checkbox>\n                                <span class=\"fs-14\">I agree</span>\n                            </ion-item>\n\n                        </div>\n            \n                    </ion-list>\n                    <!-- 4. Health section end -->\n                </ion-col>\n            </ion-row>\n        </ion-grid>\n    </form>\n</ion-content>\n<ion-footer>\n    <ion-button class=\"text-capitalize fls-0 fs-18 footer-btn\"\n        expand=\"full\"\n        color=\"theme\"\n        [disabled]=\"!petForm.valid\"\n        (click)=\"updatePetProfile()\"\n    >\n        Save\n    </ion-button>\n</ion-footer>");

/***/ }),

/***/ 27857:
/*!************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/vaccination-explaination/vaccination-explaination.component.html ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header class=\"ion-no-border\" no-shadow>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"closeModal()\">\n        <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Vaccination Explaination</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <div style=\"padding: 10px;text-align: start;\">\n    <span class=\"fs-16 text-theme\" >Parainfluenza virus (PI).</span> \n    <p class=\"title\"> This very contagious but non-life-threatening virus is one of the causes of “kennel cough”. It infects the respiratory system and can be especially devastating to dogs with weak immune systems like puppies and older dogs. It is usually given to dogs who are frequently exposed to other dogs like those being boarded or in a dog show.</p>\n\n   <span class=\"fs-16 text-theme\" > Bordetella bronchiseptica (Bb).</span> \n   <p class=\"title\">This is another cause of kennel cough, although this time a bacteria is to blame. Like PI, this is a non-life-threatening respiratory illness that is commonly found in dogs who are frequently exposed to other dogs.</p> \n   <span class=\"fs-16 text-theme\" >Leptospira interrogans (LI). </span>\n   <p class=\"title\">This is a bacteria that is spread through the urine of wild animals (like rodents) and through water that carries the urine. Therefore it is more common in areas with lots of wildlife, high rainfall or both. In many cases the infection is mild, but in severe cases, it can lead to meningitis and death. <br> \n    If your vet thinks your pup needs these non-core vaccines, they’ll give them to your pup at the same time as the C3.</p>\n  </div>\n\n\n\n</ion-content>");

/***/ })

}]);
//# sourceMappingURL=src_app_pet-update_pet-update_module_ts-es2015.js.map