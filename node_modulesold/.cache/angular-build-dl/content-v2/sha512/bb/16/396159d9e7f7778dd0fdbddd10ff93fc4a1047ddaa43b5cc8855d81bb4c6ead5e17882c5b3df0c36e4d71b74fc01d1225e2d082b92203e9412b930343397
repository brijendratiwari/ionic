{"version":3,"sources":["webpack:///src/app/reminders-list/reminders-list.module.ts","webpack:///src/app/reminders-list/reminders-list.page.ts","webpack:///src/app/reminders-list/reminders-list.page.scss","webpack:///src/app/reminders-list/reminders-list.page.html"],"names":["routes","path","component","RemindersListPage","RemindersListPageModule","NgModule","imports","CommonModule","FormsModule","IonicModule","RouterModule","declarations","api","remindersList","isAPILoaded","pageNo","isPaignation","reminders","getRemindersList","notificationCode","statusName","reminderType","PetcloudApiService","reminderFreq","fetch","then","res","json","data","reminderTypes","infiniteScroll","showLoader","getReminderListAlert","pipe","finalize","hideLoader","subscribe","pages","success","length","target","complete","forEach","push","err","autoLogout","event","Component","selector","template"],"mappings":"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","file":"src_app_reminders-list_reminders-list_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RemindersListPage } from './reminders-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RemindersListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RemindersListPage]\n})\nexport class RemindersListPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { PetcloudApiService } from '../api/petcloud-api.service';\n\n@Component({\n  selector: 'app-reminders-list',\n  templateUrl: './reminders-list.page.html',\n  styleUrls: ['./reminders-list.page.scss'],\n})\nexport class RemindersListPage implements OnInit {\n\n  remindersList: any = [];\n  reminderTypes: any;\n  isAPILoaded: boolean = false;\n  public pageNo = 1;\n  isPaignation: boolean = false;\n  constructor(public api: PetcloudApiService,) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.isAPILoaded = false;\n    this.remindersList = [];\n    this.reminders();\n    this.getRemindersList(\"\");\n  }\n\n  public notificationReminder(notificationCode: any) {\n    let statusName = \"\";\n\n    switch (notificationCode) {\n      case \"0\": {\n        statusName = \"Send before a hour\";\n        break;\n      }\n      case \"1\": {\n        statusName = \"Send at a time\";\n        break;\n      }\n      case \"2\": {\n        statusName = \"Send one day before\";\n        break;\n      }\n    }\n    return statusName;\n\n  }\n\n \n\n  public getReminderType(reminderType: any): any {\n    return PetcloudApiService.remindersType(reminderType);\n  }\n  \n  public reminderFrequency(reminderFreq: any) : any {\n    return PetcloudApiService.reminderFrequency(reminderFreq);\n  }\n\n\n  public reminders() {\n    fetch('assets/JSON/reminders.json')\n      .then(res => res.json())\n      .then((data) => {\n        this.reminderTypes = data;\n      });\n  }\n\n  getRemindersList(infiniteScroll) {\n\n    if (this.pageNo == 1) {\n      this.api.showLoader();\n    }\n    this.api.getReminderListAlert(this.pageNo).pipe(finalize(() => {\n      if (this.pageNo == 1) {\n        this.api.hideLoader();\n      }\n    })).subscribe((res: any) => {\n      this.isAPILoaded = true;\n\n      res.pages > this.pageNo ? this.isPaignation = true : this.isPaignation = false;\n\n      if (res.success) {\n        if (res.data.length) {\n          if (infiniteScroll) {\n            infiniteScroll.target.complete();\n          }\n\n          if (res.data.length) {\n\n            res.data.forEach((async (data: any) => {\n              this.remindersList.push(data)\n            }))\n\n          }\n        } else {\n          if (infiniteScroll) {\n            infiniteScroll.target.complete();\n          }\n        }\n\n      } else {\n        if (infiniteScroll) {\n          infiniteScroll.target.complete();\n        }\n      }\n    }, err => {\n      this.api.autoLogout(err, \"\");\n    })\n  }\n\n  loadData(event) {\n    this.pageNo = this.pageNo + 1;\n    this.getRemindersList(event);\n  }\n\n}\n","export default \"ion-button.add-reminders {\\n  margin: 0;\\n}\\n\\n.reminder-items {\\n  box-shadow: 0px 0px 2px 2px #eaedf5;\\n  border-radius: 6px;\\n  margin: 16px;\\n}\\n\\n.reminder-items ion-avatar {\\n  width: 60px;\\n  height: 60px;\\n}\\n\\n.reminder-items h2 {\\n  white-space: normal;\\n  font-size: 14px;\\n  font-weight: 500;\\n  line-height: 130%;\\n}\\n\\n.reminder-items p {\\n  font-size: 13px;\\n  white-space: normal;\\n  line-height: 130%;\\n}\\n\\n.reminder-items .rm-date {\\n  font-weight: 600;\\n}\\n\\n.reminder-list {\\n  margin: 0px;\\n  padding: 0px;\\n  padding-bottom: calc(env(safe-area-inset-bottom) + 75px);\\n}\\n\\nion-fab {\\n  padding-bottom: calc(env(safe-area-inset-bottom) + 10px);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbWluZGVycy1saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFNBQUE7QUFDSjs7QUFFQTtFQUNJLG1DQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBQUk7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQUVSOztBQUFJO0VBQ0ksbUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQUVSOztBQUFJO0VBQ0ksZUFBQTtFQUNBLG1CQUFBO0VBQ0EsaUJBQUE7QUFFUjs7QUFBSTtFQUNJLGdCQUFBO0FBRVI7O0FBQ0E7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHdEQUFBO0FBRUo7O0FBQ0E7RUFDSSx3REFBQTtBQUVKIiwiZmlsZSI6InJlbWluZGVycy1saXN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1idXR0b24uYWRkLXJlbWluZGVycyB7XG4gICAgbWFyZ2luOiAwO1xufVxuXG4ucmVtaW5kZXItaXRlbXMge1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMnB4IDJweCAjZWFlZGY1O1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBtYXJnaW46IDE2cHg7XG4gICAgaW9uLWF2YXRhciB7XG4gICAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgfVxuICAgIGgyIHtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICBsaW5lLWhlaWdodDogMTMwJTtcbiAgICB9XG4gICAgcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEzMCU7XG4gICAgfVxuICAgIC5ybS1kYXRlIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICB9XG59XG4ucmVtaW5kZXItbGlzdCB7XG4gICAgbWFyZ2luOiAwcHg7XG4gICAgcGFkZGluZzogMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiBjYWxjKGVudihzYWZlLWFyZWEtaW5zZXQtYm90dG9tKSArIDc1cHgpO1xufVxuXG5pb24tZmFiIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogY2FsYyhlbnYoc2FmZS1hcmVhLWluc2V0LWJvdHRvbSkgKyAxMHB4KTtcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"//home/tabs/sitter-listing-page\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Reminders</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ng-container *ngIf=\\\"isAPILoaded && remindersList.length == 0\\\">\\n    <ion-card color=\\\"theme-sec\\\">\\n      <ion-card-content>\\n        You don’t have any reminders.\\n      </ion-card-content>\\n    </ion-card>\\n  </ng-container>\\n  \\n  <ng-container *ngIf=\\\"isAPILoaded && remindersList.length > 0\\\">\\n\\n    <ion-list class=\\\"reminder-list\\\">\\n      <!-- <ion-item-sliding> -->\\n      <ion-item *ngFor=\\\"let reminder of remindersList\\\" class=\\\"reminder-items\\\" lines=\\\"none\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <img [src]=\\\"reminder.imageurl\\\">\\n        </ion-avatar>\\n        <ion-label >\\n        <h2>Reminder for :  {{getReminderType(reminder?.alertType)}}</h2> \\n          <p><b>Reminder Frequency :</b>  {{reminderFrequency(reminder?.alertFrequency)}}</p> \\n          <p>{{reminder?.Notes}}</p>\\n          <p class=\\\"rm-date\\\">{{reminder?.alertDate | date :  'dd-MMM-y'}} at {{reminder?.startTime}}</p>\\n        </ion-label>\\n        <!-- <ion-note>\\n          {{reminder?.alertDate | date :  'dd-MMM-y'}} at {{reminder?.startTime}}\\n        </ion-note> -->\\n      </ion-item>\\n\\n    </ion-list>\\n\\n    <ion-infinite-scroll threshold=\\\"100px\\\" *ngIf=\\\"isPaignation\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n      <ion-infinite-scroll-content\\n        loadingSpinner=\\\"bubbles\\\"\\n        loadingText=\\\"Loading more data...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n\\n  </ng-container>\\n\\n\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button routerLink=\\\"/add-reminders\\\" color=\\\"white\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab> \\n\\n</ion-content>\";"]}