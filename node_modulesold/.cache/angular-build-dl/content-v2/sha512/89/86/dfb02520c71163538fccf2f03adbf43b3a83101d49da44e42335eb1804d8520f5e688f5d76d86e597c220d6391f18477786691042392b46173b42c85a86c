{"version":3,"sources":["webpack:///src/app/job-applications/job-applications.module.ts","webpack:///src/app/job-applications/job-applications.page.ts","webpack:///src/app/job-applications/job-applications.page.scss","webpack:///src/app/job-applications/job-applications.page.html"],"names":["routes","path","component","JobApplicationsPage","JobApplicationsPageModule","NgModule","imports","CommonModule","FormsModule","IonicModule","RouterModule","declarations","entryComponents","api","storage","navCntl","jobApplications","currentApplications","expiredApplications","pagination","page","limit","activeCard","getJobApplications","selectedSegment","hideLoader","pageNo","showLoader","pipe","finalize","subscribe","res","target","complete","applications","length","forEach","element","startDate","format","endDate","createdate","push","data","console","log","err","autoLogout","activeBlock","indx","indexOf","splice","jobId","id","showAlert","text","role","cssClass","handler","blah","warn","jobWithdraw","success","showToast","ionViewDidEnter","event","PetcloudApiService","Storage","NavController","Component","selector","template"],"mappings":"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","file":"src_app_job-applications_job-applications_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { JobApplicationsPage } from './job-applications.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobApplicationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [JobApplicationsPage],\n  entryComponents:[JobApplicationsPage],\n})\nexport class JobApplicationsPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {PetcloudApiService} from '../api/petcloud-api.service';\nimport {finalize} from 'rxjs/operators';\nimport {Storage} from '@ionic/storage'\nimport { NavController } from '@ionic/angular';\nimport * as moment from 'moment';\n\n@Component({\n    selector: 'app-job-applications',\n    templateUrl: './job-applications.page.html',\n    styleUrls: ['./job-applications.page.scss'],\n})\n\nexport class JobApplicationsPage implements OnInit {\n    public selectedSegment: any;\n    public jobApplications = {\n        currentApplications: [],\n        expiredApplications: []\n    };\n    public pagination = {\n        page: 1,\n        limit: 10\n    }\n    public activeCard = [];\n\n    constructor(public api: PetcloudApiService,\n        public storage: Storage,public navCntl:NavController) {\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewDidEnter() {\n        this.getJobApplications('1', \"\");\n\n        this.selectedSegment = 'current';\n    }\n\n    ionViewWillLeave(){\n        this.pagination.limit = 10;\n        this.pagination.page = 1\n        this.api.hideLoader();\n    }\n    \n    ionViewDidLeave(){\n        this.pagination.limit = 10;\n        this.pagination.page = 1\n        // this.api.hideLoader();\n    }\n\n    public getJobApplications(pageNo, pagination) {\n        \n        if(pageNo == 1){\n            this.api.showLoader();\n        }\n        this.api.jobApplications(this.pagination)\n            .pipe(finalize(() => {\n                // if(pageNo == 1){\n                //     this.api.hideLoader();\n                // }\n            }))\n            .subscribe((res: any) => {\n                \n                if(pagination){\n                    pagination.target.complete();\n                }\n\n                if (res.applications.length) {\n\n                    res.applications.forEach(async element => {\n\n                        element.startDate =  await moment(element.startDate).format(\"DD MMM YYYY\"); \n                        element.endDate =  await moment(element.endDate).format(\"DD MMM YYYY\"); \n                        element.createdate =  await moment(element.createdate).format(\"DD MMM YYYY\"); \n                        \n                        this.jobApplications.currentApplications.push(element)\n                    });\n                }\n                if(res.expiredApplications.data.length){\n                    res.expiredApplications.data.forEach(async element => {\n\n                        element.startDate =  await moment(element.startDate).format(\"DD MMM YYYY\"); \n                        element.endDate =  await moment(element.endDate).format(\"DD MMM YYYY\"); \n                        element.createdate =  await moment(element.createdate).format(\"DD MMM YYYY\"); \n                        \n                        this.jobApplications.expiredApplications.push(element);\n                    });\n                    console.log('applications',   this.jobApplications);\n                }\n            \n                 if(pageNo == 1){\n                    this.api.hideLoader();\n                }\n\n            }, err => {\n\n                 if(pageNo == 1){\n                    this.api.hideLoader();\n                }\n\n                this.api.autoLogout(err,this.pagination)\n            });\n    }\n\n    /**\n     * Accordian functions\n     * @param activeBlock cardId to perform accordian view.\n     */\n    public openActiveBlock(activeBlock: any) {\n        if (this.activeCard.length > 0) {\n            // store index of value in array\n            const indx = this.activeCard.indexOf(activeBlock);\n            if (indx >= 0) {\n                this.activeCard.splice(indx, 1);\n            } else {\n                this.activeCard.push(activeBlock);\n            }\n        } else {\n            this.activeCard.push(activeBlock);\n        }\n        console.log(this.activeCard);\n    }\n\n    public withdrawJob(jobId: any, id: any) {\n        this.api.showAlert('Withdraw', 'Are you sure you want to withdraw this application?', [\n            {\n                text: 'Cancel',\n                role: 'cancel',\n                cssClass: 'danger',\n                handler: (blah: any) => {\n                    console.warn('user cancelled to withdraw this job');\n                }\n            }, {\n                text: 'OK',\n                handler: () => {\n                    this.api.jobWithdraw(jobId, id)\n                        .subscribe((res: any) => {\n                            if (res.success) {\n                                this.api.showToast('Job withdraw successful', 2000, 'bottom');\n                                // refresh job list\n                                this.jobApplications.currentApplications = [];\n                                this.ionViewDidEnter();\n                            } else {\n                                this.api.showToast('Job not withdraw, Please try again!', 2000, 'bottom');\n                            }\n                        },err=>{\n                            this.api.autoLogout(err,{jobId, id});\n                        });\n                }\n            }\n        ]);\n    }\n\n    loadData(event){\n        this.pagination.page = this.pagination.page + 1;\n        this.getJobApplications(this.pagination.page, event)\n    }\n}\n","export default \".service-card {\\n  border: 1px solid #CCCCCC;\\n  box-shadow: 0 2px 4px 0 rgba(136, 136, 136, 0.3);\\n}\\n.service-card ion-card-header {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 10px;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.service-card ion-card-header div:first-child {\\n  width: 70%;\\n}\\n.service-card ion-card-header div:last-child {\\n  width: 30%;\\n  text-align: right;\\n}\\n.service-card ion-card-header ion-card-title {\\n  font-size: 14px;\\n  color: #4A4A4A;\\n  letter-spacing: 0;\\n  margin-bottom: 8px;\\n}\\n.service-card ion-card-header ion-card-subtitle {\\n  font-size: 12px;\\n  color: #888888;\\n  letter-spacing: 0;\\n}\\n.service-card ion-card-header ion-button {\\n  font-size: 12px;\\n  letter-spacing: 0;\\n  --box-shadow:none;\\n}\\n.service-card ion-card-content {\\n  padding: 10px;\\n}\\n.sub-heading {\\n  font-weight: 600;\\n  font-size: 14px;\\n  color: #4a4a4a;\\n  letter-spacing: 0;\\n  line-height: 16px;\\n  margin: 0;\\n}\\n.detail-list .detail-item {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  padding: 5px 0;\\n}\\n.detail-list .detail-item .detail-label {\\n  font-size: 14px;\\n  color: #4A4A4A;\\n  letter-spacing: 0;\\n  line-height: 16px;\\n  min-width: 100px;\\n}\\n.detail-list .detail-item .content {\\n  font-weight: 600;\\n  font-size: 14px;\\n  color: #4A4A4A;\\n  letter-spacing: 0;\\n  text-align: left;\\n  line-height: 16px;\\n}\\n.petgrid {\\n  text-align: center;\\n}\\n.petgrid ion-avatar {\\n  margin: 0 auto;\\n}\\n.petgrid ion-label {\\n  font-weight: 500;\\n  font-size: 14px;\\n  color: #4A4A4A;\\n  letter-spacing: 0;\\n  text-align: center;\\n  line-height: 18px;\\n}\\nion-segment-button {\\n  width: calc(100% / 2);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpvYi1hcHBsaWNhdGlvbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQUE7RUFDQSxnREFBQTtBQUNKO0FBQUk7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxtQkFBQTtBQUVSO0FBRFE7RUFDSSxVQUFBO0FBR1o7QUFEUTtFQUNJLFVBQUE7RUFDQSxpQkFBQTtBQUdaO0FBRFE7RUFDSSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFHWjtBQURRO0VBQ0ksZUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtBQUdaO0FBRFE7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQUdaO0FBQUk7RUFDSSxhQUFBO0FBRVI7QUFHQTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsU0FBQTtBQUFKO0FBR0k7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSwyQkFBQTtFQUNBLGNBQUE7QUFBTjtBQUNNO0VBQ0UsZUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDUjtBQUNNO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQUNSO0FBR0E7RUFDSSxrQkFBQTtBQUFKO0FBQ0k7RUFDSSxjQUFBO0FBQ1I7QUFDSTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFDUjtBQUVBO0VBQ0kscUJBQUE7QUFDSiIsImZpbGUiOiJqb2ItYXBwbGljYXRpb25zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZXJ2aWNlLWNhcmR7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0NDQ0NDQztcbiAgICBib3gtc2hhZG93OiAwIDJweCA0cHggMCByZ2JhKDEzNiwxMzYsMTM2LDAuMzApO1xuICAgIGlvbi1jYXJkLWhlYWRlcntcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBkaXY6Zmlyc3QtY2hpbGR7XG4gICAgICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICB9XG4gICAgICAgIGRpdjpsYXN0LWNoaWxke1xuICAgICAgICAgICAgd2lkdGg6IDMwJTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICB9XG4gICAgICAgIGlvbi1jYXJkLXRpdGxlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICAgIGNvbG9yOiAjNEE0QTRBO1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgICAgIH1cbiAgICAgICAgaW9uLWNhcmQtc3VidGl0bGUge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgY29sb3I6ICM4ODg4ODg7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICAgICAgfVxuICAgICAgICBpb24tYnV0dG9ue1xuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgICAgICAgICAtLWJveC1zaGFkb3c6bm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpb24tY2FyZC1jb250ZW50e1xuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuXG4gICAgfVxuICAgIFxufVxuLnN1Yi1oZWFkaW5nIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBjb2xvcjogIzRhNGE0YTtcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICBtYXJnaW46IDA7XG59XG4uZGV0YWlsLWxpc3R7XG4gICAgLmRldGFpbC1pdGVte1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICBwYWRkaW5nOiA1cHggMDtcbiAgICAgIC5kZXRhaWwtbGFiZWx7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgY29sb3I6ICM0QTRBNEE7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgICAgbWluLXdpZHRoOjEwMHB4O1xuICAgICAgfVxuICAgICAgLmNvbnRlbnR7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgY29sb3I6ICM0QTRBNEE7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgIH1cbiAgICB9XG59XG4ucGV0Z3JpZHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgaW9uLWF2YXRhcntcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICB9XG4gICAgaW9uLWxhYmVse1xuICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGNvbG9yOiAjNEE0QTRBO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBsaW5lLWhlaWdodDogMThweDtcbiAgICB9XG59XG5pb24tc2VnbWVudC1idXR0b24ge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLyAyKTtcbn0iXX0= */\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"home/tabs/view-jobs\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Job Applications</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-segment color=\\\"segment-theme\\\" class=\\\"custom-segment\\\" [(ngModel)]=\\\"selectedSegment\\\">\\n        <ion-segment-button value=\\\"current\\\">Current</ion-segment-button>\\n        <ion-segment-button value=\\\"expire\\\">Expired/Decline</ion-segment-button>\\n    </ion-segment>\\n\\n    <div [ngSwitch]=\\\"selectedSegment\\\">\\n        <div *ngSwitchCase=\\\"'current'\\\">\\n\\n            <!-- if not expired job then display messae here -->\\n            <ion-card color=\\\"theme-sec\\\" *ngIf=\\\"jobApplications?.currentApplications.length == 0\\\">\\n                <ion-card-content>\\n                    You currently have no current job applications\\n                </ion-card-content>\\n            </ion-card>\\n\\n            <ion-card class=\\\"service-card\\\" *ngFor=\\\"let curr of jobApplications.currentApplications\\\">\\n                <ion-card-header lines=\\\"none\\\">\\n                    <div (click)=\\\"openActiveBlock('card-'+curr?.id)\\\">\\n                        <ion-card-title>{{curr?.serviceId}}</ion-card-title>\\n                        <ion-card-subtitle color=\\\"c2\\\">{{curr?.startDate}}\\n                            - {{curr?.endDate}}</ion-card-subtitle>\\n                    </div>\\n                    <div>\\n                        <ion-button class=\\\"ion-text-capitalize\\\" size=\\\"small\\\" color=\\\"theme-sec\\\"\\n                            (click)=\\\"withdrawJob(curr?.jobId,curr?.id)\\\">Withdraw\\n                        </ion-button>\\n                    </div>\\n                </ion-card-header>\\n                <ion-card-content class=\\\"animated fadeInOut delay-2s\\\"\\n                    *ngIf=\\\"activeCard?.indexOf('card-'+curr?.id) >= 0\\\">\\n                    <ion-row class=\\\"ion-justify-content-start\\\">\\n                        <ion-col>\\n                            <h4 class=\\\"sub-heading\\\">Info</h4>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\\\"ion-justify-content-between\\\">\\n                        <ion-col>\\n                            <div class=\\\"detail-list\\\">\\n                                <div class=\\\"detail-item\\\">\\n                                    <div class=\\\"detail-label\\\">Owner</div>\\n                                    <div class=\\\"content\\\">{{curr?.ownerid}}</div>\\n                                </div>\\n                                <div class=\\\"detail-item\\\">\\n                                    <div class=\\\"detail-label\\\">Location</div>\\n                                    <div class=\\\"content\\\">{{curr?.suburb}}</div>\\n                                </div>\\n                                <div class=\\\"detail-item\\\">\\n                                    <div class=\\\"detail-label\\\">Posted</div>\\n                                    <div class=\\\"content\\\">{{curr?.createdate}}</div>\\n                                </div>\\n                                <div class=\\\"detail-item\\\">\\n                                    <div class=\\\"detail-label\\\">Service</div>\\n                                    <div class=\\\"content\\\">{{curr?.serviceId}}</div>\\n                                </div>\\n                                <div class=\\\"detail-item\\\">\\n                                    <div class=\\\"detail-label\\\">Start Date</div>\\n                                    <div class=\\\"content\\\">{{curr?.startDate}}\\n                                        ({{curr?.startDate}})\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"detail-item\\\">\\n                                    <div class=\\\"detail-label\\\">End Date</div>\\n                                    <div class=\\\"content\\\">{{curr?.endDate}}\\n                                        ({{curr?.endDate}})\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\\\"ion-justify-content-start\\\">\\n                        <ion-col>\\n                            <h4 class=\\\"sub-heading\\\">Pets</h4>\\n                        </ion-col>\\n                    </ion-row>\\n                    <ion-row class=\\\"ion-justify-content-start\\\">\\n                        <ion-col *ngFor=\\\"let pet of curr?.pets\\\" size=\\\"4\\\" class=\\\"petgrid\\\">\\n                            <ion-avatar>\\n                                <ion-img [src]=\\\"pet.imagename == null || pet.imagename == '' ? \\n                                'https://dev.petcloud.com.au/img/pet_placeholder.png' \\n                                : pet.imagename\\\"></ion-img>\\n                            </ion-avatar>\\n                            <ion-label>{{pet?.name}}</ion-label>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-card-content>\\n            </ion-card>\\n\\n            <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n                <ion-infinite-scroll-content\\n                  loadingSpinner=\\\"bubbles\\\"\\n                  loadingText=\\\"Loading more data...\\\">\\n                </ion-infinite-scroll-content>\\n              </ion-infinite-scroll>\\n\\n        </div>\\n        <div *ngSwitchCase=\\\"'expire'\\\">\\n            <!-- if not expired job then display messae here -->\\n            <ion-card color=\\\"theme-sec\\\" *ngIf=\\\"jobApplications?.expiredApplications.length == 0\\\">\\n                <ion-card-content>\\n                    You currently have no expired/declined job applications\\n                </ion-card-content>\\n            </ion-card>\\n\\n            <!-- if expired eixst then jobs display here -->\\n\\n            <ion-list *ngIf=\\\"jobApplications?.expiredApplications.length > 0\\\">\\n                <ion-card class=\\\"service-card\\\" *ngFor=\\\"let exp of jobApplications?.expiredApplications\\\">\\n                    <ion-card-header lines=\\\"none\\\">\\n                        <div (click)=\\\"openActiveBlock('card-'+exp?.id)\\\">\\n                            <ion-card-title>{{exp?.serviceId}}</ion-card-title>\\n                            <ion-card-subtitle color=\\\"c2\\\">{{exp?.startDate}}\\n                                - {{exp?.endDate}}</ion-card-subtitle>\\n                        </div>\\n                        <div>\\n\\n                        </div>\\n                    </ion-card-header>\\n                    <ion-card-content class=\\\"animated fadeInOut delay-2s\\\"\\n                        *ngIf=\\\"activeCard?.indexOf('card-'+exp?.id) >= 0\\\">\\n                        <ion-row class=\\\"ion-justify-content-start\\\">\\n                            <ion-col>\\n                                <h4 class=\\\"sub-heading\\\">Info</h4>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row class=\\\"ion-justify-content-between\\\">\\n                            <ion-col>\\n                                <div class=\\\"detail-list\\\">\\n                                    <div class=\\\"detail-item\\\">\\n                                        <div class=\\\"detail-label\\\">Owner</div>\\n                                        <div class=\\\"content\\\">{{exp?.ownerid}}</div>\\n                                    </div>\\n                                    <div class=\\\"detail-item\\\">\\n                                        <div class=\\\"detail-label\\\">Location</div>\\n                                        <div class=\\\"content\\\">{{exp?.suburb}}</div>\\n                                    </div>\\n                                    <div class=\\\"detail-item\\\">\\n                                        <div class=\\\"detail-label\\\">Posted</div>\\n                                        <div class=\\\"content\\\">{{exp?.createdate}}</div>\\n                                    </div>\\n                                    <div class=\\\"detail-item\\\">\\n                                        <div class=\\\"detail-label\\\">Service</div>\\n                                        <div class=\\\"content\\\">{{exp?.serviceId}}</div>\\n                                    </div>\\n                                    <div class=\\\"detail-item\\\">\\n                                        <div class=\\\"detail-label\\\">Start Date</div>\\n                                        <div class=\\\"content\\\">{{exp?.startDate}}\\n                                       \\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"detail-item\\\">\\n                                        <div class=\\\"detail-label\\\">End Date</div>\\n                                        <div class=\\\"content\\\">{{exp?.endDate}}\\n                                          \\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row class=\\\"ion-justify-content-start\\\">\\n                            <ion-col>\\n                                <h4 class=\\\"sub-heading\\\">Pets</h4>\\n                            </ion-col>\\n                        </ion-row>\\n                        <ion-row class=\\\"ion-justify-content-start\\\">\\n                            <ion-col *ngFor=\\\"let pet of exp?.pets\\\" size=\\\"4\\\" class=\\\"petgrid\\\">\\n                                <ion-avatar>\\n\\n                                    <ion-img [src]=\\\"pet.imagename == null || pet.imagename == '' ? \\n                                    'https://dev.petcloud.com.au/img/pet_placeholder.png' \\n                                    : pet.imagename\\\"></ion-img>\\n\\n                                </ion-avatar>\\n                                <ion-label>{{pet?.name}}</ion-label>\\n                            </ion-col>\\n                        </ion-row>\\n                    </ion-card-content>\\n                </ion-card>\\n\\n                <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n                    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more data...\\\">\\n                    </ion-infinite-scroll-content>\\n                </ion-infinite-scroll>\\n\\n            </ion-list>\\n        </div>\\n    </div>\\n</ion-content>\";"]}