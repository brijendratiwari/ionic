{"version":3,"sources":["webpack:///src/app/profile/basic-info/basic-info.module.ts","webpack:///src/app/profile/basic-info/basic-info.page.ts","webpack:///src/app/profile/basic-info/basic-info.page.scss","webpack:///src/app/profile/basic-info/basic-info.page.html"],"names":["routes","path","component","BasicInfoPage","BasicInfoPageModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","GooglePlaceModule","RouterModule","providers","LocationAccuracy","declarations","schemas","NO_ERRORS_SCHEMA","api","formBuilder","EPEvent","geoLocation","router","storage","diagnostic","locationAccuracy","modalCtrl","appsFlyerAnalytics","navCtrl","platform","imageSrc","isNDISParticant","requestForGPSPremission","lat","lng","showManagerEmail","options","types","componentRestrictions","country","bounds","fields","strictBounds","origin","profileForm","group","email","Validators","first_name","last_name","gender","user_type","dob","street_address","address","state","zipcode","mobile","phone","ndis_participant","plan_managed","plan_manager_email","getUserProfileBasicInfo","ready","isLocationEnabled","then","isEnabled","isLocationAuthorized","success","getLocationAccuracy","err","request","REQUEST_PRIORITY_HIGH_ACCURACY","response_gps","getCurrentLocation","error","getCurrentPosition","resp","coords","latitude","toString","longitude","getSuburb","subscribe","response","patchValue","locality","value","showLoader","updateUserProfile","pipe","finalize","hideLoader","res","set","analytics","user_status","user_id","user","id","app_version","getCurrentVersionCode","app_type","platformName","profileUpdatedAnalytics","localStorage","setItem","publish","menuType","time","Date","now","status","PetcloudApiService","showToast","setTimeout","navigateByUrl","autoLogout","getUserBasicProfile","userData","ndisprofile","ndisProfile","setValue","addressArray","formatted_address","split","addressLenth","length","addressText","i","vicinity","getState","isNaN","geometry","location","stateName","type","create","InfomodelComponent","animated","cssClass","componentProps","modal","onDidDismiss","data","present","ev","detail","checked","event","FormBuilder","Events","Geolocation","Router","Storage","Diagnostic","ModalController","AppsFlyerService","NavController","Platform","ViewChild","Component","selector","template"],"mappings":"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","file":"src_app_profile_basic-info_basic-info_module_ts-es5.js","sourcesContent":["import {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\nimport {IonicModule} from '@ionic/angular';\nimport {BasicInfoPage} from './basic-info.page';\nimport {GooglePlaceModule} from 'ngx-google-places-autocomplete';\nimport { LocationAccuracy } from '@ionic-native/location-accuracy/ngx';\nconst routes: Routes = [\n    {\n        path: '',\n        component: BasicInfoPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        IonicModule,\n        GooglePlaceModule,\n        RouterModule.forChild(routes),\n        /*AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyA6PHeobaARhtYsbr5Hu8WiXWWJb0kcelc',\n            libraries: ['places']\n        }),*/\n    ],\n    providers:[LocationAccuracy],\n    declarations: [BasicInfoPage],\n    schemas: [NO_ERRORS_SCHEMA]\n})\nexport class BasicInfoPageModule {\n}\n","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\nimport { PetcloudApiService } from './../../api/petcloud-api.service';\nimport { Router } from '@angular/router';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Storage } from '@ionic/storage';\nimport { User } from '../../model/user';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete/ngx-google-places-autocomplete.directive';\nimport { NavController, ModalController, Platform } from '@ionic/angular';\n// import model files\nimport { ApiResponse } from '../../model/api-response';\nimport { finalize } from 'rxjs/operators';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { LocationAccuracy } from '@ionic-native/location-accuracy/ngx';\nimport { Diagnostic } from '@ionic-native/diagnostic/ngx';\nimport { InfomodelComponent } from '../../components/infomodel/infomodel.component';\nimport { AppsFlyerService } from '../../../app/apps-flyer.service';\nimport { Events } from 'src/app/events';\n\n\n@Component({\n    selector: 'app-basic-info',\n    templateUrl: './basic-info.page.html',\n    styleUrls: ['./basic-info.page.scss'],\n})\nexport class BasicInfoPage implements OnInit {\n\n    public profileForm: FormGroup;\n    public gender: any;\n    public imageSrc: String = '';\n    public isNDISParticant: boolean = false;\n    requestForGPSPremission: boolean = true;\n\n    @ViewChild('places') places: GooglePlaceDirective;\n    @ViewChild('search') public searchElement: ElementRef;\n    public lat = \"\"\n    public lng = \"\";\n    public userData: User;\n    public showManagerEmail: boolean = false;\n\n    options = {\n        types: ['(regions)'],\n        componentRestrictions: { country: \"AU\" },\n        bounds: null,\n        fields: null,\n        strictBounds: null,\n        origin: null\n    };\n\n\n    constructor(public api: PetcloudApiService, private formBuilder: FormBuilder,\n        public EPEvent: Events,\n        public geoLocation: Geolocation,\n        protected router: Router, protected storage: Storage,\n        private diagnostic: Diagnostic,\n        private locationAccuracy: LocationAccuracy,\n        public modalCtrl: ModalController,\n        public appsFlyerAnalytics: AppsFlyerService,\n        protected navCtrl: NavController,\n        public platform: Platform,) {\n\n    }\n\n    ngOnInit() {\n        this.profileForm = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n            first_name: ['', [Validators.required]],\n            last_name: ['', [Validators.required]],\n            gender: [''],\n            user_type: ['', [Validators.required]],\n            dob: ['', [Validators.required]],\n            street_address: ['', [Validators.required]],\n            address: ['', [Validators.required]],\n            state: ['', [Validators.required]],\n            zipcode: ['', [Validators.required]],\n            mobile: ['', [Validators.required, Validators.pattern(/^(\\+61)[0-9]{9}$/)]],\n            phone: [''],\n            ndis_participant: [false],\n            plan_managed: ['1'],\n            plan_manager_email: ['']\n        });\n    }\n\n    ionViewDidEnter() {\n        // fill up form with already stored value by user profile\n        this.getUserProfileBasicInfo();\n    }\n\n\n    //Check if application having Location Authorization\n    async isLocationAuthorized() {\n        await this.platform.ready();\n        this.diagnostic.isLocationEnabled().then((isEnabled: any) => {\n            if (isEnabled) {\n                this.diagnostic.isLocationAuthorized().then((success: any) => {\n                    if (success) {\n                        this.requestForGPSPremission = true;\n                        this.getLocationAccuracy();\n                    } else {\n                        this.requestForGPSPremission = false;\n                    }\n                }, err => {\n                })\n            } else {\n                this.requestForGPSPremission = false;\n            }\n\n        }, err => {\n        })\n    }\n\n    async getLocationAccuracy() {\n        await this.platform.ready();\n        this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(\n            (response_gps) => {\n                // When GPS Turned ON call method to get Accurate location coordinates\n                this.getCurrentLocation();\n            },\n            error => {\n            }\n        );\n    }\n\n    async getCurrentLocation() {\n        await this.geoLocation.getCurrentPosition().then(async (resp) => {\n\n            this.lat = await resp.coords.latitude.toString()\n            this.lng = await resp.coords.longitude.toString();\n\n            await this.api.getSuburb(this.lat, this.lng).subscribe(async (response: any) => {\n                this.profileForm.patchValue({\n                    address: response.locality\n                })\n            }, async err => {\n\n            })\n        });\n    }\n\n    public saveBasicProfile() {\n\n        this.profileForm.value.lat = this.lat;\n        this.profileForm.value.lng = this.lng;\n\n        if (!this.profileForm.value.ndis_participant) {\n            this.profileForm.value.ndis_participant = 0\n            this.profileForm.value.plan_managed = \"\"\n            this.profileForm.value.plan_manager_email = \"\"\n        } else {\n            this.profileForm.value.ndis_participant = 1\n        }\n\n        this.api.showLoader();\n        this.api.updateUserProfile(this.profileForm.value).pipe(\n            finalize(() => {\n                this.api.hideLoader();\n            }))\n            .subscribe(async (res: ApiResponse) => {\n                if (await res.success) {\n                    await this.storage.set(\"email\", this.profileForm.value.email);\n                    await this.storage.set(\"isLoggedInKeyPressed\", true);\n\n                    const analytics = {\n                        user_status: \"LoggedIn\",\n                        user_id: res.user.id,\n                        app_version: this.appsFlyerAnalytics.getCurrentVersionCode(),\n                        app_type: this.appsFlyerAnalytics.platformName(),\n                    }\n                    this.appsFlyerAnalytics.profileUpdatedAnalytics(analytics);\n                    let user_type = await this.profileForm.value.user_type;\n\n                    if (user_type == 3 || user_type == 2) {\n                        this.storage.set(\"menuType\", \"sitter\").then((res) => {\n                            localStorage.setItem(\"menuType\", \"sitter\")\n                            this.EPEvent.publish(\"menuName\", {menuType:\"sitter\", time: Date.now()})\n                        })\n                    } else if (user_type == 1) {\n                        localStorage.setItem(\"menuType\", \"owner\")\n                        this.storage.set(\"menuType\", \"owner\").then((res) => {\n                            this.EPEvent.publish(\"menuName\",{ menuType:\"owner\", time:Date.now()})\n                        })\n                    }\n\n                    this.EPEvent.publish(\"isProfileUpdated\", {status: true, time: Date.now()});\n\n                    this.storage.set(PetcloudApiService.USER, res.user);\n                    this.api.showToast('Your profile has been saved successfully', 2000, 'bottom');\n\n\n                    setTimeout(() => {\n                        this.router.navigateByUrl('/profile-photo-upload');\n                    }, 800);\n                } else {\n                    this.api.showToast(res.error, 2000, 'bottom');\n                }\n            }, (err: any) => {\n                this.api.autoLogout(err, this.profileForm.value)\n            });\n    }\n\n    /**\n     * Get User Profile Basic Information for Profile 1st Step.\n     */\n    public getUserProfileBasicInfo() {\n        this.api.showLoader();\n        this.api.getUserBasicProfile().pipe(finalize(() => {\n            this.api.hideLoader();\n        })).subscribe(async (res: ApiResponse) => {\n            if (res.success) {\n                const userData: User = await res.user;\n                const ndisProfile: any = await userData.ndisprofile\n\n                this.profileForm.setValue({\n                    email: userData.email,\n                    first_name: userData.first_name,\n                    last_name: userData.last_name,\n                    gender: userData.gender,\n                    user_type: userData.user_type,\n                    dob: (userData.dob === '1970-01-01' || userData.dob == null) ? new Date() : userData.dob,\n                    street_address: userData.street_address,\n                    address: userData.address,\n                    state: userData.state,\n                    zipcode: userData.zipcode,\n                    mobile: userData.mobile,\n                    phone: userData.phone,\n                    ndis_participant: ndisProfile && ndisProfile.ndis_participant == \"1\" ? true : false,\n                    plan_managed : ndisProfile != null ? ndisProfile.plan_managed : \"\",\n                    plan_manager_email: ndisProfile != null ? ndisProfile.plan_manager_email  : \"\",\n                });\n\n                if (ndisProfile != null) {\n                    if(ndisProfile.plan_managed == \"2\" && this.isNDISParticant){\n                        this.showManagerEmail = true\n                    }else{\n                        this.showManagerEmail = false\n                    }\n                    \n                } else {\n                    this.showManagerEmail = false\n                }\n\n                this.lng = userData.longitude;\n                this.lat = userData.latitude;\n\n\n                if (this.lat == null || this.lat == \"\") {\n                    this.isLocationAuthorized();\n                }\n            } else {\n                this.api.showToast('Getting problem to fetch profile details', 2000, 'bottom');\n            }\n        }, (err: any) => {\n            this.api.autoLogout(err, \"\")\n\n        });\n    }\n\n    public handleAddressChange(address: any) {\n\n        const addressArray = address.formatted_address.split(' ');\n        const addressLenth = addressArray.length;\n        let addressText = '';\n\n        for (let i = 0; i < (addressLenth - 2); i++) {\n            addressText += addressArray[i] + '';\n        }\n        // set automatice state and pincode value\n        this.profileForm.patchValue({\n            address: address.vicinity,\n            state: this.getState(addressArray[(addressLenth - 2)]),\n            zipcode: (isNaN(addressArray[(addressLenth - 1)])) ? '' : addressArray[(addressLenth - 1)]\n        });\n        this.lng = address.geometry.location.lng();\n        this.lat = address.geometry.location.lat();\n    }\n\n\n    private getState(stateName: string): any {\n        switch (stateName) {\n            case 'ACT':\n                return '1';\n                break;\n            case 'NSW':\n                return '2';\n                break;\n            case 'NT':\n                return '3';\n                break;\n            case 'QLD':\n                return '4';\n                break;\n            case 'SA':\n                return '5';\n                break;\n            case 'VIC':\n                return '6';\n                break;\n            case 'WA':\n                return '7';\n                break;\n            case 'TAS':\n                return '8';\n                break;\n            default:\n                return '0';\n        }\n    }\n\n    async infoModel(type) {\n        const modal = await this.modalCtrl.create({\n            component: InfomodelComponent,\n            animated: true,\n            cssClass: 'modalCss',\n            componentProps: {\n                type\n            }\n        });\n        modal.onDidDismiss()\n            .then((data: any) => {\n\n            });\n        return await modal.present();\n    }\n\n    onChangeNDISParticipant(ev) {\n        ev.detail.checked == true ? (this.isNDISParticant = true, this.showManagerEmail = true) : (this.isNDISParticant = false, this.showManagerEmail = false)\n    }\n\n    planType(event) {\n        if (event.detail.value == 2) {\n            this.showManagerEmail = true\n        } else {\n            this.showManagerEmail = false\n        }\n    }\n}\n","export default \".profileform ion-item {\\n  --padding-start: 0;\\n  --padding-start: 0;\\n  font-size: 15px;\\n  --min-height: 40px;\\n}\\n.profileform p {\\n  margin: 5px 0px 0px;\\n}\\nion-list {\\n  margin: 0px;\\n  padding: 0px;\\n}\\n.group-title {\\n  font-weight: 600;\\n  font-size: 16px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2ljLWluZm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQUFKO0FBRUU7RUFDRSxtQkFBQTtBQUFKO0FBR0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUFGO0FBRUE7RUFDRSxnQkFBQTtFQUNBLDBCQUFBO0FBQ0YiLCJmaWxlIjoiYmFzaWMtaW5mby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZmlsZWZvcm0ge1xuICBpb24taXRlbSB7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAwO1xuICAgIC0tcGFkZGluZy1zdGFydDogMDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgLS1taW4taGVpZ2h0OiA0MHB4O1xuICB9XG4gIHAge1xuICAgIG1hcmdpbjogNXB4IDBweCAwcHg7XG4gIH1cbn1cbmlvbi1saXN0IHtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbi5ncm91cC10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons defaultHref=\\\"/get-started\\\" slot=\\\"start\\\">\\n            <ion-back-button >\\n            </ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Basic Profile</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form [formGroup]=\\\"profileForm\\\" class=\\\"profileform ion-padding\\\">\\n        <ion-list>\\n            <ion-item class=\\\"group-title\\\" lines=\\\"none\\\">\\n                <ion-text>Can you tell us, why have you joined PetCloud?</ion-text>\\n            </ion-item>\\n            <ion-radio-group formControlName=\\\"user_type\\\">\\n                <ion-item>\\n                    <ion-label>Find Pet Care Services</ion-label>\\n                    <ion-radio value=\\\"1\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Offer Pet Care Services</ion-label>\\n                    <ion-radio value=\\\"2\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Both</ion-label>\\n                    <ion-radio value=\\\"3\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"profileForm.get('user_type').hasError('required')\\\">\\n                <p class=\\\"error\\\" *ngIf=\\\"profileForm.get('first_name').hasError('required')\\\">\\n                    Select why you joined Petcloud!\\n                </p>\\n            </ion-text>\\n        </ion-list>\\n\\n        <ion-list>\\n            <ion-item>\\n                <ion-label>Are you an NDIS participant?</ion-label>\\n                <ion-checkbox formControlName=\\\"ndis_participant\\\" (ionChange)=\\\"onChangeNDISParticipant($event)\\\" slot=\\\"end\\\"></ion-checkbox>\\n            </ion-item>\\n        </ion-list>\\n\\n        <ng-container *ngIf=\\\"isNDISParticant\\\">\\n        <ion-list>\\n            <ion-item lines=\\\"none\\\">\\n                <ion-text>How is your plan managed?</ion-text>\\n            </ion-item>\\n            <ion-radio-group (ionChange)=\\\"planType($event)\\\" formControlName=\\\"plan_managed\\\">\\n                <ion-item>\\n                    <ion-label>Self Managed</ion-label>\\n                    <ion-radio value=\\\"1\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>By a Plan Manager</ion-label>\\n                    <ion-radio value=\\\"2\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>NDIA-managed</ion-label>\\n                    <ion-radio value=\\\"3\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group>\\n        </ion-list>\\n\\n        <ion-list *ngIf=\\\"showManagerEmail\\\">\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Enter Plan Manager Email Address\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter Plan Manager Email Id\\\" formControlName=\\\"plan_manager_email\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"profileForm.get('plan_managed').value == '2' && (profileForm.get('plan_manager_email').hasError('required') && profileForm.get('plan_manager_email').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"profileForm.get('plan_managed').value == '2' &&  (profileForm.get('first_name').hasError('plan_manager_email') && profileForm.get('plan_manager_email').touched)\\\">\\n                    Please enter your plan manager email\\n                </p>\\n            </ion-text>\\n            </ion-list>\\n        </ng-container>\\n        \\n        <ion-list>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">First name\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter First Name\\\" formControlName=\\\"first_name\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('first_name').hasError('required') && profileForm.get('first_name').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('first_name').hasError('required') && profileForm.get('first_name').touched)\\\">\\n                    Enter first name.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Last name\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter Last Name\\\" formControlName=\\\"last_name\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('last_name').hasError('required') && profileForm.get('last_name').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('last_name').hasError('required') && profileForm.get('last_name').touched)\\\">\\n                    Enter last name.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label>Gender\\n                    <!-- <small class=\\\"error\\\">*</small> -->\\n                </ion-label>\\n                <ion-select placeholder=\\\"Select Gender\\\" formControlName=\\\"gender\\\">\\n                    <ion-select-option value=\\\"F\\\">Female</ion-select-option>\\n                    <ion-select-option value=\\\"M\\\">Male</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('gender').hasError('required') && profileForm.get('gender').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('gender').hasError('required') && profileForm.get('gender').touched)\\\">\\n                    Select gender.\\n                </p>\\n            </ion-text>\\n\\n            <ion-text class=\\\"link-contrast fs-12\\\" (click)=\\\"infoModel('gender')\\\" lines=\\\"none\\\">\\n                <p >Why do I need to provide this?\\n                    <ion-icon name=\\\"information-circle\\\" slot=\\\"end\\\"></ion-icon>\\n                </p>\\n            </ion-text>\\n\\n\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">DOB\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-datetime display-format=\\\"DD/MM/YYYY\\\" picker-format=\\\"DD/MM/YYYY\\\"\\n                                placeholder=\\\"e.g 13/12/1989\\\"\\n                                formControlName=\\\"dob\\\">\\n                </ion-datetime>\\n            </ion-item>\\n\\n            <ion-text class=\\\"link-contrast fs-12\\\" (click)=\\\"infoModel('dob')\\\" lines=\\\"none\\\">\\n                <p >Why do I need to provide this?\\n                    <ion-icon name=\\\"information-circle\\\" slot=\\\"end\\\"></ion-icon>\\n                </p>\\n            </ion-text>\\n            \\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('dob').hasError('required') && profileForm.get('dob').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('dob').hasError('required') && profileForm.get('dob').touched)\\\">\\n                    Select date of birth.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Street Address\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input type=\\\"text\\\" id=\\\"street_address\\\" placeholder=\\\"Enter Street Address\\\"\\n                            formControlName=\\\"street_address\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-text class=\\\"link-contrast fs-12\\\" (click)=\\\"infoModel('address')\\\" lines=\\\"none\\\">\\n                <p >My address privacy\\n                    <ion-icon name=\\\"information-circle\\\" slot=\\\"end\\\"></ion-icon>\\n                </p>\\n            </ion-text>\\n\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('street_address').hasError('required') && profileForm.get('street_address').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('street_address').hasError('required') && profileForm.get('street_address').touched)\\\">\\n                    Enter street address.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Suburb\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <input class=\\\"native-input sc-ion-input-md google-input\\\" \\n                [options]='options'\\n                type=\\\"text\\\" ngx-google-places-autocomplete\\n                        #placesRef=\\\"ngx-places\\\"\\n                        (onAddressChange)=\\\"handleAddressChange($event)\\\" id=\\\"suburb\\\"\\n                        placeholder=\\\"Enter keywords\\\" formControlName=\\\"address\\\"/>\\n                <!-- <ion-input type=\\\"text\\\" id=\\\"suburb\\\" [(ngModel)]=\\\"googleAddress\\\" (setAddress)=\\\"getAddress($event)\\\" placeholder=\\\"Enter keywords\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('address').hasError('required') && profileForm.get('address').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('address').hasError('required') && profileForm.get('address').touched)\\\">\\n                    Enter suburb.\\n                </p>\\n            </ion-text>\\n            <!-- <small>Please select address from dropdown</small> -->\\n            <ion-item class=\\\"cutom-height\\\">\\n                <ion-label position=\\\"stacked\\\">State<small class=\\\"error\\\">*</small></ion-label>\\n                <ion-select placeholder=\\\"Select State\\\" formControlName=\\\"state\\\">\\n                    <ion-select-option value=\\\"1\\\">ACT</ion-select-option>\\n                    <ion-select-option value=\\\"2\\\">NSW</ion-select-option>\\n                    <ion-select-option value=\\\"3\\\">NT</ion-select-option>\\n                    <ion-select-option value=\\\"4\\\">QLD</ion-select-option>\\n                    <ion-select-option value=\\\"5\\\">SA</ion-select-option>\\n                    <ion-select-option value=\\\"6\\\">VIC</ion-select-option>\\n                    <ion-select-option value=\\\"7\\\">WA</ion-select-option>\\n                    <ion-select-option value=\\\"8\\\">TAS</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('state').hasError('required') && profileForm.get('state').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('state').hasError('required') && profileForm.get('state').touched)\\\">\\n                    Select state.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Postcode\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter Postcode\\\" formControlName=\\\"zipcode\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('zipcode').hasError('required') && profileForm.get('zipcode').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('zipcode').hasError('required') && profileForm.get('zipcode').touched)\\\">\\n                    Enter correct postalcode.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Email\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input type=\\\"email\\\" placeholder=\\\"Enter Email Address\\\"\\n                            formControlName=\\\"email\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('email').hasError('required') && profileForm.get('email').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('email').hasError('required') && profileForm.get('email').touched)\\\">\\n                    Enter proper email address format.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Home Phone</ion-label>\\n                <ion-input placeholder=\\\"Enter Home Phone\\\" formControlName=\\\"phone\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Mobile Number in International Format\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"+61400111222\\\"\\n                type=\\\"tel\\\"\\n                formControlName=\\\"mobile\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('mobile').hasError('required') && profileForm.get('mobile').touched)\\\">\\n                <p class=\\\"error\\\">\\n                    Enter mobile phone number.\\n                </p>\\n            </ion-text>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('mobile').hasError('pattern') && profileForm.get('mobile').touched)\\\">\\n                <p class=\\\"error\\\" >\\n                    Enter proper mobile phone number start with +61.\\n                </p>\\n            </ion-text>\\n        </ion-list>\\n    </form>\\n</ion-content>\\n<ion-footer class=\\\"ion-no-border\\\">\\n        <ion-button \\n            class=\\\"text-capitalize fls-0 fs-18 footer-btn\\\"\\n            expand=\\\"full\\\"\\n            [disabled]=\\\"!profileForm.valid\\\"\\n            color=\\\"theme\\\"\\n            (click)=\\\"saveBasicProfile()\\\"\\n        >\\n            Save & Next\\n        </ion-button>\\n</ion-footer>\\n\";"]}