{"version":3,"sources":["webpack:///src/app/availability-settings/availability-settings.page.ts","webpack:///src/app/availability-settings/availability-settings.page.scss","webpack:///src/app/availability-settings/availability-settings.page.html"],"names":["AvailabilitySettingsPage","modal","formBuilder","navParams","api","settingsData","checkedItems","days","label","value","checked","settingForm","group","enquiriesValues","Validators","daysValues","regulars","selectedMonth","get","getDataAvailabilitySettings","controls","dismiss","valid","markAllAsTouched","data","away_mode","repeat_customer","showLoader","calenderSettting","subscribe","res","success","showToast","dismissModal","hideLoader","err","autoLogout","item","includes","filter","push","setValue","getAvailabilitySettingsData","enquiries","operating_days","length","i","index","findIndex","resp","ModalController","FormBuilder","NavParams","PetcloudApiService","Component","selector","template"],"mappings":"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","file":"default-src_app_availability-settings_availability-settings_page_ts-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PetcloudApiService } from \"../api/petcloud-api.service\";\n@Component({\n  selector: 'app-availability-settings',\n  templateUrl: './availability-settings.page.html',\n  styleUrls: ['./availability-settings.page.scss'],\n})\nexport class AvailabilitySettingsPage implements OnInit {\n  settingForm: FormGroup;\n  selectedMonth: any;\n  settingsData: any = '';\n  checkedItems: any = [];\n  days: any = [\n    { label: \"Monday\", value: '1', checked: false },\n    { label: \"Tuesday\", value: '2', checked: false },\n    { label: \"Wednesday\", value: '3', checked: false },\n    { label: \"Thursday\", value: '4', checked: false },\n    { label: \"Friday\", value: '5', checked: false },\n    { label: \"Saturday\", value: '6', checked: false },\n    { label: \"Sunday\", value: '7', checked: false },\n  ]\n  constructor(\n    public modal: ModalController,\n    public formBuilder: FormBuilder,\n    public navParams: NavParams,\n    public api: PetcloudApiService,) {\n    this.settingForm = this.formBuilder.group({\n      enquiriesValues: ['', [Validators.required]],\n      daysValues: [],\n      break: [false],\n      regulars: [false]\n    });\n    this.selectedMonth = this.navParams.get('selectedMonth');\n\n    // console.log(this.selectedMonth)\n  }\n\n  ngOnInit() {\n    this.getDataAvailabilitySettings();\n  }\n  get f() {\n    return this.settingForm.controls;\n  }\n  dismissModal() {\n    this.modal.dismiss();\n  }\n  save() {\n    if (!this.settingForm.valid) {\n      this.settingForm.markAllAsTouched();\n      return;\n    }\n    var data = this.settingForm.value;\n    data.selectedMonth = this.selectedMonth;\n    if (this.settingForm.value.break) {\n      data.away_mode = \"yes\"\n    } else {\n      data.away_mode = \"no\"\n    }\n    if (this.settingForm.value.regulars) {\n      data.repeat_customer = \"yes\"\n    } else {\n      data.repeat_customer = \"no\"\n    }\n    this.api.showLoader();\n    this.api.calenderSettting(data).subscribe(\n      (res: any) => {\n        if (res.success) {\n          this.api.showToast(res.success, 2000, 'bottom');\n          this.dismissModal();\n        } else {\n          this.api.showToast('Please,try again!', 2000, 'bottom');\n        }\n        this.api.hideLoader();\n      },\n      (err: any) => {\n        this.api.hideLoader();\n        this.api.autoLogout(err, data);\n      }\n    );\n  }\n  onChange(item) {\n    if (this.checkedItems.includes(item)) {\n      this.checkedItems = this.checkedItems.filter((value) => value != item);\n    } else {\n      this.checkedItems.push(item)\n      // }\n      // console.log(this.checkedItems.toString())\n      this.settingForm.get(\"daysValues\").setValue(this.checkedItems);\n    }\n  }\n  getDataAvailabilitySettings() {\n    this.api.getAvailabilitySettingsData().subscribe(\n      (res: any) => {\n        if (res.success) {\n          this.settingsData = res;\n          if (this.settingsData.away_mode == 'yes') {\n            this.settingForm.get(\"break\").setValue(true);\n          } else {\n            this.settingForm.get(\"break\").setValue(false);\n          }\n          if (this.settingsData.repeat_customer == 'yes') {\n            this.settingForm.get(\"regulars\").setValue(true);\n          } else {\n            this.settingForm.get(\"regulars\").setValue(false);\n          }\n          this.settingForm.get(\"enquiriesValues\").setValue(res.enquiries);\n          this.settingForm.get(\"daysValues\").setValue(res.operating_days);\n          this.checkedItems = res.operating_days;\n          if (res.operating_days.length > 0) {\n            for (var i = 0; i < res.operating_days.length; i++) {\n              let index = this.days.findIndex((resp) => resp.value == res.operating_days[i]);\n              if (index > -1) {\n                this.days[index].checked = true;\n              }\n            }\n          }\n        } else {\n          this.settingsData = '';\n        }\n      },\n      (err: any) => {\n        this.api.hideLoader();\n      }\n    );\n\n  }\n}\n","export default \".setting-item {\\n  padding: 15px;\\n  clear: both;\\n}\\n\\n.setting-item.days ion-item {\\n  display: flex;\\n  width: 50%;\\n  float: left;\\n}\\n\\n.close-btn {\\n  font-size: 20px;\\n  padding-right: 9px;\\n}\\n\\n.action-btn {\\n  text-align: center;\\n}\\n\\n.action-btn ion-button {\\n  border: 2px solid #fe4164;\\n  --box-shadow: none;\\n  width: 92%;\\n  margin: 0px;\\n  text-transform: unset;\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin-bottom: 23px;\\n  --background: transparent;\\n  color: #fe4164;\\n}\\n\\n.invalid {\\n  padding: 0 19px;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YWlsYWJpbGl0eS1zZXR0aW5ncy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUNBO0VBQ0ksYUFBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0FBRUo7O0FBQUE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUFHSjs7QUFEQTtFQUNJLGtCQUFBO0FBSUo7O0FBSEk7RUFDSSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7RUFDQSxjQUFBO0FBS1I7O0FBRkE7RUFDSSxlQUFBO0VBQ0EsVUFBQTtBQUtKIiwiZmlsZSI6ImF2YWlsYWJpbGl0eS1zZXR0aW5ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2V0dGluZy1pdGVtIHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBjbGVhcjogYm90aDtcclxufVxyXG4uc2V0dGluZy1pdGVtLmRheXMgaW9uLWl0ZW0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxufVxyXG4uY2xvc2UtYnRuIHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDlweDtcclxufVxyXG4uYWN0aW9uLWJ0biB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBpb24tYnV0dG9uIHtcclxuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmU0MTY0O1xyXG4gICAgICAgIC0tYm94LXNoYWRvdzogbm9uZTtcclxuICAgICAgICB3aWR0aDogOTIlO1xyXG4gICAgICAgIG1hcmdpbjogMHB4O1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1bnNldDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyM3B4O1xyXG4gICAgICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgY29sb3I6ICNmZTQxNjQ7XHJcbiAgICB9XHJcbn1cclxuLmludmFsaWQge1xyXG4gICAgcGFkZGluZzogMCAxOXB4O1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Availability Settings</ion-title>\\n    <ion-buttons slot=\\\"end\\\" class=\\\"close-btn\\\">\\n      <ion-icon name=\\\"close\\\" (click)=\\\"dismissModal()\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"settingForm\\\">\\n    <div class=\\\"setting-form\\\">\\n      <ion-list lines=\\\"none\\\">\\n        <div class=\\\"setting-item\\\">\\n          <h5>Volume of enquires</h5>\\n          <ion-radio-group [allowEmptySelection]=\\\"true\\\" formControlName=\\\"enquiriesValues\\\">\\n            <ion-item>\\n              <ion-label>Full time - Pets are my life</ion-label>\\n              <ion-radio slot=\\\"end\\\" [value]=\\\"0\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Part time - Week days only</ion-label>\\n              <ion-radio slot=\\\"end\\\" [value]=\\\"1\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Part time - Friday nights & Weekends only </ion-label>\\n              <ion-radio slot=\\\"end\\\" [value]=\\\"2\\\"></ion-radio>\\n            </ion-item>\\n\\n            <ion-item>\\n              <ion-label>Casual - Sparadic</ion-label>\\n              <ion-radio slot=\\\"end\\\" [value]=\\\"3\\\"></ion-radio>\\n            </ion-item>\\n          </ion-radio-group>\\n        </div>\\n        <div\\n          *ngIf=\\\"f['enquiriesValues'].invalid && f['enquiriesValues'].errors && (f['enquiriesValues'].dirty || f['enquiriesValues'].touched)\\\"\\n          class=\\\"invalid\\\">\\n          <div *ngIf=\\\"f['enquiriesValues'].errors['required']\\\"> Enquires is required</div>\\n        </div>\\n        <div class=\\\"setting-item days\\\">\\n          <h5>Operating Days</h5>\\n          <p>Choose which days you want to be open for business and save changes</p>\\n          <ion-item *ngFor=\\\"let day of days\\\">\\n            <ion-label>{{day.label}}</ion-label>\\n            <ion-checkbox (click)=\\\"onChange(day.value)\\\" name=\\\"day\\\" [checked]=\\\"day.checked\\\">\\n            </ion-checkbox>\\n          </ion-item>\\n        </div>\\n        <!-- <div\\n          *ngIf=\\\"f['operating_days'].invalid && f['operating_days'].errors && (f['operating_days'].dirty || f['operating_days'].touched)\\\"\\n          class=\\\"invalid\\\">\\n          <div *ngIf=\\\"f['operating_days'].errors['required']\\\"> Select operating days</div>\\n        </div> -->\\n        <div class=\\\"setting-item\\\">\\n          <h5>Having a Break?</h5>\\n          <p>If you can't respond to messages for a while,switch to Away mode.</p>\\n          <ion-item>\\n            <ion-label>Away</ion-label>\\n            <ion-toggle slot=\\\"start\\\" name=\\\"blueberry\\\"  formControlName=\\\"break\\\"></ion-toggle>\\n          </ion-item>\\n        </div>\\n        <div class=\\\"setting-item\\\">\\n          <h5>Just want your regulars?</h5>\\n          <p>If you have built up enough customers,switch to only be contacted by them.</p>\\n          <ion-item>\\n            <ion-label>Repeat Customers Only</ion-label>\\n            <ion-toggle slot=\\\"start\\\" name=\\\"blueberry\\\" formControlName=\\\"regulars\\\"></ion-toggle>\\n          </ion-item>\\n        </div>\\n      </ion-list>\\n      <div class=\\\"action-btn\\\">\\n        <ion-button class=\\\"save-btn\\\" (click)=\\\"save()\\\">Save</ion-button>\\n      </div>\\n    </div>\\n  </form>\\n</ion-content>\";"]}