{"version":3,"sources":["./src/app/account-setting/account-setting.module.ts","./src/app/account-setting/account-setting.page.ts","./src/app/account-setting/account-setting.page.scss","./src/app/account-setting/account-setting.page.html"],"names":[],"mappings":"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","file":"src_app_account-setting_account-setting_module_ts-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {AccountSettingPage} from './account-setting.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AccountSettingPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        IonicModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [AccountSettingPage]\n})\nexport class AccountSettingPageModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { PetcloudApiService } from '../api/petcloud-api.service';\nimport { Storage } from '@ionic/storage';\nimport { finalize } from 'rxjs/operators';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-account-setting',\n    templateUrl: './account-setting.page.html',\n    styleUrls: ['./account-setting.page.scss'],\n})\nexport class AccountSettingPage implements OnInit {\n\n    public selectedSegment = 'cp';\n    // initialize forms\n    public changePasswordForm: FormGroup;\n    public CancelForm: FormGroup;\n    changePasswordData: any;\n\n    public cpData = {\n        ChangePasswordForm: {\n            currentPassword: '',\n            newPassword: '',\n            newPasswordConfirm: ''\n        }\n    };\n\n    cancelAccountData: any = { reason: \"\", feedback: \"\", unsubscribe: \"\" };\n    constructor(private formBuilder: FormBuilder, protected storage: Storage,\n        public api: PetcloudApiService, public navcntl: NavController) {\n    }\n\n    ionViewDidEnter() {\n\n    }\n\n    ngOnInit() {\n        this.changePasswordForm = this.formBuilder.group({\n            currentPassword: ['', [Validators.required]],\n            newPassword: ['', [Validators.required, Validators.minLength(6)]],\n            newPasswordConfirm: ['', [Validators.required]]\n        });\n\n        this.CancelForm = this.formBuilder.group({\n            reason: ['', [Validators.required]],\n            feedback: ['', [Validators.required]],\n            unsubscribe: [true]\n        });\n    }\n\n    public passwordConfirm(): boolean {\n        if (this.changePasswordForm.get('newPassword').value !== this.changePasswordForm.get('newPasswordConfirm').value) {\n            this.changePasswordForm.controls['newPasswordConfirm'].setErrors({ 'incorrect': true });\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    public changeUserPassword() {\n        // show loading\n        this.api.showLoader();\n        this.cpData.ChangePasswordForm.currentPassword = this.changePasswordForm.value.currentPassword;\n        this.cpData.ChangePasswordForm.newPassword = this.changePasswordForm.value.newPassword;\n        this.cpData.ChangePasswordForm.newPasswordConfirm = this.changePasswordForm.value.newPasswordConfirm;\n\n        this.api.changePassword(this.cpData)\n            .pipe(finalize(() => {\n                // hide loader in success\n                this.api.hideLoader();\n            }))\n            .subscribe((res: any) => {\n                if (res.success) {\n                    this.api.showToast('Password Changed Successfully', 2000, 'bottom');\n                } else {\n                    this.api.showToast('Password not changed,try again!', 2000, 'bottom');\n                }\n            }, (err) => {\n                // hide loader in error\n                this.api.autoLogout(err,this.cpData);\n            });\n    }\n\n    public cancelAccount() {\n\n        if (this.CancelForm.value.unsubscribe == \"\") {\n            this.CancelForm.value.unsubscribe = false;\n        }\n        this.api.showLoader();\n        // Send Cancel Account Data Form to Server\n        this.cancelAccountData.feedback = this.CancelForm.value.feedback;\n        this.cancelAccountData.reason = this.CancelForm.value.reason;\n        this.cancelAccountData.unsubscribe = this.CancelForm.value.unsubscribe;\n\n        this.api.cancelAccount(this.cancelAccountData).pipe(finalize(() => {\n            this.api.hideLoader();\n        })).subscribe((res: any) => {\n            if (res.success) {\n                this.navcntl.navigateRoot('/login')\n                this.api.showToast('Account Cancelled Successfully', 2000, 'bottom');\n            } else {\n                this.api.showToast('Account Not Cancelled!', 2000, 'bottom');\n            }\n        }, (err) => {\n          this.api.autoLogout(err,this.cancelAccountData);\n        });\n    }    \n}\n","export default \".select-text {\\n  white-space: pre-line !important;\\n}\\n\\n.input-form {\\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2);\\n  border-radius: 8px;\\n  padding: 16px 0px 0px;\\n  overflow: hidden;\\n  margin: 16px;\\n}\\n\\n.footer-btn {\\n  --border-radius: 0px 0px 8px 8px;\\n  height: 50px;\\n  --padding-bottom: 0px;\\n  width: 100%;\\n  margin-top: 14px;\\n  --box-shadow: none;\\n}\\n\\n.error {\\n  margin-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQtc2V0dGluZy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQ0FBQTtBQUNGOztBQUNBO0VBQ0Usd0NBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FBRUY7O0FBQUE7RUFDRSxnQ0FBQTtFQUNBLFlBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FBR0Y7O0FBREE7RUFDRSxpQkFBQTtBQUlGIiwiZmlsZSI6ImFjY291bnQtc2V0dGluZy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VsZWN0LXRleHQge1xuICB3aGl0ZS1zcGFjZTogcHJlLWxpbmUgIWltcG9ydGFudDtcbn1cbi5pbnB1dC1mb3JtIHtcbiAgYm94LXNoYWRvdzogMCAwIDhweCAwIHJnYigwIDAgMCAvIDIwJSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogMTZweCAwcHggMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW46IDE2cHg7XG59XG4uZm9vdGVyLWJ0biB7XG4gIC0tYm9yZGVyLXJhZGl1czogMHB4IDBweCA4cHggOHB4O1xuICBoZWlnaHQ6IDUwcHg7XG4gIC0tcGFkZGluZy1ib3R0b206IDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDE0cHg7XG4gIC0tYm94LXNoYWRvdzogbm9uZTtcbn1cbi5lcnJvciB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufSJdfQ== */\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button  defaultHref=\\\"home/tabs/profile-menu\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Account Setting</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-segment scrollable [(ngModel)]=\\\"selectedSegment\\\" color=\\\"theme\\\">\\n        <ion-segment-button class=\\\"ion-text-capitalize\\\" value=\\\"cp\\\">Change Password</ion-segment-button>\\n        <ion-segment-button class=\\\"ion-text-capitalize\\\" value=\\\"cncl_account\\\">Cancel Account</ion-segment-button>\\n    </ion-segment>\\n    <div [ngSwitch]=\\\"selectedSegment\\\">\\n        <div class=\\\"input-form\\\" *ngSwitchCase=\\\"'cp'\\\">\\n            <form padding [formGroup]=\\\"changePasswordForm\\\">\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Current Password</ion-label>\\n                    <ion-input type=\\\"password\\\" formControlName=\\\"currentPassword\\\"\\n                        placeholder=\\\"Password\\\"></ion-input>\\n                </ion-item>\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                    *ngIf=\\\"changePasswordForm.get('currentPassword').hasError('required') && (changePasswordForm.get('currentPassword').touched || changePasswordForm.get('currentPassword').dirty)\\\"\\n                >\\n                    Please enter current password\\n                </ion-text>\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                    *ngIf=\\\"changePasswordForm.get('currentPassword').hasError('minlength') && (changePasswordForm.get('currentPassword').touched || changePasswordForm.get('currentPassword').dirty)\\\"\\n                >\\n                    Minimum 6 character long current password is required\\n                </ion-text>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">New Password</ion-label>\\n                    <ion-input type=\\\"password\\\" formControlName=\\\"newPassword\\\"\\n                        placeholder=\\\"New Password\\\"></ion-input>\\n                </ion-item>\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                    *ngIf=\\\"changePasswordForm.get('newPassword').hasError('required') && (changePasswordForm.get('newPassword').touched || changePasswordForm.get('newPassword').dirty)\\\"\\n                >\\n                    Please enter new password\\n                </ion-text>\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                    *ngIf=\\\"changePasswordForm.get('newPassword').hasError('minlength') && (changePasswordForm.get('newPassword').touched || changePasswordForm.get('newPassword').dirty)\\\"\\n                >\\n                    Minimum 6 character long new password is required\\n                </ion-text>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Confirm New password</ion-label>\\n                    <ion-input type=\\\"password\\\" formControlName=\\\"newPasswordConfirm\\\"\\n                        placeholder=\\\"Password\\\"></ion-input>\\n                </ion-item>\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                    *ngIf=\\\"changePasswordForm.get('newPasswordConfirm').hasError('required') && (changePasswordForm.get('newPasswordConfirm').touched || changePasswordForm.get('newPasswordConfirm').dirty)\\\"\\n                >\\n                    Please enter confirm new password\\n                </ion-text>\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                    *ngIf=\\\"changePasswordForm.get('newPasswordConfirm').hasError('minlength') && (changePasswordForm.get('newPasswordConfirm').touched || changePasswordForm.get('newPasswordConfirm').dirty)\\\"\\n                >\\n                    Minimum 6 character long confirm new password is required\\n                </ion-text>\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                    *ngIf=\\\"passwordConfirm() && changePasswordForm.get('newPasswordConfirm').value != ''\\\">\\n                    Password doesn't matched!\\n                </ion-text>\\n                <ion-button class=\\\"footer-btn\\\" color=\\\"theme\\\" [disabled]=\\\"!changePasswordForm.valid\\\"\\n                    (click)=\\\"changeUserPassword()\\\">\\n                    Save\\n                </ion-button>\\n            </form>\\n        </div>\\n        <div class=\\\"input-form\\\" *ngSwitchCase=\\\"'cncl_account'\\\">\\n            <form [formGroup]=\\\"CancelForm\\\" padding>\\n                <ion-list>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\">Reason</ion-label>\\n                        <ion-select class=\\\"fs-14 ion-text-wrap\\\" interface=\\\"action-sheet\\\" formControlName=\\\"reason\\\"\\n                            placeholder=\\\"Select One\\\">\\n                            <ion-select-option value=\\\"kennelFound\\\">I Found a Kennel\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"sitterFound\\\">I found a Professional Sitter\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"familyFriendFound\\\">I found a friend or Family Member\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"plansChanged\\\">My plans changed and I no longer needed a sitter\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"externalBooking\\\">I booked with a PetCloud sitter,but not through\\n                                the site\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"minderUnavailable\\\">The minder was not\\n                                available for my dates\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"poorMinderSpace\\\">The minder and their\\n                                house or experience was not as described in their profile\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"badPetRelations\\\">The minder's pet didn't get along with my pet\\n                            </ion-select-option>\\n                            <ion-select-option class=\\\"fs-14 ion-text-wrap\\\" value=\\\"tooSlow\\\">The minder was just too slow\\n                            </ion-select-option>\\n                            <ion-select-option value=\\\"other\\\">Other</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                </ion-list>\\n\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\" *ngIf=\\\"CancelForm.get('reason').hasError('required') &&\\n                (CancelForm.get('reason').touched || CancelForm.get('reason').dirty)\\\">\\n                    Please select reason.\\n                </ion-text>\\n\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Additional Feedback</ion-label>\\n                    <ion-textarea class=\\\"ion-text-wrap\\\" rows=\\\"3\\\"\\n                    formControlName=\\\"feedback\\\"  placeholder=\\\"Please provide additional feedback that might be helpful to us to help us\\\">\\n                    </ion-textarea>\\n                </ion-item>\\n\\n                <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\" *ngIf=\\\"CancelForm.get('feedback').hasError('required') &&\\n                (CancelForm.get('feedback').touched || CancelForm.get('feedback').dirty)\\\">\\n                    Please Give Additional Feedback.\\n                </ion-text>\\n\\n                <ion-item lines=\\\"full\\\">\\n                    <ion-label class=\\\"ion-text-wrap\\\">Please Send me SMS Notifications</ion-label>\\n                    <ion-checkbox formControlName=\\\"unsubscribe\\\" slot=\\\"end\\\"></ion-checkbox>\\n                </ion-item>\\n                \\n                <ion-button class=\\\"footer-btn\\\" color=\\\"theme\\\" (click)=\\\"cancelAccount()\\\"  [disabled]=\\\"!CancelForm.valid\\\">\\n                    Save\\n                </ion-button>\\n            </form>\\n        </div>\\n    </div>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}