{"version":3,"sources":["webpack:///node_modules/@ionic-super-tabs/core/dist/esm/super-tab_3.entry.js"],"names":["superTabComponentCss","SuperTabComponent","hostRef","r","checkIonContent","noScroll","ionContentEl","el","querySelector","parentElement","scrollHeight","clientHeight","ionContent","getScrollElement","h","g","style","superTabsComponentCss","maxInitRetries","SuperTabsComponent","activeTabIndex","_config","D","initAttempts","initPromise","Promise","resolve","initPromiseResolve","tabChange","c","config","Object","assign","container","toolbar","index","animate","emit","debug","lastIndex","setActiveTabIndex","setActiveTab","emitTabChangeEvent","setConfig","setSelectedTab","reindexTabs","indexChildren","shadowRoot","addEventListener","onSlotchange","bind","requestAnimationFrame","initComponent","propagateConfig","setupEventListeners","componentOnReady","onContainerSelectedTabChange","onContainerActiveTabChange","onToolbarButtonClick","ev","detail","newIndex","oldIndex","changed","selectTab","vals","d","H","name","superTabsContainerComponentCss","SuperTabsContainerComponent","swipeEnabled","autoScrollTop","tabs","isDragging","leftThreshold","rightThreshold","scrollWidth","width","activeTabIndexChange","selectedTabIndexChange","queue","updateWidth","indexTabs","slot","onSlotChange","length","scrollX","indexToPosition","moveContainer","s","nativeSmoothScroll","transitionDuration","scroll","_activeTabIndex","scrollToTop","moveContainerByIndex","updateActiveTabIndex","undefined","current","getRootScrollableEl","_selectedTabIndex","avoidElements","avoid","element","target","getAttribute","coords","p","vw","x","shortSwipeDuration","initialTimestamp","initialCoords","lastPosX","stopImmediatePropagation","preventDefault","Math","abs","y","allowElementScroll","deltaX","max","min","scrollLeft","floor","round","positionToIndex","updateSelectedTabIndex","deltaTime","shortSwipe","shortSwipeDelta","selectedTabIndex","calcSelectedTab","expectedTabIndex","normalizeSelectedTab","boundingRect","getBoundingClientRect","Array","from","querySelectorAll","all","map","t","ready","sideMenu","sideMenuThreshold","then","tabWidth","tabIndex"],"mappings":"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","file":"node_modules_ionic-super-tabs_core_dist_esm_super-tab_3_entry_js-es5.js","sourcesContent":["import { r as registerInstance, h, g as getElement, c as createEvent, H as Host, d as getContext } from './index-a34c410e.js';\nimport { D as DEFAULT_CONFIG, d as debugLog, s as scrollEl, a as getTs, c as checkGesture, p as pointerCoord } from './utils-640d2cf5.js';\n\nconst superTabComponentCss = \":host{height:var(--super-tab-height, 100%);position:relative;display:block;overflow-x:hidden;overflow-y:auto;contain:size style;z-index:1;-ms-flex-negative:0;flex-shrink:0;-ms-flex-positive:0;flex-grow:0;width:var(--super-tab-width, 100vw);-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-order:-1;order:-1;-webkit-user-select:none;-webkit-touch-callout:none;-webkit-text-size-adjust:none;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);-webkit-font-smoothing:antialiased}:host[noScroll]{overflow-y:hidden}ion-nav,ion-content{height:100%;max-height:100%;position:absolute}ion-nav>.ion-page,ion-content>.ion-page{position:absolute}\";\n\nclass SuperTabComponent {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    componentDidLoad() {\n        this.checkIonContent();\n    }\n    componentDidUpdate() {\n        // check for ion-content after update, in case it was dynamically loaded\n        this.checkIonContent();\n    }\n    /**\n     * Check if we have an ion-content as a child and update the `noScroll` property\n     * if it's not set yet.\n     */\n    checkIonContent() {\n        if (typeof this.noScroll !== 'boolean') {\n            const ionContentEl = this.el.querySelector('ion-content');\n            if (ionContentEl && ionContentEl.parentElement === this.el) {\n                this.noScroll = true;\n            }\n        }\n    }\n    /**\n     * Returns the root scrollable element\n     */\n    async getRootScrollableEl() {\n        if (!this.noScroll && this.el.scrollHeight > this.el.clientHeight) {\n            return this.el;\n        }\n        const ionContent = this.el.querySelector('ion-content');\n        if (ionContent) {\n            return ionContent.getScrollElement();\n        }\n        if (this.noScroll) {\n            return null;\n        }\n        return this.el;\n    }\n    render() {\n        return h(\"slot\", null);\n    }\n    get el() { return getElement(this); }\n}\nSuperTabComponent.style = superTabComponentCss;\n\nconst superTabsComponentCss = \":host{height:100%;max-height:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden;z-index:1;position:relative;contain:layout size style;-ms-flex-order:-1;order:-1;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-webkit-text-size-adjust:none;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);-webkit-font-smoothing:antialiased;-ms-touch-action:none;touch-action:none;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}\";\n\nconst maxInitRetries = 1e3;\n/**\n * Root component that controls the other super-tab components.\n *\n * This component propagates configuration over to children and keeps track of the tabs state.\n */\nclass SuperTabsComponent {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Initial active tab index.\n         * Defaults to `0`.\n         *\n         * @type {number}\n         */\n        this.activeTabIndex = 0;\n        this._config = DEFAULT_CONFIG;\n        this.initAttempts = 0;\n        this.initPromise = new Promise((resolve) => {\n            this.initPromiseResolve = resolve;\n        });\n        this.tabChange = createEvent(this, \"tabChange\", 7);\n    }\n    /**\n     * Set/update the configuration\n     * @param {SuperTabsConfig} config Configuration object\n     */\n    async setConfig(config) {\n        this._config = Object.assign(Object.assign({}, DEFAULT_CONFIG), config);\n    }\n    propagateConfig() {\n        this.container && (this.container.config = this._config);\n        this.toolbar && (this.toolbar.config = this._config);\n    }\n    /**\n     * Set the selected tab.\n     * This will move the container and the toolbar to the selected tab.\n     * @param index {number} the index of the tab you want to select\n     * @param [animate=true] {boolean} whether you want to animate the transition\n     * @param [emit=true] {boolean} whether you want to emit tab change event\n     */\n    async selectTab(index, animate = true, emit = true) {\n        this.debug('selectTab', index, animate);\n        await this.initPromise;\n        const lastIndex = this.activeTabIndex;\n        if (this.container) {\n            await this.container.setActiveTabIndex(index, true, animate);\n        }\n        if (this.toolbar) {\n            await this.toolbar.setActiveTab(index, true, animate);\n        }\n        if (emit) {\n            this.emitTabChangeEvent(index, lastIndex);\n        }\n        this.activeTabIndex = lastIndex;\n    }\n    async onConfigChange(config) {\n        await this.setConfig(config);\n    }\n    onWindowResize() {\n        this.debug('onWindowResize');\n        this.toolbar && this.toolbar.setSelectedTab(this.activeTabIndex);\n        this.container.reindexTabs();\n    }\n    async componentWillLoad() {\n        if (this.config) {\n            await this.setConfig(this.config);\n        }\n    }\n    componentDidLoad() {\n        this.debug('componentDidLoad');\n        // index children\n        this.indexChildren();\n        // set the selected tab so the toolbar & container are aligned and in sync\n        if (this.container) {\n            this.container.setActiveTabIndex(this.activeTabIndex, true, false);\n        }\n        if (this.toolbar) {\n            this.toolbar.setActiveTab(this.activeTabIndex, true, false);\n        }\n        // listen to `slotchange` event to detect any changes in children\n        this.el.shadowRoot.addEventListener('slotchange', this.onSlotchange.bind(this));\n        requestAnimationFrame(() => {\n            this.initComponent();\n        });\n    }\n    initComponent() {\n        if (!this.container) {\n            if (++this.initAttempts <= maxInitRetries) {\n                requestAnimationFrame(() => {\n                    this.initComponent();\n                });\n                return;\n            }\n            else {\n                this.debug(`container still doesn't exists after ${maxInitRetries} frames`);\n            }\n        }\n        if (this.container) {\n            this.container.setActiveTabIndex(this.activeTabIndex, true, false);\n        }\n        if (this.toolbar) {\n            this.toolbar.setActiveTab(this.activeTabIndex, true);\n        }\n        this.propagateConfig();\n        this.setupEventListeners();\n        this.initPromiseResolve();\n    }\n    /**\n     * Setup event listeners to synchronize child components\n     */\n    async setupEventListeners() {\n        if (this.container) {\n            await this.container.componentOnReady();\n            this.el.addEventListener('selectedTabIndexChange', this.onContainerSelectedTabChange.bind(this));\n            this.el.addEventListener('activeTabIndexChange', this.onContainerActiveTabChange.bind(this));\n        }\n        else {\n            this.debug('setupEventListeners: container does not exist');\n        }\n        if (this.toolbar) {\n            await this.toolbar.componentOnReady();\n            this.el.addEventListener('buttonClick', this.onToolbarButtonClick.bind(this));\n        }\n        else {\n            this.debug('setupEventListeners: toolbar does not exist');\n        }\n    }\n    async onContainerSelectedTabChange(ev) {\n        this.debug('onContainerSelectedTabChange called with: ', ev);\n        if (this.toolbar) {\n            await this.toolbar.setSelectedTab(ev.detail);\n        }\n    }\n    emitTabChangeEvent(newIndex, oldIndex) {\n        if (typeof newIndex !== 'number' || newIndex < 0) {\n            return;\n        }\n        if (typeof oldIndex !== 'number' || oldIndex < 0) {\n            oldIndex = this.activeTabIndex;\n        }\n        this.tabChange.emit({\n            changed: newIndex !== oldIndex,\n            index: newIndex,\n        });\n    }\n    onContainerActiveTabChange(ev) {\n        this.debug('onContainerActiveTabChange', ev);\n        const index = ev.detail;\n        this.emitTabChangeEvent(index);\n        this.activeTabIndex = index;\n        this.toolbar && this.toolbar.setActiveTab(index, true, true);\n    }\n    onToolbarButtonClick(ev) {\n        this.debug('onToolbarButtonClick', ev);\n        const { index } = ev.detail;\n        this.container && this.container.setActiveTabIndex(index, true, true);\n        this.emitTabChangeEvent(index);\n        this.activeTabIndex = index;\n    }\n    indexChildren() {\n        this.debug('indexChildren');\n        const container = this.el.querySelector('super-tabs-container');\n        const toolbar = this.el.querySelector('super-tabs-toolbar');\n        if (container && this.container !== container) {\n            this.container = container;\n        }\n        if (toolbar && this.toolbar !== toolbar) {\n            this.toolbar = toolbar;\n        }\n        this.propagateConfig();\n    }\n    async onSlotchange() {\n        // re-index the child components\n        this.indexChildren();\n        // reselect the current tab to ensure that we're on the correct tab\n        this.selectTab(this.activeTabIndex, true, false);\n    }\n    /**\n     * Internal method to output values in debug mode.\n     */\n    debug(...vals) {\n        debugLog(this._config, 'tabs', vals);\n    }\n    render() {\n        // Render 3 slots\n        // Top & bottom slots allow the toolbar position to be configurable via slots.\n        // The nameless slot is used to hold the `super-tabs-container`.\n        return (h(Host, null, h(\"slot\", { name: \"top\" }), h(\"slot\", null), h(\"slot\", { name: \"bottom\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"config\": [\"onConfigChange\"]\n    }; }\n}\nSuperTabsComponent.style = superTabsComponentCss;\n\nconst superTabsContainerComponentCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;min-width:100%;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;width:var(--super-tab-width, 100vw);height:var(--super-tab-height, 100%);overflow:hidden;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);-ms-touch-action:pan-y;touch-action:pan-y;-moz-user-select:none;-ms-user-select:none;user-select:none;will-change:scroll-position;-ms-flex-order:-1;order:-1;-webkit-user-select:none;-webkit-touch-callout:none;-webkit-text-size-adjust:none;-webkit-tap-highlight-color:rgba(0, 0, 0, 0);-webkit-font-smoothing:antialiased}\";\n\nclass SuperTabsContainerComponent {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Enable/disable swiping\n         */\n        this.swipeEnabled = true;\n        /**\n         * Set to true to automatically scroll to the top of the tab when the button is clicked while the tab is\n         * already selected.\n         */\n        this.autoScrollTop = false;\n        this.tabs = [];\n        this.isDragging = false;\n        this.leftThreshold = 0;\n        this.rightThreshold = 0;\n        this.scrollWidth = 0;\n        this.width = 0;\n        this.activeTabIndexChange = createEvent(this, \"activeTabIndexChange\", 7);\n        this.selectedTabIndexChange = createEvent(this, \"selectedTabIndexChange\", 7);\n        this.queue = getContext(this, \"queue\");\n    }\n    async componentDidLoad() {\n        this.debug('componentDidLoad');\n        this.updateWidth();\n        await this.indexTabs();\n        this.slot = this.el.shadowRoot.querySelector('slot');\n        this.slot.addEventListener('slotchange', this.onSlotChange.bind(this));\n    }\n    async onSlotChange() {\n        this.debug('onSlotChange', this.tabs.length);\n        this.updateWidth();\n        this.indexTabs();\n    }\n    async componentDidRender() {\n        this.updateWidth();\n    }\n    /**\n     * @internal\n     */\n    async reindexTabs() {\n        this.updateWidth();\n        await this.indexTabs();\n    }\n    /**\n     * @internal\n     *\n     * Moves the container to align with the specified tab index\n     * @param index {number} Index of the tab\n     * @param animate {boolean} Whether to animate the transition\n     */\n    moveContainerByIndex(index, animate) {\n        const scrollX = this.indexToPosition(index);\n        if (scrollX === 0 && index > 0) {\n            return Promise.resolve();\n        }\n        return this.moveContainer(scrollX, animate);\n    }\n    /**\n     * @internal\n     *\n     * Sets the scrollLeft property of the container\n     * @param scrollX {number}\n     * @param animate {boolean}\n     */\n    moveContainer(scrollX, animate) {\n        if (animate) {\n            scrollEl(this.el, scrollX, 0, this.config.nativeSmoothScroll, this.config.transitionDuration);\n        }\n        else {\n            this.el.scroll(scrollX, 0);\n        }\n        return Promise.resolve();\n    }\n    /** @internal */\n    async setActiveTabIndex(index, moveContainer = true, animate = true) {\n        this.debug('setActiveTabIndex', index);\n        if (this._activeTabIndex === index) {\n            if (!this.autoScrollTop) {\n                return;\n            }\n            this.scrollToTop();\n        }\n        if (moveContainer) {\n            this.moveContainerByIndex(index, animate);\n        }\n        this.updateActiveTabIndex(index, false);\n    }\n    /**\n     * Scroll the active tab to the top.\n     */\n    async scrollToTop() {\n        if (this._activeTabIndex === undefined || this.tabs === undefined) {\n            this.debug('scrollToTop', 'activeTabIndex or tabs was undefined', this._activeTabIndex, this.tabs);\n            return;\n        }\n        const current = this.tabs[this._activeTabIndex];\n        if (!current) {\n            this.debug('Current active tab was undefined in scrollToTop');\n            return;\n        }\n        const el = await current.getRootScrollableEl();\n        if (el) {\n            scrollEl(el, 0, 0, this.config.nativeSmoothScroll, this.config.transitionDuration);\n        }\n        else {\n            this.debug('scrollToTop', 'couldnt find a scrollable element');\n        }\n    }\n    updateActiveTabIndex(index, emit = true) {\n        this.debug('updateActiveTabIndex', index, emit, this._activeTabIndex);\n        this._activeTabIndex = index;\n        emit && this.activeTabIndexChange.emit(this._activeTabIndex);\n    }\n    updateSelectedTabIndex(index) {\n        if (index === this._selectedTabIndex) {\n            return;\n        }\n        this._selectedTabIndex = index;\n        this.selectedTabIndexChange.emit(this._selectedTabIndex);\n    }\n    async onTouchStart(ev) {\n        if (!this.swipeEnabled) {\n            return;\n        }\n        if (this.config.avoidElements) {\n            let avoid = false;\n            let element = ev.target;\n            if (element) {\n                do {\n                    if (typeof element.getAttribute === 'function' && element.getAttribute('avoid-super-tabs')) {\n                        return;\n                    }\n                    element = element.parentElement;\n                } while (element && !avoid);\n            }\n        }\n        const coords = pointerCoord(ev);\n        this.updateWidth();\n        const vw = this.width;\n        if (coords.x < this.leftThreshold || coords.x > vw - this.rightThreshold) {\n            // ignore this gesture, it started in the side menu touch zone\n            return;\n        }\n        if (this.config.shortSwipeDuration > 0) {\n            this.initialTimestamp = getTs();\n        }\n        this.initialCoords = coords;\n        this.lastPosX = coords.x;\n    }\n    async onClick(ev) {\n        if (this.isDragging) {\n            ev.stopImmediatePropagation();\n            ev.preventDefault();\n        }\n    }\n    async onTouchMove(ev) {\n        if (!this.swipeEnabled || !this.initialCoords || typeof this.lastPosX !== 'number') {\n            return;\n        }\n        const coords = pointerCoord(ev);\n        if (!this.isDragging) {\n            if (!checkGesture(coords, this.initialCoords, this.config)) {\n                if (Math.abs(coords.y - this.initialCoords.y) > 100) {\n                    this.initialCoords = void 0;\n                    this.lastPosX = void 0;\n                }\n                return;\n            }\n            this.isDragging = true;\n        }\n        // stop anything else from capturing these events, to make sure the content doesn't slide\n        if (!this.config.allowElementScroll) {\n            ev.stopImmediatePropagation();\n        }\n        // get delta X\n        const deltaX = this.lastPosX - coords.x;\n        if (deltaX === 0) {\n            return;\n        }\n        const scrollX = Math.max(0, Math.min(this.scrollWidth - this.width, this.el.scrollLeft + deltaX));\n        if (Math.floor(scrollX) === Math.floor(this.el.scrollLeft)) {\n            return;\n        }\n        const index = Math.round(this.positionToIndex(scrollX) * 100) / 100;\n        this.updateSelectedTabIndex(index);\n        // update last X value\n        this.lastPosX = coords.x;\n        this.el.scroll(scrollX, 0);\n    }\n    async onTouchEnd(ev) {\n        if (!this.swipeEnabled || !this.isDragging) {\n            return;\n        }\n        const coords = pointerCoord(ev);\n        const deltaTime = getTs() - this.initialTimestamp;\n        const shortSwipe = this.config.shortSwipeDuration > 0 && deltaTime <= this.config.shortSwipeDuration;\n        const shortSwipeDelta = coords.x - this.initialCoords.x;\n        let selectedTabIndex = this.calcSelectedTab();\n        const expectedTabIndex = Math.round(selectedTabIndex);\n        if (shortSwipe && expectedTabIndex === this._activeTabIndex) {\n            selectedTabIndex += shortSwipeDelta > 0 ? -1 : 1;\n        }\n        selectedTabIndex = this.normalizeSelectedTab(selectedTabIndex);\n        this.updateActiveTabIndex(selectedTabIndex);\n        this.moveContainerByIndex(selectedTabIndex, true);\n        this.isDragging = false;\n        this.initialCoords = void 0;\n        this.lastPosX = void 0;\n    }\n    updateWidth() {\n        const boundingRect = this.el.getBoundingClientRect();\n        this.width = Math.round(boundingRect.width * 10000) / 10000;\n    }\n    async indexTabs() {\n        if (this.width === 0) {\n            requestAnimationFrame(() => {\n                this.updateWidth();\n                this.indexTabs();\n            });\n            return;\n        }\n        const tabs = Array.from(this.el.querySelectorAll('super-tab'));\n        this.scrollWidth = this.width * tabs.length;\n        this.debug('indexTab', this.scrollWidth, this.width);\n        await Promise.all(tabs.map(t => t.componentOnReady()));\n        this.tabs = tabs;\n        if (this.ready && typeof this._activeTabIndex === 'number') {\n            this.moveContainerByIndex(this._activeTabIndex, true);\n        }\n        if (this.config) {\n            switch (this.config.sideMenu) {\n                case 'both':\n                    this.rightThreshold = this.leftThreshold = this.config.sideMenuThreshold || 0;\n                    break;\n                case 'left':\n                    this.leftThreshold = this.config.sideMenuThreshold || 0;\n                    break;\n                case 'right':\n                    this.rightThreshold = this.config.sideMenuThreshold || 0;\n                    break;\n            }\n        }\n        if (this._activeTabIndex !== undefined) {\n            this.moveContainerByIndex(this._activeTabIndex, false)\n                .then(() => {\n                this.ready = true;\n            });\n        }\n    }\n    calcSelectedTab() {\n        const scrollX = Math.max(0, Math.min(this.scrollWidth - this.width, this.el.scrollLeft));\n        return this.positionToIndex(scrollX);\n    }\n    positionToIndex(scrollX) {\n        const tabWidth = this.width;\n        return scrollX / tabWidth;\n    }\n    indexToPosition(tabIndex) {\n        return Math.round(tabIndex * this.width * 10000) / 10000;\n    }\n    normalizeSelectedTab(index) {\n        const scrollX = Math.max(0, Math.min(this.scrollWidth - this.width, this.indexToPosition(index)));\n        return Math.round(scrollX / this.width);\n    }\n    /**\n     * Internal method to output values in debug mode.\n     */\n    debug(...vals) {\n        debugLog(this.config, 'container', vals);\n    }\n    render() {\n        return h(\"slot\", null);\n    }\n    get el() { return getElement(this); }\n}\nSuperTabsContainerComponent.style = superTabsContainerComponentCss;\n\nexport { SuperTabComponent as super_tab, SuperTabsComponent as super_tabs, SuperTabsContainerComponent as super_tabs_container };\n"]}