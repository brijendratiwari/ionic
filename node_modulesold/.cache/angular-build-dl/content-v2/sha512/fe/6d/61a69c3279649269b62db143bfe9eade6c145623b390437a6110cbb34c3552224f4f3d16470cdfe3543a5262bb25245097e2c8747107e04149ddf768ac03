{"version":3,"sources":["./src/app/add-reminders/add-reminders.module.ts","./src/app/add-reminders/add-reminders.page.ts","./src/app/add-reminders/add-reminders.page.scss","./src/app/add-reminders/add-reminders.page.html"],"names":[],"mappings":"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","file":"src_app_add-reminders_add-reminders_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddRemindersPage } from './add-reminders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddRemindersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddRemindersPage]\n})\nexport class AddRemindersPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { PetcloudApiService } from '../api/petcloud-api.service';\nimport { User } from '../model/user';\nimport { Storage } from \"@ionic/storage\";\nimport { DatePipe } from '@angular/common';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-reminders',\n  templateUrl: './add-reminders.page.html',\n  styleUrls: ['./add-reminders.page.scss'],\n})\nexport class AddRemindersPage implements OnInit {\n\n  public addReminderForm: FormGroup;\n  public startMinDate = \"\";\n  public startMinTime: any;\n  public pets: any = [];\n  public noPetsAvailable: any;\n  public reminderTypes: any;\n\n  constructor(private formBuilder: FormBuilder,\n    public nav: NavController,\n    public storage: Storage,\n    private api: PetcloudApiService) { }\n\n  ngOnInit() {\n\n    this.startMinDate = new Date(new Date()).toISOString();\n  \n    let time = moment(new Date()).add(6, 'hours').format('hh:mm A');\n    this.startMinTime = moment(time, [\"h:mm A\"]).format(\"HH:mm\");// AEST time \n\n    \n    this.addReminderForm = this.formBuilder.group({\n      pets: [\"\",[Validators.required]],\n      date: [this.startMinDate, [Validators.required]],\n      time: [this.startMinTime, [Validators.required]],\n      reminder_type:[\"\",[Validators.required]],\n      notifi_reminder: [\"1\"],\n      alertFrequency:[\"0\"],\n      description: [\"\"]\n    });\n  }\n\n  ionViewWillEnter() {\n    this.reminders()\n    this.getPetsListing()\n  }\n\n  \n\n  public reminders() {\n    fetch('assets/JSON/reminders.json')\n      .then(res => res.json())\n      .then((data) => {\n        this.reminderTypes = data;\n      });\n  }\n\n  selectReminder(reminderType){\n\n    this.addReminderForm.patchValue({\n      reminder_type:reminderType.id\n    })\n  \n    this.reminderTypes.forEach(element => {\n      if(element.id == reminderType.id){\n        element.isSelected = true;\n      }else{\n        element.isSelected = false\n      }\n    });\n  }\n\n  selectPet(pet){\n    this.addReminderForm.patchValue({\n      pets: pet.id \n    })\n  }\n\n\n  public getPetsListing() {\n    this.storage.get(PetcloudApiService.USER).then(\n      (userData: User) => {\n\n        if (userData != null) {\n          this.api\n            .getPetList(userData.id).pipe(\n              finalize(() => {\n              })).subscribe(\n                (res: any) => {\n                  if (res.success) {\n                    if (res.pets.length) {\n                      this.noPetsAvailable = res.pets.length;\n                      this.pets = res.pets\n                    }\n                  } else {\n                    this.noPetsAvailable = 0\n                  }\n                },\n                (err: any) => {\n                  this.noPetsAvailable = 0\n                  this.api.autoLogout(err, userData.id);\n                }\n              );\n        }\n        (err: any) => {\n          this.noPetsAvailable = 0\n        }\n      }\n\n    );\n  }\n\n  addReminder() {\n\n  let startTime = moment(this.addReminderForm.value.time, 'HH:mm').format('hh:mm a');\n\n    const petReminder = {\n        PetAlerts:{\n          petId:this.addReminderForm.value.pets,\n          alertType:this.addReminderForm.value.reminder_type.toString(),\n          alertFrequency:this.addReminderForm.value.notifi_reminder,\n          alertDate:moment(this.addReminderForm.value.date).format(\"YYYY-MM-DD\"),\n          startTime,\n          reminder:this.addReminderForm.value.notifi_reminder,\n          Notes:this.addReminderForm.value.description,\n        }\n    }\n   \n\n      this.api.showLoader();\n      this.api.createReminder(petReminder).subscribe((response:any)=>{\n        this.api.hideLoader();\n          if(response.success){\n            this.api.showToast(response.message,\"3000\",\"bottom\");\n            this.nav.pop();\n          }else{\n            this.api.showToast(response.error,\"3000\",\"bottom\");\n          }\n      }),err=>{\n        this.api.autoLogout(err,petReminder);\n        console.log(\"err\", err);\n      }\n  }\n}\n","export default \"ion-button.add-reminder {\\n  margin: 0;\\n}\\n\\n.form-title {\\n  padding: 16px 0px;\\n  margin: 0;\\n  border-bottom: 1px solid #e0e0e0;\\n}\\n\\n.form-small-title {\\n  padding: 16px 0px 5px;\\n  margin: 0;\\n}\\n\\nion-item {\\n  --padding-start: 0px;\\n  --inner-padding-end: 0px;\\n}\\n\\n.bg-white {\\n  background-color: #fff;\\n}\\n\\nion-textarea {\\n  border: 1px solid #dedede;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  margin-top: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1yZW1pbmRlcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksU0FBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxTQUFBO0VBQ0EsZ0NBQUE7QUFDSjs7QUFDQTtFQUNJLHFCQUFBO0VBQ0EsU0FBQTtBQUVKOztBQUFBO0VBQ0ksb0JBQUE7RUFDQSx3QkFBQTtBQUdKOztBQWlCQTtFQUNJLHNCQUFBO0FBZEo7O0FBaUJBO0VBQ0kseUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFkSiIsImZpbGUiOiJhZGQtcmVtaW5kZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1idXR0b24uYWRkLXJlbWluZGVyIHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi5mb3JtLXRpdGxle1xuICAgIHBhZGRpbmc6IDE2cHggMHB4O1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMFxufVxuLmZvcm0tc21hbGwtdGl0bGV7XG4gICAgcGFkZGluZzogMTZweCAwcHggNXB4O1xuICAgIG1hcmdpbjogMDtcbn1cbmlvbi1pdGVtIHtcbiAgICAtLXBhZGRpbmctc3RhcnQ6IDBweDtcbiAgICAtLWlubmVyLXBhZGRpbmctZW5kOiAwcHg7XG59XG5cbi8vIC5jaGlwc3tcbi8vICAgICBpb24tY2hpcHtcbi8vICAgICAgICAgbWluLXdpZHRoOiA4MHB4O1xuLy8gICAgICAgICBoZWlnaHQ6IDMwcHg7XG4vLyAgICAgICAgIC0tYm9yZGVyLXJhZGl1czogOHB4O1xuLy8gICAgICAgICBtYXJnaW46IDEwcHggOHB4IDBweCAwcHg7XG4vLyAgICAgICAgIGJhY2tncm91bmQ6ICNlOWViZWQ7XG4vLyAgICAgICAgIGNvbG9yOiAjNzY3ZDgzO1xuLy8gICAgICAgICAmLmlvbi1jb2xvci10aGVtZXtcbi8vICAgICAgICAgICAgIC8vIGJvcmRlci1jb2xvcjogIzUyQzRCRTtcbi8vICAgICAgICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuLy8gICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZlNDE2NDtcbi8vICAgICAgICAgfVxuLy8gICAgIH1cbiAgICBcbi8vIH1cblxuLmJnLXdoaXRle1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbmlvbi10ZXh0YXJlYSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RlZGVkZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home/tabs/sitter-listing\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Create Reminder</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"addReminderForm\\\">\\n    <h5 class=\\\"form-title\\\">\\n      Remind Me to <small class=\\\"error\\\">*</small>\\n    </h5>\\n    <!-- <h5 class=\\\"form-small-title\\\">\\n      Type <small class=\\\"error\\\">*</small>\\n    </h5> -->\\n    <ion-item>\\n      <ion-label  position=\\\"stacked\\\">Type <small class=\\\"error\\\">*</small></ion-label>\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Select your reminder type\\\"  formControlName=\\\"reminder_type\\\">\\n        <ion-select-option [value]=\\\"type.id\\\" *ngFor=\\\"let type of reminderTypes\\\" >{{type?.serviceName}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <!-- <div class=\\\"chips\\\">\\n      <ion-chip (click)=\\\"selectReminder(type)\\\" *ngFor=\\\"let type of reminderTypes\\\"\\n      [color]=\\\"type.isSelected == false ? '' : 'theme'\\\"\\n      >\\n      <ion-label>{{type?.serviceName}} </ion-label>\\n    </ion-chip>\\n    </div> -->\\n    <h5 class=\\\"form-small-title\\\">\\n      Schedule <small class=\\\"error\\\">*</small>\\n    </h5>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Start Date<small class=\\\"error\\\"></small></ion-label>\\n      <ion-datetime display-format=\\\"DDD DD MMM YYYY\\\" max=\\\"2024-12-31\\\" [min]=\\\"startMinDate\\\" picker-format=\\\"DD/MMM/YYYY\\\"\\n        placeholder=\\\"Thu 16 Jan 2019\\\" formControlName=\\\"date\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Start Time<small class=\\\"error\\\"></small></ion-label>\\n      <ion-datetime display-format=\\\"HH:mm\\\" picker-format=\\\"HH:mm\\\" placeholder=\\\"11:20 AM\\\" formControlName=\\\"time\\\">\\n      </ion-datetime>\\n    </ion-item>\\n  \\n  \\n    <div *ngIf=\\\"!pets.length\\\">\\n      <ion-text class=\\\"error\\\" routerLink=\\\"/pet-add\\\">No Pets Added. Please Add Pet <span class=\\\"link-contrast\\\"> (Click\\n          Here)*</span></ion-text>\\n    </div>\\n\\n    <h5 *ngIf=\\\"pets.length\\\" class=\\\"form-small-title\\\">\\n      Pets <small class=\\\"error\\\">*</small>\\n    </h5>\\n\\n    <div class=\\\"petList\\\">\\n      <ion-list>\\n        <ion-radio-group>\\n          <ion-item lines=\\\"full\\\" *ngFor=\\\"let pet of pets; let i=index\\\">\\n            <ion-avatar slot=\\\"start\\\" class=\\\"petProfile\\\">\\n              <ion-img [src]=\\\"pet.imagename == '' || pet.imagename == null  ? \\n            'https://dev.petcloud.com.au/img/pet_placeholder.png' \\n            : pet?.imagename\\\"></ion-img>\\n            </ion-avatar>\\n            <ion-label>{{pet?.name}}</ion-label>\\n            <ion-radio (click)=\\\"selectPet(pet)\\\" slot=\\\"end\\\" color=\\\"theme\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n      <ion-text *ngIf=\\\"addReminderForm.get('pets').hasError('required') && addReminderForm.get('pets').touched\\\"\\n        lines=\\\"none\\\" class=\\\"animated fadeInUp\\\">\\n        <p class=\\\"error\\\">Please select Pets </p>\\n      </ion-text>\\n    </div>\\n    <ion-item>\\n      <ion-label  position=\\\"stacked\\\">Reminder Frequency</ion-label>\\n      <ion-select value=\\\"6\\\" interface=\\\"action-sheet\\\" placeholder=\\\"Select your reminder frequency\\\" formControlName=\\\"alertFrequency\\\">\\n\\n        <ion-select-option value=\\\"0\\\">Weekly</ion-select-option>\\n        <ion-select-option value=\\\"1\\\">Fortnightly</ion-select-option>\\n        <ion-select-option value=\\\"2\\\">Monthy</ion-select-option>\\n        <ion-select-option value=\\\"3\\\">Quarterly</ion-select-option>\\n        <ion-select-option value=\\\"4\\\">Half-yearly</ion-select-option>\\n        <ion-select-option value=\\\"5\\\">Yearly</ion-select-option>\\n        <ion-select-option value=\\\"6\\\">Once Off</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Notification Reminder</ion-label>\\n      <ion-select interface=\\\"action-sheet\\\" color=\\\"theme\\\" formControlName=\\\"notifi_reminder\\\"\\n        placeholder=\\\"Select your reminder notification\\\">\\n        <ion-select-option value=\\\"1\\\">Send before a hour</ion-select-option>\\n        <ion-select-option value=\\\"2\\\">Send at a time</ion-select-option>\\n        <ion-select-option value=\\\"3\\\">Send one day before</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Notes</ion-label>\\n      <ion-textarea rows=\\\"3\\\" formControlName=\\\"description\\\" placeholder=\\\"Enter description\\\">\\n      </ion-textarea>\\n    </ion-item>\\n  </form>\\n</ion-content>\\n\\n\\n<ion-footer class=\\\"bg-white\\\">\\n  <ion-button\\n    class=\\\"add-reminder footer-btn\\\" \\n    expand=\\\"full\\\" \\n    (click)=\\\"addReminder()\\\"\\n    [disabled]=\\\"!addReminderForm.valid\\\"\\n  >\\n    Create</ion-button>\\n</ion-footer>\";"],"sourceRoot":"webpack:///"}