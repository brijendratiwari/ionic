{"version":3,"sources":["./src/app/profile/basic-info/basic-info.module.ts","./src/app/profile/basic-info/basic-info.page.ts","./src/app/profile/basic-info/basic-info.page.scss","./src/app/profile/basic-info/basic-info.page.html"],"names":[],"mappings":"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","file":"src_app_profile_basic-info_basic-info_module_ts-es2015.js","sourcesContent":["import {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\nimport {IonicModule} from '@ionic/angular';\nimport {BasicInfoPage} from './basic-info.page';\nimport {GooglePlaceModule} from 'ngx-google-places-autocomplete';\nimport { LocationAccuracy } from '@ionic-native/location-accuracy/ngx';\nconst routes: Routes = [\n    {\n        path: '',\n        component: BasicInfoPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        IonicModule,\n        GooglePlaceModule,\n        RouterModule.forChild(routes),\n        /*AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyA6PHeobaARhtYsbr5Hu8WiXWWJb0kcelc',\n            libraries: ['places']\n        }),*/\n    ],\n    providers:[LocationAccuracy],\n    declarations: [BasicInfoPage],\n    schemas: [NO_ERRORS_SCHEMA]\n})\nexport class BasicInfoPageModule {\n}\n","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\nimport { PetcloudApiService } from './../../api/petcloud-api.service';\nimport { Router } from '@angular/router';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Storage } from '@ionic/storage';\nimport { User } from '../../model/user';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete/ngx-google-places-autocomplete.directive';\nimport { NavController, ModalController, Platform } from '@ionic/angular';\n// import model files\nimport { ApiResponse } from '../../model/api-response';\nimport { finalize } from 'rxjs/operators';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { LocationAccuracy } from '@ionic-native/location-accuracy/ngx';\nimport { Diagnostic } from '@ionic-native/diagnostic/ngx';\nimport { InfomodelComponent } from '../../components/infomodel/infomodel.component';\nimport { AppsFlyerService } from '../../../app/apps-flyer.service';\nimport { Events } from 'src/app/events';\n\n\n@Component({\n    selector: 'app-basic-info',\n    templateUrl: './basic-info.page.html',\n    styleUrls: ['./basic-info.page.scss'],\n})\nexport class BasicInfoPage implements OnInit {\n\n    public profileForm: FormGroup;\n    public gender: any;\n    public imageSrc: String = '';\n    public isNDISParticant: boolean = false;\n    requestForGPSPremission: boolean = true;\n\n    @ViewChild('places') places: GooglePlaceDirective;\n    @ViewChild('search') public searchElement: ElementRef;\n    public lat = \"\"\n    public lng = \"\";\n    public userData: User;\n    public showManagerEmail: boolean = false;\n\n    options = {\n        types: ['(regions)'],\n        componentRestrictions: { country: \"AU\" },\n        bounds: null,\n        fields: null,\n        strictBounds: null,\n        origin: null\n    };\n\n\n    constructor(public api: PetcloudApiService, private formBuilder: FormBuilder,\n        public EPEvent: Events,\n        public geoLocation: Geolocation,\n        protected router: Router, protected storage: Storage,\n        private diagnostic: Diagnostic,\n        private locationAccuracy: LocationAccuracy,\n        public modalCtrl: ModalController,\n        public appsFlyerAnalytics: AppsFlyerService,\n        protected navCtrl: NavController,\n        public platform: Platform,) {\n\n    }\n\n    ngOnInit() {\n        this.profileForm = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n            first_name: ['', [Validators.required]],\n            last_name: ['', [Validators.required]],\n            gender: [''],\n            user_type: ['', [Validators.required]],\n            dob: ['', [Validators.required]],\n            street_address: ['', [Validators.required]],\n            address: ['', [Validators.required]],\n            state: ['', [Validators.required]],\n            zipcode: ['', [Validators.required]],\n            mobile: ['', [Validators.required, Validators.pattern(/^(\\+61)[0-9]{9}$/)]],\n            phone: [''],\n            ndis_participant: [false],\n            plan_managed: ['1'],\n            plan_manager_email: ['']\n        });\n    }\n\n    ionViewDidEnter() {\n        // fill up form with already stored value by user profile\n        this.getUserProfileBasicInfo();\n    }\n\n\n    //Check if application having Location Authorization\n    async isLocationAuthorized() {\n        await this.platform.ready();\n        this.diagnostic.isLocationEnabled().then((isEnabled: any) => {\n            if (isEnabled) {\n                this.diagnostic.isLocationAuthorized().then((success: any) => {\n                    if (success) {\n                        this.requestForGPSPremission = true;\n                        this.getLocationAccuracy();\n                    } else {\n                        this.requestForGPSPremission = false;\n                    }\n                }, err => {\n                })\n            } else {\n                this.requestForGPSPremission = false;\n            }\n\n        }, err => {\n        })\n    }\n\n    async getLocationAccuracy() {\n        await this.platform.ready();\n        this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(\n            (response_gps) => {\n                // When GPS Turned ON call method to get Accurate location coordinates\n                this.getCurrentLocation();\n            },\n            error => {\n            }\n        );\n    }\n\n    async getCurrentLocation() {\n        await this.geoLocation.getCurrentPosition().then(async (resp) => {\n\n            this.lat = await resp.coords.latitude.toString()\n            this.lng = await resp.coords.longitude.toString();\n\n            await this.api.getSuburb(this.lat, this.lng).subscribe(async (response: any) => {\n                this.profileForm.patchValue({\n                    address: response.locality\n                })\n            }, async err => {\n\n            })\n        });\n    }\n\n    public saveBasicProfile() {\n\n        this.profileForm.value.lat = this.lat;\n        this.profileForm.value.lng = this.lng;\n\n        if (!this.profileForm.value.ndis_participant) {\n            this.profileForm.value.ndis_participant = 0\n            this.profileForm.value.plan_managed = \"\"\n            this.profileForm.value.plan_manager_email = \"\"\n        } else {\n            this.profileForm.value.ndis_participant = 1\n        }\n\n        this.api.showLoader();\n        this.api.updateUserProfile(this.profileForm.value).pipe(\n            finalize(() => {\n                this.api.hideLoader();\n            }))\n            .subscribe(async (res: ApiResponse) => {\n                if (await res.success) {\n                    await this.storage.set(\"email\", this.profileForm.value.email);\n                    await this.storage.set(\"isLoggedInKeyPressed\", true);\n\n                    const analytics = {\n                        user_status: \"LoggedIn\",\n                        user_id: res.user.id,\n                        app_version: this.appsFlyerAnalytics.getCurrentVersionCode(),\n                        app_type: this.appsFlyerAnalytics.platformName(),\n                    }\n                    this.appsFlyerAnalytics.profileUpdatedAnalytics(analytics);\n                    let user_type = await this.profileForm.value.user_type;\n\n                    if (user_type == 3 || user_type == 2) {\n                        this.storage.set(\"menuType\", \"sitter\").then((res) => {\n                            localStorage.setItem(\"menuType\", \"sitter\")\n                            this.EPEvent.publish(\"menuName\", {menuType:\"sitter\", time: Date.now()})\n                        })\n                    } else if (user_type == 1) {\n                        localStorage.setItem(\"menuType\", \"owner\")\n                        this.storage.set(\"menuType\", \"owner\").then((res) => {\n                            this.EPEvent.publish(\"menuName\",{ menuType:\"owner\", time:Date.now()})\n                        })\n                    }\n\n                    this.EPEvent.publish(\"isProfileUpdated\", {status: true, time: Date.now()});\n\n                    this.storage.set(PetcloudApiService.USER, res.user);\n                    this.api.showToast('Your profile has been saved successfully', 2000, 'bottom');\n\n\n                    setTimeout(() => {\n                        this.router.navigateByUrl('/profile-photo-upload');\n                    }, 800);\n                } else {\n                    this.api.showToast(res.error, 2000, 'bottom');\n                }\n            }, (err: any) => {\n                this.api.autoLogout(err, this.profileForm.value)\n            });\n    }\n\n    /**\n     * Get User Profile Basic Information for Profile 1st Step.\n     */\n    public getUserProfileBasicInfo() {\n        this.api.showLoader();\n        this.api.getUserBasicProfile().pipe(finalize(() => {\n            this.api.hideLoader();\n        })).subscribe(async (res: ApiResponse) => {\n            if (res.success) {\n                const userData: User = await res.user;\n                const ndisProfile: any = await userData.ndisprofile\n\n                this.profileForm.setValue({\n                    email: userData.email,\n                    first_name: userData.first_name,\n                    last_name: userData.last_name,\n                    gender: userData.gender,\n                    user_type: userData.user_type,\n                    dob: (userData.dob === '1970-01-01' || userData.dob == null) ? new Date() : userData.dob,\n                    street_address: userData.street_address,\n                    address: userData.address,\n                    state: userData.state,\n                    zipcode: userData.zipcode,\n                    mobile: userData.mobile,\n                    phone: userData.phone,\n                    ndis_participant: ndisProfile && ndisProfile.ndis_participant == \"1\" ? true : false,\n                    plan_managed : ndisProfile != null ? ndisProfile.plan_managed : \"\",\n                    plan_manager_email: ndisProfile != null ? ndisProfile.plan_manager_email  : \"\",\n                });\n\n                if (ndisProfile != null) {\n                    if(ndisProfile.plan_managed == \"2\" && this.isNDISParticant){\n                        this.showManagerEmail = true\n                    }else{\n                        this.showManagerEmail = false\n                    }\n                    \n                } else {\n                    this.showManagerEmail = false\n                }\n\n                this.lng = userData.longitude;\n                this.lat = userData.latitude;\n\n\n                if (this.lat == null || this.lat == \"\") {\n                    this.isLocationAuthorized();\n                }\n            } else {\n                this.api.showToast('Getting problem to fetch profile details', 2000, 'bottom');\n            }\n        }, (err: any) => {\n            this.api.autoLogout(err, \"\")\n\n        });\n    }\n\n    public handleAddressChange(address: any) {\n\n        const addressArray = address.formatted_address.split(' ');\n        const addressLenth = addressArray.length;\n        let addressText = '';\n\n        for (let i = 0; i < (addressLenth - 2); i++) {\n            addressText += addressArray[i] + '';\n        }\n        // set automatice state and pincode value\n        this.profileForm.patchValue({\n            address: address.vicinity,\n            state: this.getState(addressArray[(addressLenth - 2)]),\n            zipcode: (isNaN(addressArray[(addressLenth - 1)])) ? '' : addressArray[(addressLenth - 1)]\n        });\n        this.lng = address.geometry.location.lng();\n        this.lat = address.geometry.location.lat();\n    }\n\n\n    private getState(stateName: string): any {\n        switch (stateName) {\n            case 'ACT':\n                return '1';\n                break;\n            case 'NSW':\n                return '2';\n                break;\n            case 'NT':\n                return '3';\n                break;\n            case 'QLD':\n                return '4';\n                break;\n            case 'SA':\n                return '5';\n                break;\n            case 'VIC':\n                return '6';\n                break;\n            case 'WA':\n                return '7';\n                break;\n            case 'TAS':\n                return '8';\n                break;\n            default:\n                return '0';\n        }\n    }\n\n    async infoModel(type) {\n        const modal = await this.modalCtrl.create({\n            component: InfomodelComponent,\n            animated: true,\n            cssClass: 'modalCss',\n            componentProps: {\n                type\n            }\n        });\n        modal.onDidDismiss()\n            .then((data: any) => {\n\n            });\n        return await modal.present();\n    }\n\n    onChangeNDISParticipant(ev) {\n        ev.detail.checked == true ? (this.isNDISParticant = true, this.showManagerEmail = true) : (this.isNDISParticant = false, this.showManagerEmail = false)\n    }\n\n    planType(event) {\n        if (event.detail.value == 2) {\n            this.showManagerEmail = true\n        } else {\n            this.showManagerEmail = false\n        }\n    }\n}\n","export default \".profileform ion-item {\\n  --padding-start: 0;\\n  --padding-start: 0;\\n  font-size: 15px;\\n  --min-height: 40px;\\n}\\n.profileform p {\\n  margin: 5px 0px 0px;\\n}\\nion-list {\\n  margin: 0px;\\n  padding: 0px;\\n}\\n.group-title {\\n  font-weight: 600;\\n  font-size: 16px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2ljLWluZm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQUFKO0FBRUU7RUFDRSxtQkFBQTtBQUFKO0FBR0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUFGO0FBRUE7RUFDRSxnQkFBQTtFQUNBLDBCQUFBO0FBQ0YiLCJmaWxlIjoiYmFzaWMtaW5mby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZmlsZWZvcm0ge1xuICBpb24taXRlbSB7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAwO1xuICAgIC0tcGFkZGluZy1zdGFydDogMDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgLS1taW4taGVpZ2h0OiA0MHB4O1xuICB9XG4gIHAge1xuICAgIG1hcmdpbjogNXB4IDBweCAwcHg7XG4gIH1cbn1cbmlvbi1saXN0IHtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbi5ncm91cC10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50O1xufSJdfQ== */\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons defaultHref=\\\"/get-started\\\" slot=\\\"start\\\">\\n            <ion-back-button >\\n            </ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Basic Profile</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form [formGroup]=\\\"profileForm\\\" class=\\\"profileform ion-padding\\\">\\n        <ion-list>\\n            <ion-item class=\\\"group-title\\\" lines=\\\"none\\\">\\n                <ion-text>Can you tell us, why have you joined PetCloud?</ion-text>\\n            </ion-item>\\n            <ion-radio-group formControlName=\\\"user_type\\\">\\n                <ion-item>\\n                    <ion-label>Find Pet Care Services</ion-label>\\n                    <ion-radio value=\\\"1\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Offer Pet Care Services</ion-label>\\n                    <ion-radio value=\\\"2\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Both</ion-label>\\n                    <ion-radio value=\\\"3\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"profileForm.get('user_type').hasError('required')\\\">\\n                <p class=\\\"error\\\" *ngIf=\\\"profileForm.get('first_name').hasError('required')\\\">\\n                    Select why you joined Petcloud!\\n                </p>\\n            </ion-text>\\n        </ion-list>\\n\\n        <ion-list>\\n            <ion-item>\\n                <ion-label>Are you an NDIS participant?</ion-label>\\n                <ion-checkbox formControlName=\\\"ndis_participant\\\" (ionChange)=\\\"onChangeNDISParticipant($event)\\\" slot=\\\"end\\\"></ion-checkbox>\\n            </ion-item>\\n        </ion-list>\\n\\n        <ng-container *ngIf=\\\"isNDISParticant\\\">\\n        <ion-list>\\n            <ion-item lines=\\\"none\\\">\\n                <ion-text>How is your plan managed?</ion-text>\\n            </ion-item>\\n            <ion-radio-group (ionChange)=\\\"planType($event)\\\" formControlName=\\\"plan_managed\\\">\\n                <ion-item>\\n                    <ion-label>Self Managed</ion-label>\\n                    <ion-radio value=\\\"1\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>By a Plan Manager</ion-label>\\n                    <ion-radio value=\\\"2\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>NDIA-managed</ion-label>\\n                    <ion-radio value=\\\"3\\\" color=\\\"theme\\\"></ion-radio>\\n                </ion-item>\\n            </ion-radio-group>\\n        </ion-list>\\n\\n        <ion-list *ngIf=\\\"showManagerEmail\\\">\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Enter Plan Manager Email Address\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter Plan Manager Email Id\\\" formControlName=\\\"plan_manager_email\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"profileForm.get('plan_managed').value == '2' && (profileForm.get('plan_manager_email').hasError('required') && profileForm.get('plan_manager_email').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"profileForm.get('plan_managed').value == '2' &&  (profileForm.get('first_name').hasError('plan_manager_email') && profileForm.get('plan_manager_email').touched)\\\">\\n                    Please enter your plan manager email\\n                </p>\\n            </ion-text>\\n            </ion-list>\\n        </ng-container>\\n        \\n        <ion-list>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">First name\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter First Name\\\" formControlName=\\\"first_name\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('first_name').hasError('required') && profileForm.get('first_name').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('first_name').hasError('required') && profileForm.get('first_name').touched)\\\">\\n                    Enter first name.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Last name\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter Last Name\\\" formControlName=\\\"last_name\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('last_name').hasError('required') && profileForm.get('last_name').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('last_name').hasError('required') && profileForm.get('last_name').touched)\\\">\\n                    Enter last name.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label>Gender\\n                    <!-- <small class=\\\"error\\\">*</small> -->\\n                </ion-label>\\n                <ion-select placeholder=\\\"Select Gender\\\" formControlName=\\\"gender\\\">\\n                    <ion-select-option value=\\\"F\\\">Female</ion-select-option>\\n                    <ion-select-option value=\\\"M\\\">Male</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('gender').hasError('required') && profileForm.get('gender').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('gender').hasError('required') && profileForm.get('gender').touched)\\\">\\n                    Select gender.\\n                </p>\\n            </ion-text>\\n\\n            <ion-text class=\\\"link-contrast fs-12\\\" (click)=\\\"infoModel('gender')\\\" lines=\\\"none\\\">\\n                <p >Why do I need to provide this?\\n                    <ion-icon name=\\\"information-circle\\\" slot=\\\"end\\\"></ion-icon>\\n                </p>\\n            </ion-text>\\n\\n\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">DOB\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-datetime display-format=\\\"DD/MM/YYYY\\\" picker-format=\\\"DD/MM/YYYY\\\"\\n                                placeholder=\\\"e.g 13/12/1989\\\"\\n                                formControlName=\\\"dob\\\">\\n                </ion-datetime>\\n            </ion-item>\\n\\n            <ion-text class=\\\"link-contrast fs-12\\\" (click)=\\\"infoModel('dob')\\\" lines=\\\"none\\\">\\n                <p >Why do I need to provide this?\\n                    <ion-icon name=\\\"information-circle\\\" slot=\\\"end\\\"></ion-icon>\\n                </p>\\n            </ion-text>\\n            \\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('dob').hasError('required') && profileForm.get('dob').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('dob').hasError('required') && profileForm.get('dob').touched)\\\">\\n                    Select date of birth.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Street Address\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input type=\\\"text\\\" id=\\\"street_address\\\" placeholder=\\\"Enter Street Address\\\"\\n                            formControlName=\\\"street_address\\\"></ion-input>\\n            </ion-item>\\n\\n            <ion-text class=\\\"link-contrast fs-12\\\" (click)=\\\"infoModel('address')\\\" lines=\\\"none\\\">\\n                <p >My address privacy\\n                    <ion-icon name=\\\"information-circle\\\" slot=\\\"end\\\"></ion-icon>\\n                </p>\\n            </ion-text>\\n\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('street_address').hasError('required') && profileForm.get('street_address').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('street_address').hasError('required') && profileForm.get('street_address').touched)\\\">\\n                    Enter street address.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Suburb\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <input class=\\\"native-input sc-ion-input-md google-input\\\" \\n                [options]='options'\\n                type=\\\"text\\\" ngx-google-places-autocomplete\\n                        #placesRef=\\\"ngx-places\\\"\\n                        (onAddressChange)=\\\"handleAddressChange($event)\\\" id=\\\"suburb\\\"\\n                        placeholder=\\\"Enter keywords\\\" formControlName=\\\"address\\\"/>\\n                <!-- <ion-input type=\\\"text\\\" id=\\\"suburb\\\" [(ngModel)]=\\\"googleAddress\\\" (setAddress)=\\\"getAddress($event)\\\" placeholder=\\\"Enter keywords\\\" [ngModelOptions]=\\\"{standalone: true}\\\"> -->\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('address').hasError('required') && profileForm.get('address').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('address').hasError('required') && profileForm.get('address').touched)\\\">\\n                    Enter suburb.\\n                </p>\\n            </ion-text>\\n            <!-- <small>Please select address from dropdown</small> -->\\n            <ion-item class=\\\"cutom-height\\\">\\n                <ion-label position=\\\"stacked\\\">State<small class=\\\"error\\\">*</small></ion-label>\\n                <ion-select placeholder=\\\"Select State\\\" formControlName=\\\"state\\\">\\n                    <ion-select-option value=\\\"1\\\">ACT</ion-select-option>\\n                    <ion-select-option value=\\\"2\\\">NSW</ion-select-option>\\n                    <ion-select-option value=\\\"3\\\">NT</ion-select-option>\\n                    <ion-select-option value=\\\"4\\\">QLD</ion-select-option>\\n                    <ion-select-option value=\\\"5\\\">SA</ion-select-option>\\n                    <ion-select-option value=\\\"6\\\">VIC</ion-select-option>\\n                    <ion-select-option value=\\\"7\\\">WA</ion-select-option>\\n                    <ion-select-option value=\\\"8\\\">TAS</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('state').hasError('required') && profileForm.get('state').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('state').hasError('required') && profileForm.get('state').touched)\\\">\\n                    Select state.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Postcode\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"Enter Postcode\\\" formControlName=\\\"zipcode\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('zipcode').hasError('required') && profileForm.get('zipcode').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('zipcode').hasError('required') && profileForm.get('zipcode').touched)\\\">\\n                    Enter correct postalcode.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Email\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input type=\\\"email\\\" placeholder=\\\"Enter Email Address\\\"\\n                            formControlName=\\\"email\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('email').hasError('required') && profileForm.get('email').touched)\\\">\\n                <p class=\\\"error\\\"\\n                    *ngIf=\\\"(profileForm.get('email').hasError('required') && profileForm.get('email').touched)\\\">\\n                    Enter proper email address format.\\n                </p>\\n            </ion-text>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Home Phone</ion-label>\\n                <ion-input placeholder=\\\"Enter Home Phone\\\" formControlName=\\\"phone\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">Mobile Number in International Format\\n                    <small class=\\\"error\\\">*</small>\\n                </ion-label>\\n                <ion-input placeholder=\\\"+61400111222\\\"\\n                type=\\\"tel\\\"\\n                formControlName=\\\"mobile\\\"></ion-input>\\n            </ion-item>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('mobile').hasError('required') && profileForm.get('mobile').touched)\\\">\\n                <p class=\\\"error\\\">\\n                    Enter mobile phone number.\\n                </p>\\n            </ion-text>\\n            <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp\\\"\\n                        *ngIf=\\\"(profileForm.get('mobile').hasError('pattern') && profileForm.get('mobile').touched)\\\">\\n                <p class=\\\"error\\\" >\\n                    Enter proper mobile phone number start with +61.\\n                </p>\\n            </ion-text>\\n        </ion-list>\\n    </form>\\n</ion-content>\\n<ion-footer class=\\\"ion-no-border\\\">\\n        <ion-button \\n            class=\\\"text-capitalize fls-0 fs-18 footer-btn\\\"\\n            expand=\\\"full\\\"\\n            [disabled]=\\\"!profileForm.valid\\\"\\n            color=\\\"theme\\\"\\n            (click)=\\\"saveBasicProfile()\\\"\\n        >\\n            Save & Next\\n        </ion-button>\\n</ion-footer>\\n\";"],"sourceRoot":"webpack:///"}