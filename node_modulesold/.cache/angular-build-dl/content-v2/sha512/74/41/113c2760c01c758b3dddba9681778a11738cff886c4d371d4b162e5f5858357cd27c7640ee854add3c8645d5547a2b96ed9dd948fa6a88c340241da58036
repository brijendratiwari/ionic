(self["webpackChunkpetcloud"] = self["webpackChunkpetcloud"] || []).push([["src_app_profile_basic-info_basic-info_module_ts"],{

/***/ 83129:
/*!*********************************************************!*\
  !*** ./src/app/profile/basic-info/basic-info.module.ts ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BasicInfoPageModule": function() { return /* binding */ BasicInfoPageModule; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _basic_info_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basic-info.page */ 82181);
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-google-places-autocomplete */ 44836);
/* harmony import */ var ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ionic-native/location-accuracy/ngx */ 16030);









const routes = [
    {
        path: '',
        component: _basic_info_page__WEBPACK_IMPORTED_MODULE_0__.BasicInfoPage
    }
];
let BasicInfoPageModule = class BasicInfoPageModule {
};
BasicInfoPageModule = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.NgModule)({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__.ReactiveFormsModule,
            _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.IonicModule,
            ngx_google_places_autocomplete__WEBPACK_IMPORTED_MODULE_1__.GooglePlaceModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_8__.RouterModule.forChild(routes),
            /*AgmCoreModule.forRoot({
                apiKey: 'AIzaSyA6PHeobaARhtYsbr5Hu8WiXWWJb0kcelc',
                libraries: ['places']
            }),*/
        ],
        providers: [_ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_2__.LocationAccuracy],
        declarations: [_basic_info_page__WEBPACK_IMPORTED_MODULE_0__.BasicInfoPage],
        schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_4__.NO_ERRORS_SCHEMA]
    })
], BasicInfoPageModule);



/***/ }),

/***/ 82181:
/*!*******************************************************!*\
  !*** ./src/app/profile/basic-info/basic-info.page.ts ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BasicInfoPage": function() { return /* binding */ BasicInfoPage; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_basic_info_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./basic-info.page.html */ 85041);
/* harmony import */ var _basic_info_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basic-info.page.scss */ 70492);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../api/petcloud-api.service */ 78975);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _ionic_storage__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ionic/storage */ 38605);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 68939);
/* harmony import */ var _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic-native/geolocation/ngx */ 87152);
/* harmony import */ var _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic-native/location-accuracy/ngx */ 16030);
/* harmony import */ var _ionic_native_diagnostic_ngx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ionic-native/diagnostic/ngx */ 34255);
/* harmony import */ var _components_infomodel_infomodel_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/infomodel/infomodel.component */ 89739);
/* harmony import */ var _app_apps_flyer_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../app/apps-flyer.service */ 79103);
/* harmony import */ var src_app_events__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/events */ 49708);
















let BasicInfoPage = class BasicInfoPage {
    constructor(api, formBuilder, EPEvent, geoLocation, router, storage, diagnostic, locationAccuracy, modalCtrl, appsFlyerAnalytics, navCtrl, platform) {
        this.api = api;
        this.formBuilder = formBuilder;
        this.EPEvent = EPEvent;
        this.geoLocation = geoLocation;
        this.router = router;
        this.storage = storage;
        this.diagnostic = diagnostic;
        this.locationAccuracy = locationAccuracy;
        this.modalCtrl = modalCtrl;
        this.appsFlyerAnalytics = appsFlyerAnalytics;
        this.navCtrl = navCtrl;
        this.platform = platform;
        this.imageSrc = '';
        this.isNDISParticant = false;
        this.requestForGPSPremission = true;
        this.lat = "";
        this.lng = "";
        this.showManagerEmail = false;
        this.options = {
            types: ['(regions)'],
            componentRestrictions: { country: "AU" },
            bounds: null,
            fields: null,
            strictBounds: null,
            origin: null
        };
    }
    ngOnInit() {
        this.profileForm = this.formBuilder.group({
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.email]],
            first_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            last_name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            gender: [''],
            user_type: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            dob: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            street_address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            address: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            state: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            zipcode: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            mobile: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.pattern(/^(\+61)[0-9]{9}$/)]],
            phone: [''],
            ndis_participant: [false],
            plan_managed: ['1'],
            plan_manager_email: ['']
        });
    }
    ionViewDidEnter() {
        // fill up form with already stored value by user profile
        this.getUserProfileBasicInfo();
    }
    //Check if application having Location Authorization
    isLocationAuthorized() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            yield this.platform.ready();
            this.diagnostic.isLocationEnabled().then((isEnabled) => {
                if (isEnabled) {
                    this.diagnostic.isLocationAuthorized().then((success) => {
                        if (success) {
                            this.requestForGPSPremission = true;
                            this.getLocationAccuracy();
                        }
                        else {
                            this.requestForGPSPremission = false;
                        }
                    }, err => {
                    });
                }
                else {
                    this.requestForGPSPremission = false;
                }
            }, err => {
            });
        });
    }
    getLocationAccuracy() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            yield this.platform.ready();
            this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then((response_gps) => {
                // When GPS Turned ON call method to get Accurate location coordinates
                this.getCurrentLocation();
            }, error => {
            });
        });
    }
    getCurrentLocation() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            yield this.geoLocation.getCurrentPosition().then((resp) => (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
                this.lat = yield resp.coords.latitude.toString();
                this.lng = yield resp.coords.longitude.toString();
                yield this.api.getSuburb(this.lat, this.lng).subscribe((response) => (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
                    this.profileForm.patchValue({
                        address: response.locality
                    });
                }), (err) => (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
                }));
            }));
        });
    }
    saveBasicProfile() {
        this.profileForm.value.lat = this.lat;
        this.profileForm.value.lng = this.lng;
        if (!this.profileForm.value.ndis_participant) {
            this.profileForm.value.ndis_participant = 0;
            this.profileForm.value.plan_managed = "";
            this.profileForm.value.plan_manager_email = "";
        }
        else {
            this.profileForm.value.ndis_participant = 1;
        }
        this.api.showLoader();
        this.api.updateUserProfile(this.profileForm.value).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
            this.api.hideLoader();
        }))
            .subscribe((res) => (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            if (yield res.success) {
                yield this.storage.set("email", this.profileForm.value.email);
                yield this.storage.set("isLoggedInKeyPressed", true);
                const analytics = {
                    user_status: "LoggedIn",
                    user_id: res.user.id,
                    app_version: this.appsFlyerAnalytics.getCurrentVersionCode(),
                    app_type: this.appsFlyerAnalytics.platformName(),
                };
                this.appsFlyerAnalytics.profileUpdatedAnalytics(analytics);
                let user_type = yield this.profileForm.value.user_type;
                if (user_type == 3 || user_type == 2) {
                    this.storage.set("menuType", "sitter").then((res) => {
                        localStorage.setItem("menuType", "sitter");
                        this.EPEvent.publish("menuName", { menuType: "sitter", time: Date.now() });
                    });
                }
                else if (user_type == 1) {
                    localStorage.setItem("menuType", "owner");
                    this.storage.set("menuType", "owner").then((res) => {
                        this.EPEvent.publish("menuName", { menuType: "owner", time: Date.now() });
                    });
                }
                this.EPEvent.publish("isProfileUpdated", { status: true, time: Date.now() });
                this.storage.set(_api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService.USER, res.user);
                this.api.showToast('Your profile has been saved successfully', 2000, 'bottom');
                setTimeout(() => {
                    this.router.navigateByUrl('/profile-photo-upload');
                }, 800);
            }
            else {
                this.api.showToast(res.error, 2000, 'bottom');
            }
        }), (err) => {
            this.api.autoLogout(err, this.profileForm.value);
        });
    }
    /**
     * Get User Profile Basic Information for Profile 1st Step.
     */
    getUserProfileBasicInfo() {
        this.api.showLoader();
        this.api.getUserBasicProfile().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
            this.api.hideLoader();
        })).subscribe((res) => (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            if (res.success) {
                const userData = yield res.user;
                const ndisProfile = yield userData.ndisprofile;
                this.profileForm.setValue({
                    email: userData.email,
                    first_name: userData.first_name,
                    last_name: userData.last_name,
                    gender: userData.gender,
                    user_type: userData.user_type,
                    dob: (userData.dob === '1970-01-01' || userData.dob == null) ? new Date() : userData.dob,
                    street_address: userData.street_address,
                    address: userData.address,
                    state: userData.state,
                    zipcode: userData.zipcode,
                    mobile: userData.mobile,
                    phone: userData.phone,
                    ndis_participant: ndisProfile && ndisProfile.ndis_participant == "1" ? true : false,
                    plan_managed: ndisProfile != null ? ndisProfile.plan_managed : "",
                    plan_manager_email: ndisProfile != null ? ndisProfile.plan_manager_email : "",
                });
                if (ndisProfile != null) {
                    if (ndisProfile.plan_managed == "2" && this.isNDISParticant) {
                        this.showManagerEmail = true;
                    }
                    else {
                        this.showManagerEmail = false;
                    }
                }
                else {
                    this.showManagerEmail = false;
                }
                this.lng = userData.longitude;
                this.lat = userData.latitude;
                if (this.lat == null || this.lat == "") {
                    this.isLocationAuthorized();
                }
            }
            else {
                this.api.showToast('Getting problem to fetch profile details', 2000, 'bottom');
            }
        }), (err) => {
            this.api.autoLogout(err, "");
        });
    }
    handleAddressChange(address) {
        const addressArray = address.formatted_address.split(' ');
        const addressLenth = addressArray.length;
        let addressText = '';
        for (let i = 0; i < (addressLenth - 2); i++) {
            addressText += addressArray[i] + '';
        }
        // set automatice state and pincode value
        this.profileForm.patchValue({
            address: address.vicinity,
            state: this.getState(addressArray[(addressLenth - 2)]),
            zipcode: (isNaN(addressArray[(addressLenth - 1)])) ? '' : addressArray[(addressLenth - 1)]
        });
        this.lng = address.geometry.location.lng();
        this.lat = address.geometry.location.lat();
    }
    getState(stateName) {
        switch (stateName) {
            case 'ACT':
                return '1';
                break;
            case 'NSW':
                return '2';
                break;
            case 'NT':
                return '3';
                break;
            case 'QLD':
                return '4';
                break;
            case 'SA':
                return '5';
                break;
            case 'VIC':
                return '6';
                break;
            case 'WA':
                return '7';
                break;
            case 'TAS':
                return '8';
                break;
            default:
                return '0';
        }
    }
    infoModel(type) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__awaiter)(this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _components_infomodel_infomodel_component__WEBPACK_IMPORTED_MODULE_6__.InfomodelComponent,
                animated: true,
                cssClass: 'modalCss',
                componentProps: {
                    type
                }
            });
            modal.onDidDismiss()
                .then((data) => {
            });
            return yield modal.present();
        });
    }
    onChangeNDISParticipant(ev) {
        ev.detail.checked == true ? (this.isNDISParticant = true, this.showManagerEmail = true) : (this.isNDISParticant = false, this.showManagerEmail = false);
    }
    planType(event) {
        if (event.detail.value == 2) {
            this.showManagerEmail = true;
        }
        else {
            this.showManagerEmail = false;
        }
    }
};
BasicInfoPage.ctorParameters = () => [
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormBuilder },
    { type: src_app_events__WEBPACK_IMPORTED_MODULE_8__.Events },
    { type: _ionic_native_geolocation_ngx__WEBPACK_IMPORTED_MODULE_3__.Geolocation },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_12__.Router },
    { type: _ionic_storage__WEBPACK_IMPORTED_MODULE_13__.Storage },
    { type: _ionic_native_diagnostic_ngx__WEBPACK_IMPORTED_MODULE_5__.Diagnostic },
    { type: _ionic_native_location_accuracy_ngx__WEBPACK_IMPORTED_MODULE_4__.LocationAccuracy },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_14__.ModalController },
    { type: _app_apps_flyer_service__WEBPACK_IMPORTED_MODULE_7__.AppsFlyerService },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_14__.NavController },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_14__.Platform }
];
BasicInfoPage.propDecorators = {
    places: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.ViewChild, args: ['places',] }],
    searchElement: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_15__.ViewChild, args: ['search',] }]
};
BasicInfoPage = (0,tslib__WEBPACK_IMPORTED_MODULE_10__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_15__.Component)({
        selector: 'app-basic-info',
        template: _raw_loader_basic_info_page_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_basic_info_page_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], BasicInfoPage);



/***/ }),

/***/ 70492:
/*!*********************************************************!*\
  !*** ./src/app/profile/basic-info/basic-info.page.scss ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".profileform ion-item {\n  --padding-start: 0;\n  --padding-start: 0;\n  font-size: 15px;\n  --min-height: 40px;\n}\n.profileform p {\n  margin: 5px 0px 0px;\n}\nion-list {\n  margin: 0px;\n  padding: 0px;\n}\n.group-title {\n  font-weight: 600;\n  font-size: 16px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2ljLWluZm8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQUFKO0FBRUU7RUFDRSxtQkFBQTtBQUFKO0FBR0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUFGO0FBRUE7RUFDRSxnQkFBQTtFQUNBLDBCQUFBO0FBQ0YiLCJmaWxlIjoiYmFzaWMtaW5mby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvZmlsZWZvcm0ge1xuICBpb24taXRlbSB7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAwO1xuICAgIC0tcGFkZGluZy1zdGFydDogMDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgLS1taW4taGVpZ2h0OiA0MHB4O1xuICB9XG4gIHAge1xuICAgIG1hcmdpbjogNXB4IDBweCAwcHg7XG4gIH1cbn1cbmlvbi1saXN0IHtcbiAgbWFyZ2luOiAwcHg7XG4gIHBhZGRpbmc6IDBweDtcbn1cbi5ncm91cC10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50O1xufSJdfQ== */");

/***/ }),

/***/ 85041:
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/profile/basic-info/basic-info.page.html ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header>\n    <ion-toolbar>\n        <ion-buttons defaultHref=\"/get-started\" slot=\"start\">\n            <ion-back-button >\n            </ion-back-button>\n        </ion-buttons>\n        <ion-title>Basic Profile</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n    <form [formGroup]=\"profileForm\" class=\"profileform ion-padding\">\n        <ion-list>\n            <ion-item class=\"group-title\" lines=\"none\">\n                <ion-text>Can you tell us, why have you joined PetCloud?</ion-text>\n            </ion-item>\n            <ion-radio-group formControlName=\"user_type\">\n                <ion-item>\n                    <ion-label>Find Pet Care Services</ion-label>\n                    <ion-radio value=\"1\" color=\"theme\"></ion-radio>\n                </ion-item>\n                <ion-item>\n                    <ion-label>Offer Pet Care Services</ion-label>\n                    <ion-radio value=\"2\" color=\"theme\"></ion-radio>\n                </ion-item>\n                <ion-item>\n                    <ion-label>Both</ion-label>\n                    <ion-radio value=\"3\" color=\"theme\"></ion-radio>\n                </ion-item>\n            </ion-radio-group>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"profileForm.get('user_type').hasError('required')\">\n                <p class=\"error\" *ngIf=\"profileForm.get('first_name').hasError('required')\">\n                    Select why you joined Petcloud!\n                </p>\n            </ion-text>\n        </ion-list>\n\n        <ion-list>\n            <ion-item>\n                <ion-label>Are you an NDIS participant?</ion-label>\n                <ion-checkbox formControlName=\"ndis_participant\" (ionChange)=\"onChangeNDISParticipant($event)\" slot=\"end\"></ion-checkbox>\n            </ion-item>\n        </ion-list>\n\n        <ng-container *ngIf=\"isNDISParticant\">\n        <ion-list>\n            <ion-item lines=\"none\">\n                <ion-text>How is your plan managed?</ion-text>\n            </ion-item>\n            <ion-radio-group (ionChange)=\"planType($event)\" formControlName=\"plan_managed\">\n                <ion-item>\n                    <ion-label>Self Managed</ion-label>\n                    <ion-radio value=\"1\" color=\"theme\"></ion-radio>\n                </ion-item>\n                <ion-item>\n                    <ion-label>By a Plan Manager</ion-label>\n                    <ion-radio value=\"2\" color=\"theme\"></ion-radio>\n                </ion-item>\n                <ion-item>\n                    <ion-label>NDIA-managed</ion-label>\n                    <ion-radio value=\"3\" color=\"theme\"></ion-radio>\n                </ion-item>\n            </ion-radio-group>\n        </ion-list>\n\n        <ion-list *ngIf=\"showManagerEmail\">\n            <ion-item>\n                <ion-label position=\"stacked\">Enter Plan Manager Email Address\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-input placeholder=\"Enter Plan Manager Email Id\" formControlName=\"plan_manager_email\"></ion-input>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"profileForm.get('plan_managed').value == '2' && (profileForm.get('plan_manager_email').hasError('required') && profileForm.get('plan_manager_email').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"profileForm.get('plan_managed').value == '2' &&  (profileForm.get('first_name').hasError('plan_manager_email') && profileForm.get('plan_manager_email').touched)\">\n                    Please enter your plan manager email\n                </p>\n            </ion-text>\n            </ion-list>\n        </ng-container>\n        \n        <ion-list>\n            <ion-item>\n                <ion-label position=\"stacked\">First name\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-input placeholder=\"Enter First Name\" formControlName=\"first_name\"></ion-input>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('first_name').hasError('required') && profileForm.get('first_name').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('first_name').hasError('required') && profileForm.get('first_name').touched)\">\n                    Enter first name.\n                </p>\n            </ion-text>\n            <ion-item>\n                <ion-label position=\"stacked\">Last name\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-input placeholder=\"Enter Last Name\" formControlName=\"last_name\"></ion-input>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('last_name').hasError('required') && profileForm.get('last_name').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('last_name').hasError('required') && profileForm.get('last_name').touched)\">\n                    Enter last name.\n                </p>\n            </ion-text>\n            <ion-item>\n                <ion-label>Gender\n                    <!-- <small class=\"error\">*</small> -->\n                </ion-label>\n                <ion-select placeholder=\"Select Gender\" formControlName=\"gender\">\n                    <ion-select-option value=\"F\">Female</ion-select-option>\n                    <ion-select-option value=\"M\">Male</ion-select-option>\n                </ion-select>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('gender').hasError('required') && profileForm.get('gender').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('gender').hasError('required') && profileForm.get('gender').touched)\">\n                    Select gender.\n                </p>\n            </ion-text>\n\n            <ion-text class=\"link-contrast fs-12\" (click)=\"infoModel('gender')\" lines=\"none\">\n                <p >Why do I need to provide this?\n                    <ion-icon name=\"information-circle\" slot=\"end\"></ion-icon>\n                </p>\n            </ion-text>\n\n\n            <ion-item>\n                <ion-label position=\"stacked\">DOB\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-datetime display-format=\"DD/MM/YYYY\" picker-format=\"DD/MM/YYYY\"\n                                placeholder=\"e.g 13/12/1989\"\n                                formControlName=\"dob\">\n                </ion-datetime>\n            </ion-item>\n\n            <ion-text class=\"link-contrast fs-12\" (click)=\"infoModel('dob')\" lines=\"none\">\n                <p >Why do I need to provide this?\n                    <ion-icon name=\"information-circle\" slot=\"end\"></ion-icon>\n                </p>\n            </ion-text>\n            \n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('dob').hasError('required') && profileForm.get('dob').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('dob').hasError('required') && profileForm.get('dob').touched)\">\n                    Select date of birth.\n                </p>\n            </ion-text>\n            <ion-item>\n                <ion-label position=\"stacked\">Street Address\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-input type=\"text\" id=\"street_address\" placeholder=\"Enter Street Address\"\n                            formControlName=\"street_address\"></ion-input>\n            </ion-item>\n\n            <ion-text class=\"link-contrast fs-12\" (click)=\"infoModel('address')\" lines=\"none\">\n                <p >My address privacy\n                    <ion-icon name=\"information-circle\" slot=\"end\"></ion-icon>\n                </p>\n            </ion-text>\n\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('street_address').hasError('required') && profileForm.get('street_address').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('street_address').hasError('required') && profileForm.get('street_address').touched)\">\n                    Enter street address.\n                </p>\n            </ion-text>\n            <ion-item>\n                <ion-label position=\"stacked\">Suburb\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <input class=\"native-input sc-ion-input-md google-input\" \n                [options]='options'\n                type=\"text\" ngx-google-places-autocomplete\n                        #placesRef=\"ngx-places\"\n                        (onAddressChange)=\"handleAddressChange($event)\" id=\"suburb\"\n                        placeholder=\"Enter keywords\" formControlName=\"address\"/>\n                <!-- <ion-input type=\"text\" id=\"suburb\" [(ngModel)]=\"googleAddress\" (setAddress)=\"getAddress($event)\" placeholder=\"Enter keywords\" [ngModelOptions]=\"{standalone: true}\"> -->\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('address').hasError('required') && profileForm.get('address').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('address').hasError('required') && profileForm.get('address').touched)\">\n                    Enter suburb.\n                </p>\n            </ion-text>\n            <!-- <small>Please select address from dropdown</small> -->\n            <ion-item class=\"cutom-height\">\n                <ion-label position=\"stacked\">State<small class=\"error\">*</small></ion-label>\n                <ion-select placeholder=\"Select State\" formControlName=\"state\">\n                    <ion-select-option value=\"1\">ACT</ion-select-option>\n                    <ion-select-option value=\"2\">NSW</ion-select-option>\n                    <ion-select-option value=\"3\">NT</ion-select-option>\n                    <ion-select-option value=\"4\">QLD</ion-select-option>\n                    <ion-select-option value=\"5\">SA</ion-select-option>\n                    <ion-select-option value=\"6\">VIC</ion-select-option>\n                    <ion-select-option value=\"7\">WA</ion-select-option>\n                    <ion-select-option value=\"8\">TAS</ion-select-option>\n                </ion-select>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('state').hasError('required') && profileForm.get('state').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('state').hasError('required') && profileForm.get('state').touched)\">\n                    Select state.\n                </p>\n            </ion-text>\n            <ion-item>\n                <ion-label position=\"stacked\">Postcode\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-input placeholder=\"Enter Postcode\" formControlName=\"zipcode\"></ion-input>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('zipcode').hasError('required') && profileForm.get('zipcode').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('zipcode').hasError('required') && profileForm.get('zipcode').touched)\">\n                    Enter correct postalcode.\n                </p>\n            </ion-text>\n            <ion-item>\n                <ion-label position=\"stacked\">Email\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-input type=\"email\" placeholder=\"Enter Email Address\"\n                            formControlName=\"email\"></ion-input>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('email').hasError('required') && profileForm.get('email').touched)\">\n                <p class=\"error\"\n                    *ngIf=\"(profileForm.get('email').hasError('required') && profileForm.get('email').touched)\">\n                    Enter proper email address format.\n                </p>\n            </ion-text>\n            <ion-item>\n                <ion-label position=\"stacked\">Home Phone</ion-label>\n                <ion-input placeholder=\"Enter Home Phone\" formControlName=\"phone\"></ion-input>\n            </ion-item>\n            <ion-item>\n                <ion-label position=\"stacked\">Mobile Number in International Format\n                    <small class=\"error\">*</small>\n                </ion-label>\n                <ion-input placeholder=\"+61400111222\"\n                type=\"tel\"\n                formControlName=\"mobile\"></ion-input>\n            </ion-item>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('mobile').hasError('required') && profileForm.get('mobile').touched)\">\n                <p class=\"error\">\n                    Enter mobile phone number.\n                </p>\n            </ion-text>\n            <ion-text lines=\"none\" class=\"animated fadeInUp\"\n                        *ngIf=\"(profileForm.get('mobile').hasError('pattern') && profileForm.get('mobile').touched)\">\n                <p class=\"error\" >\n                    Enter proper mobile phone number start with +61.\n                </p>\n            </ion-text>\n        </ion-list>\n    </form>\n</ion-content>\n<ion-footer class=\"ion-no-border\">\n        <ion-button \n            class=\"text-capitalize fls-0 fs-18 footer-btn\"\n            expand=\"full\"\n            [disabled]=\"!profileForm.valid\"\n            color=\"theme\"\n            (click)=\"saveBasicProfile()\"\n        >\n            Save & Next\n        </ion-button>\n</ion-footer>\n");

/***/ })

}]);
//# sourceMappingURL=src_app_profile_basic-info_basic-info_module_ts-es2015.js.map