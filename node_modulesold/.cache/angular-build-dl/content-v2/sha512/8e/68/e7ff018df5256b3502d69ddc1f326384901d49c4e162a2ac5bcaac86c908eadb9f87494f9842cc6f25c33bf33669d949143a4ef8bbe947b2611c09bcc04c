{"version":3,"sources":["./src/app/myListing/skills/skills.module.ts","./src/app/myListing/skills/skills.page.ts","./src/app/myListing/skills/skills.page.scss","./src/app/myListing/skills/skills.page.html"],"names":[],"mappings":"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","file":"src_app_myListing_skills_skills_module_ts-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {SkillsPage} from './skills.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SkillsPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        IonicModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [SkillsPage]\n})\nexport class SkillsPageModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { PetcloudApiService } from '../../api/petcloud-api.service';\nimport { Validators, FormBuilder, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n// importing model files\nimport { ApiResponse } from '../../model/api-response';\nimport { finalize } from 'rxjs/operators';\nimport { NavController, Platform } from '@ionic/angular';\n\n@Component({\n    selector: 'app-skills',\n    templateUrl: './skills.page.html',\n    styleUrls: ['./skills.page.scss'],\n})\nexport class SkillsPage implements OnInit {\n\n    public skillFrm: FormGroup;\n    public petBreeds = [];\n    public userId: any = '';\n\n    constructor(public api: PetcloudApiService, \n        private formBuilder: FormBuilder, \n        private platform: Platform,\n        protected router: Router, \n        protected storage: Storage,\n        public navCtrl: NavController\n    ) { }\n\n    ngOnInit() {\n        this.skillFrm = this.formBuilder.group({\n            experiencePets: [false],\n            experienceYears: ['', [Validators.required]],\n            hasQualifications: [false],\n            qualifications: ['', [Validators.required]],\n            specific_breeds: [''],\n            SpecialSkills: [''],\n            specific_skills: ['']\n        });\n\n    }\n\n    ionViewDidEnter() {\n        this.getSkills();\n        this.storage.get(PetcloudApiService.USER)\n            .then((res: any) => {\n                this.userId = res.id;\n            });\n    }\n    ionViewWillLeave() {\n        this.removeAnchorEventListner();\n    }\n    generateAnchorEventListner() {\n        const anchorElements: any = document.querySelectorAll('a[href^=\"http://\"], a[href^=\"https://\"]');\n        if(anchorElements?.length>0) {\n          anchorElements.forEach((elem)=>{\n            if(this.platform.is('cordova') && elem?.target!= \"_system\") {\n              elem.setAttribute('target', '_system');\n            }\n            elem.addEventListener('click', (e) => { \n              e.preventDefault(); \n              this.validateAndRedirect(elem.href)\n            });\n          })\n        }\n      }\n      removeAnchorEventListner() {\n        const anchorElements: any = document.querySelectorAll('a[href^=\"http://\"], a[href^=\"https://\"]');\n        if(anchorElements?.length>0) {\n          anchorElements.forEach((elem)=>{        \n            elem.removeEventListener('click', (e) => { \n              e.preventDefault(); \n              this.validateAndRedirect(elem.href)\n            });\n          })\n        }\n      }\n      validateAndRedirect(herf) {\n        if(herf) {\n          const isValid = this.api.validURL(herf);\n          console.log(\"isValid\", herf, isValid)\n          if(isValid && this.platform.is('cordova')) {\n            this.api.openExteralLinks(herf);\n          }\n        }\n      }\n\n    public getAllPetBreed() {\n        this.api.getAllPetBreed().pipe(finalize(() => {\n            this.api.hideLoader();\n        })).subscribe((res: any) => {\n            console.log(\"this.petBreeds\", this.petBreeds)\n            this.petBreeds = res;\n        }, (err: any) => {\n            this.api.autoLogout(err,\"\");\n        });\n    }\n\n\n    /**\n     * Sace Listing skills.\n     */\n    public saveListingSkill() {\n        this.api.showLoader();\n        let skillFrm = this.skillFrm.value;\n        skillFrm.experiencePets = (skillFrm.experiencePets === true) ? '1' : '0';\n        skillFrm.hasQualifications = (skillFrm.hasQualifications === true) ? '1' : '0';\n        // skillFrm.userId = this.userId;\n\n        // save updated data\n        this.api.updateSkills(skillFrm).pipe(finalize(() => {\n            this.api.hideLoader();\n        }))\n            .subscribe((res: any) => {\n                if (res.success) {\n                    this.storage.set(PetcloudApiService.USER, res.user);\n                    this.api.showToast('skill update successfull.', 2000, 'bottom');\n                } else {\n                    this.api.showToast('skill not update.', 2000, 'bottom');\n                }\n            }, (err: any) => {\n                console.log('error in save skills', err);\n                this.api.showToast('skill not update.', 2000, 'bottom');\n                this.api.autoLogout(err,skillFrm)\n            });\n        // console.log(skillFrm);\n    }\n\n    /**\n     * Get Skills details\n     */\n    public getSkills() {\n        this.api.showLoader();\n        // first fetch all pet breeds.\n        this.getAllPetBreed();\n        this.api.getListingInfo()\n            .subscribe((res: ApiResponse) => {\n                let UserListing: any = res.user;\n                let petBridsIds = [];\n                let skillIds = [];\n                this.generateAnchorEventListner();\n                for (let i in UserListing.petbreeds) {\n                    petBridsIds.push(UserListing.petbreeds[i].id);\n                }\n\n                for (let s in UserListing.specialskills) {\n                    skillIds.push(UserListing.specialskills[s].specialSkillID);\n                }\n                this.api.hideLoader();\n                this.skillFrm.setValue({\n                    experiencePets: (UserListing.experiencePets != null && UserListing.experiencePets == '1') ? true : false,\n                    experienceYears: UserListing.experienceYears,\n                    hasQualifications: (UserListing.hasQualifications != null && UserListing.hasQualifications == '1') ? true : false,\n                    qualifications: UserListing.qualifications,\n                    specific_breeds: petBridsIds,\n                    SpecialSkills: skillIds,\n                    specific_skills: (UserListing.specific_skills === null) ? '' : UserListing.specific_skills\n                });\n            }, (err: any) => {\n                this.api.hideLoader();\n                this.api.showToast('something went wrong in getting skill details!', 2000, 'bottom');\n                // this.api.autoLogout(err)\n            });\n    }\n\n}\n","export default \".custom-list ion-item {\\n  --padding-start:0;\\n}\\n\\n.theme-text {\\n  color: #FE4164;\\n}\\n\\n.theme-text-no {\\n  color: grey;\\n}\\n\\nion-grid {\\n  padding: 10px;\\n}\\n\\nion-item {\\n  font-size: 15px;\\n  --min-height: 40px;\\n}\\n\\nion-item ion-label {\\n  padding-right: 10px;\\n}\\n\\nion-item ion-select {\\n  padding-top: 16px;\\n}\\n\\n.note-info {\\n  box-shadow: none;\\n  margin: 5px 0px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNraWxscy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDSSxpQkFBQTtBQUFSOztBQUlBO0VBQ0ksY0FBQTtBQURKOztBQUdFO0VBQ0UsV0FBQTtBQUFKOztBQUdFO0VBQ0UsYUFBQTtBQUFKOztBQUVFO0VBQ0UsZUFBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBQUk7RUFDRSxtQkFBQTtBQUVOOztBQUFJO0VBQ0UsaUJBQUE7QUFFTjs7QUFFRTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtBQUNKIiwiZmlsZSI6InNraWxscy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWxpc3R7XG4gICAgaW9uLWl0ZW17XG4gICAgICAgIC0tcGFkZGluZy1zdGFydDowO1xuICAgIH1cbn1cblxuLnRoZW1lLXRleHR7XG4gICAgY29sb3I6ICNGRTQxNjQ7XG4gIH1cbiAgLnRoZW1lLXRleHQtbm97XG4gICAgY29sb3I6IGdyZXk7XG4gIH1cblxuICBpb24tZ3JpZCB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgfVxuICBpb24taXRlbSB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIC0tbWluLWhlaWdodDogNDBweDtcbiAgICBpb24tbGFiZWwge1xuICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICB9XG4gICAgaW9uLXNlbGVjdCB7XG4gICAgICBwYWRkaW5nLXRvcDogMTZweDtcbiAgICB9XG4gIH1cblxuICAubm90ZS1pbmZvIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG1hcmdpbjogNXB4IDBweDtcbiAgfSJdfQ== */\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/listing\\\" ></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Skills</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid>\\n        <ion-row class=\\\"ion-margin-vertical custom-list\\\">\\n            <ion-col>\\n                <form [formGroup]=\\\"skillFrm\\\">\\n                    <ion-item [lines]=\\\"(skillFrm.get('experiencePets').value == false)? 'none': ''\\\">\\n                        <ion-label class=\\\"ion-text-wrap\\\">Do you have experience looking after pets?</ion-label>\\n                        <ion-toggle formControlName=\\\"experiencePets\\\" slot=\\\"end\\\" color=\\\"theme\\\"></ion-toggle>\\n                        <div>\\n                            <span class=\\\"theme-text\\\"\\n                                *ngIf=\\\"skillFrm.value.experiencePets\\\"\\n                            >\\n                                Yes\\n                            </span>\\n                            <span class=\\\"theme-text-no\\\"\\n                                *ngIf=\\\"!skillFrm.value.experiencePets\\\"\\n                            >\\n                                No\\n                            </span>\\n                        </div>\\n                    </ion-item>\\n                    <ion-card color=\\\"note animated fadeIn\\\" *ngIf=\\\"skillFrm.get('experiencePets').value == false\\\"\\n                              class=\\\"note-info ion-no-margin\\\">\\n                        <ion-card-content>\\n                            <a href=\\\"https://www.petcloud.com.au/learning/minding\\\" target=\\\"_blank\\\">\\n                                The RSPCA Qld Accredited Pet Sitting course</a> will help give you the confidence you need when\\n                            looking after pets. This course is located in your Learning Centre.\\n                        </ion-card-content>\\n                    </ion-card>\\n                    <ion-item *ngIf=\\\"skillFrm.get('experiencePets').value == true\\\">\\n                        <ion-label position=\\\"stacked\\\">How many years experience?\\n                            <small class=\\\"error\\\">*</small>\\n                        </ion-label>\\n                        <ion-select placeholder=\\\"select experience\\\" formControlName=\\\"experienceYears\\\">\\n                            <ion-select-option value=\\\"1\\\">1</ion-select-option>\\n                            <ion-select-option value=\\\"2\\\" selected=\\\"\\\">2</ion-select-option>\\n                            <ion-select-option value=\\\"3\\\">3</ion-select-option>\\n                            <ion-select-option value=\\\"4\\\">4</ion-select-option>\\n                            <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n                            <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n                            <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n                            <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n                            <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n                            <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n                            <ion-select-option value=\\\"11\\\">10+</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-text lines=\\\"none\\\"\\n                        class=\\\"animated fadeInUp error\\\"\\n                        *ngIf=\\\"skillFrm.get('experiencePets').value == true \\n                        && skillFrm.get('experienceYears').value == true \\n                        && skillFrm.get('experienceYears').hasError('required') \\n                        && skillFrm.get('experienceYears').touched\\\"\\n                    >\\n                        select experience!\\n                    </ion-text>\\n                    <ion-item>\\n                        <ion-label class=\\\"ion-text-wrap\\\">Do you have any qualifications regarding pets?</ion-label>\\n                        <ion-toggle slot=\\\"end\\\" formControlName=\\\"hasQualifications\\\" color=\\\"theme\\\"></ion-toggle>\\n                        <div>\\n                            <span class=\\\"theme-text\\\"\\n                                *ngIf=\\\"skillFrm.value.hasQualifications\\\"\\n                            >\\n                                Yes\\n                            </span>\\n                            <span class=\\\"theme-text-no\\\"\\n                                *ngIf=\\\"!skillFrm.value.hasQualifications\\\"\\n                            >\\n                                No\\n                            </span>\\n                        </div>\\n                    </ion-item>\\n                    <ion-item *ngIf=\\\"skillFrm.get('hasQualifications').value == true\\\">\\n                        <ion-label position=\\\"stacked\\\">\\n                            Please list your qualifications?\\n                            <small class=\\\"error\\\">*</small>\\n                        </ion-label>\\n                        <ion-textarea formControlName=\\\"qualifications\\\" rows=\\\"3\\\" maxlength=\\\"500\\\">\\n                        </ion-textarea>\\n                    </ion-item>\\n                    <ion-text *ngIf=\\\"skillFrm.get('hasQualifications').value == true\\\">\\n                        <small>\\n                            <i>\\n                                {{ 500 - skillFrm.get('qualifications').value?.length }} char left\\n                            </i>\\n                        </small>\\n                    </ion-text>\\n                    <ion-text lines=\\\"none\\\" class=\\\"animated fadeInUp error\\\"\\n                        *ngIf=\\\"skillFrm.get('hasQualifications').value == true \\n                        && skillFrm.get('qualifications').value == true \\n                        && skillFrm.get('qualifications').hasError('required')\\n                        && skillFrm.get('qualifications').touched\\\"\\n                    >\\n                        enter qualification!\\n                    </ion-text>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\" class=\\\"ion-text-wrap\\\">\\n                            What specific breeds (of Dogs and Cats) do you have experience with?\\n                        </ion-label>\\n                        <ion-select \\n                            formControlName=\\\"specific_breeds\\\"\\n                            placeholder=\\\"Select specific breed\\\"\\n                            multiple=\\\"true\\\" cancelText=\\\"cancel\\\"\\n                            okText=\\\"ok\\\"\\n                        >\\n                            <ion-select-option *ngFor=\\\"let p of petBreeds\\\" [value]=\\\"p.id\\\">{{p.name}}</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\" class=\\\"ion-text-wrap\\\">Do you have special skills in any of the following?\\n                        </ion-label>\\n                        <ion-select \\n                            formControlName=\\\"SpecialSkills\\\"\\n                            placeholder=\\\"Select Special Skills\\\"\\n                            multiple=\\\"true\\\"\\n                            cancelText=\\\"cancel\\\"\\n                            okText=\\\"ok\\\"\\n                        >\\n                            <ion-select-option value=\\\"1\\\">Epilepsy</ion-select-option>\\n                            <ion-select-option value=\\\"2\\\">Senior Dogs</ion-select-option>\\n                            <ion-select-option value=\\\"3\\\">Puppies</ion-select-option>\\n                            <ion-select-option value=\\\"4\\\">Senior Cats</ion-select-option>\\n                            <ion-select-option value=\\\"5\\\">Kittens</ion-select-option>\\n                            <ion-select-option value=\\\"6\\\">Medication</ion-select-option>\\n                            <ion-select-option value=\\\"7\\\">Injections</ion-select-option>\\n                            <ion-select-option value=\\\"8\\\">Special Needs</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\" class=\\\"ion-text-wrap\\\">\\n                            Anything else about your skills that you would like to mention?\\n                        </ion-label>\\n                        <ion-textarea \\n                            formControlName=\\\"specific_skills\\\" \\n                            rows=\\\"3\\\" maxlength=\\\"500\\\"\\n                            placeholder=\\\"If you are a student or have a specific degree in animal care or other relevant skills, please add them here\\\"\\n                        ></ion-textarea>\\n                    </ion-item>\\n                    <ion-text>\\n                        <small>\\n                            <i>\\n                                {{ 500 - skillFrm.get('specific_skills').value.length }} char left\\n                            </i>\\n                        </small>\\n                    </ion-text>\\n                </form>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</ion-content>\\n<ion-footer>\\n    <ion-button\\n        class=\\\"text-capitalize fls-0 fs-18 footer-btn\\\" \\n        expand=\\\"full\\\" \\n        color=\\\"theme\\\"\\n        (click)=\\\"saveListingSkill()\\\"\\n    >\\n        Save\\n    </ion-button>\\n</ion-footer>\\n\";"],"sourceRoot":"webpack:///"}