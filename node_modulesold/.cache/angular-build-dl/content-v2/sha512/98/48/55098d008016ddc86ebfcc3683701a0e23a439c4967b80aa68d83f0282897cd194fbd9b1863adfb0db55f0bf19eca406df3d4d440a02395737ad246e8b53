{"version":3,"sources":["webpack:///src/app/add-reminders/add-reminders.module.ts","webpack:///src/app/add-reminders/add-reminders.page.ts","webpack:///src/app/add-reminders/add-reminders.page.scss","webpack:///src/app/add-reminders/add-reminders.page.html"],"names":["routes","path","component","AddRemindersPage","AddRemindersPageModule","NgModule","imports","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","RouterModule","declarations","formBuilder","nav","storage","api","startMinDate","pets","Date","toISOString","time","add","format","startMinTime","addReminderForm","group","Validators","date","reminder_type","notifi_reminder","alertFrequency","description","reminders","getPetsListing","fetch","then","res","json","data","reminderTypes","reminderType","patchValue","id","forEach","element","isSelected","pet","get","PetcloudApiService","userData","getPetList","pipe","finalize","subscribe","success","length","noPetsAvailable","err","autoLogout","startTime","value","petReminder","PetAlerts","petId","alertType","toString","alertDate","reminder","Notes","showLoader","createReminder","response","hideLoader","showToast","message","pop","error","console","log","FormBuilder","NavController","Storage","Component","selector","template"],"mappings":"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","file":"src_app_add-reminders_add-reminders_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddRemindersPage } from './add-reminders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddRemindersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddRemindersPage]\n})\nexport class AddRemindersPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { PetcloudApiService } from '../api/petcloud-api.service';\nimport { User } from '../model/user';\nimport { Storage } from \"@ionic/storage\";\nimport { DatePipe } from '@angular/common';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-reminders',\n  templateUrl: './add-reminders.page.html',\n  styleUrls: ['./add-reminders.page.scss'],\n})\nexport class AddRemindersPage implements OnInit {\n\n  public addReminderForm: FormGroup;\n  public startMinDate = \"\";\n  public startMinTime: any;\n  public pets: any = [];\n  public noPetsAvailable: any;\n  public reminderTypes: any;\n\n  constructor(private formBuilder: FormBuilder,\n    public nav: NavController,\n    public storage: Storage,\n    private api: PetcloudApiService) { }\n\n  ngOnInit() {\n\n    this.startMinDate = new Date(new Date()).toISOString();\n  \n    let time = moment(new Date()).add(6, 'hours').format('hh:mm A');\n    this.startMinTime = moment(time, [\"h:mm A\"]).format(\"HH:mm\");// AEST time \n\n    \n    this.addReminderForm = this.formBuilder.group({\n      pets: [\"\",[Validators.required]],\n      date: [this.startMinDate, [Validators.required]],\n      time: [this.startMinTime, [Validators.required]],\n      reminder_type:[\"\",[Validators.required]],\n      notifi_reminder: [\"1\"],\n      alertFrequency:[\"0\"],\n      description: [\"\"]\n    });\n  }\n\n  ionViewWillEnter() {\n    this.reminders()\n    this.getPetsListing()\n  }\n\n  \n\n  public reminders() {\n    fetch('assets/JSON/reminders.json')\n      .then(res => res.json())\n      .then((data) => {\n        this.reminderTypes = data;\n      });\n  }\n\n  selectReminder(reminderType){\n\n    this.addReminderForm.patchValue({\n      reminder_type:reminderType.id\n    })\n  \n    this.reminderTypes.forEach(element => {\n      if(element.id == reminderType.id){\n        element.isSelected = true;\n      }else{\n        element.isSelected = false\n      }\n    });\n  }\n\n  selectPet(pet){\n    this.addReminderForm.patchValue({\n      pets: pet.id \n    })\n  }\n\n\n  public getPetsListing() {\n    this.storage.get(PetcloudApiService.USER).then(\n      (userData: User) => {\n\n        if (userData != null) {\n          this.api\n            .getPetList(userData.id).pipe(\n              finalize(() => {\n              })).subscribe(\n                (res: any) => {\n                  if (res.success) {\n                    if (res.pets.length) {\n                      this.noPetsAvailable = res.pets.length;\n                      this.pets = res.pets\n                    }\n                  } else {\n                    this.noPetsAvailable = 0\n                  }\n                },\n                (err: any) => {\n                  this.noPetsAvailable = 0\n                  this.api.autoLogout(err, userData.id);\n                }\n              );\n        }\n        (err: any) => {\n          this.noPetsAvailable = 0\n        }\n      }\n\n    );\n  }\n\n  addReminder() {\n\n  let startTime = moment(this.addReminderForm.value.time, 'HH:mm').format('hh:mm a');\n\n    const petReminder = {\n        PetAlerts:{\n          petId:this.addReminderForm.value.pets,\n          alertType:this.addReminderForm.value.reminder_type.toString(),\n          alertFrequency:this.addReminderForm.value.notifi_reminder,\n          alertDate:moment(this.addReminderForm.value.date).format(\"YYYY-MM-DD\"),\n          startTime,\n          reminder:this.addReminderForm.value.notifi_reminder,\n          Notes:this.addReminderForm.value.description,\n        }\n    }\n   \n\n      this.api.showLoader();\n      this.api.createReminder(petReminder).subscribe((response:any)=>{\n        this.api.hideLoader();\n          if(response.success){\n            this.api.showToast(response.message,\"3000\",\"bottom\");\n            this.nav.pop();\n          }else{\n            this.api.showToast(response.error,\"3000\",\"bottom\");\n          }\n      }),err=>{\n        this.api.autoLogout(err,petReminder);\n        console.log(\"err\", err);\n      }\n  }\n}\n","export default \"ion-button.add-reminder {\\n  margin: 0;\\n}\\n\\n.form-title {\\n  padding: 16px 0px;\\n  margin: 0;\\n  border-bottom: 1px solid #e0e0e0;\\n}\\n\\n.form-small-title {\\n  padding: 16px 0px 5px;\\n  margin: 0;\\n}\\n\\nion-item {\\n  --padding-start: 0px;\\n  --inner-padding-end: 0px;\\n}\\n\\n.bg-white {\\n  background-color: #fff;\\n}\\n\\nion-textarea {\\n  border: 1px solid #dedede;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  margin-top: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1yZW1pbmRlcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksU0FBQTtBQUNKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxTQUFBO0VBQ0EsZ0NBQUE7QUFDSjs7QUFDQTtFQUNJLHFCQUFBO0VBQ0EsU0FBQTtBQUVKOztBQUFBO0VBQ0ksb0JBQUE7RUFDQSx3QkFBQTtBQUdKOztBQWlCQTtFQUNJLHNCQUFBO0FBZEo7O0FBaUJBO0VBQ0kseUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUFkSiIsImZpbGUiOiJhZGQtcmVtaW5kZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1idXR0b24uYWRkLXJlbWluZGVyIHtcbiAgICBtYXJnaW46IDA7XG59XG5cbi5mb3JtLXRpdGxle1xuICAgIHBhZGRpbmc6IDE2cHggMHB4O1xuICAgIG1hcmdpbjogMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2UwZTBlMFxufVxuLmZvcm0tc21hbGwtdGl0bGV7XG4gICAgcGFkZGluZzogMTZweCAwcHggNXB4O1xuICAgIG1hcmdpbjogMDtcbn1cbmlvbi1pdGVtIHtcbiAgICAtLXBhZGRpbmctc3RhcnQ6IDBweDtcbiAgICAtLWlubmVyLXBhZGRpbmctZW5kOiAwcHg7XG59XG5cbi8vIC5jaGlwc3tcbi8vICAgICBpb24tY2hpcHtcbi8vICAgICAgICAgbWluLXdpZHRoOiA4MHB4O1xuLy8gICAgICAgICBoZWlnaHQ6IDMwcHg7XG4vLyAgICAgICAgIC0tYm9yZGVyLXJhZGl1czogOHB4O1xuLy8gICAgICAgICBtYXJnaW46IDEwcHggOHB4IDBweCAwcHg7XG4vLyAgICAgICAgIGJhY2tncm91bmQ6ICNlOWViZWQ7XG4vLyAgICAgICAgIGNvbG9yOiAjNzY3ZDgzO1xuLy8gICAgICAgICAmLmlvbi1jb2xvci10aGVtZXtcbi8vICAgICAgICAgICAgIC8vIGJvcmRlci1jb2xvcjogIzUyQzRCRTtcbi8vICAgICAgICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuLy8gICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZlNDE2NDtcbi8vICAgICAgICAgfVxuLy8gICAgIH1cbiAgICBcbi8vIH1cblxuLmJnLXdoaXRle1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbmlvbi10ZXh0YXJlYSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RlZGVkZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/home/tabs/sitter-listing\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Create Reminder</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"addReminderForm\\\">\\n    <h5 class=\\\"form-title\\\">\\n      Remind Me to <small class=\\\"error\\\">*</small>\\n    </h5>\\n    <!-- <h5 class=\\\"form-small-title\\\">\\n      Type <small class=\\\"error\\\">*</small>\\n    </h5> -->\\n    <ion-item>\\n      <ion-label  position=\\\"stacked\\\">Type <small class=\\\"error\\\">*</small></ion-label>\\n      <ion-select interface=\\\"action-sheet\\\" placeholder=\\\"Select your reminder type\\\"  formControlName=\\\"reminder_type\\\">\\n        <ion-select-option [value]=\\\"type.id\\\" *ngFor=\\\"let type of reminderTypes\\\" >{{type?.serviceName}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <!-- <div class=\\\"chips\\\">\\n      <ion-chip (click)=\\\"selectReminder(type)\\\" *ngFor=\\\"let type of reminderTypes\\\"\\n      [color]=\\\"type.isSelected == false ? '' : 'theme'\\\"\\n      >\\n      <ion-label>{{type?.serviceName}} </ion-label>\\n    </ion-chip>\\n    </div> -->\\n    <h5 class=\\\"form-small-title\\\">\\n      Schedule <small class=\\\"error\\\">*</small>\\n    </h5>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Start Date<small class=\\\"error\\\"></small></ion-label>\\n      <ion-datetime display-format=\\\"DDD DD MMM YYYY\\\" max=\\\"2024-12-31\\\" [min]=\\\"startMinDate\\\" picker-format=\\\"DD/MMM/YYYY\\\"\\n        placeholder=\\\"Thu 16 Jan 2019\\\" formControlName=\\\"date\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Start Time<small class=\\\"error\\\"></small></ion-label>\\n      <ion-datetime display-format=\\\"HH:mm\\\" picker-format=\\\"HH:mm\\\" placeholder=\\\"11:20 AM\\\" formControlName=\\\"time\\\">\\n      </ion-datetime>\\n    </ion-item>\\n  \\n  \\n    <div *ngIf=\\\"!pets.length\\\">\\n      <ion-text class=\\\"error\\\" routerLink=\\\"/pet-add\\\">No Pets Added. Please Add Pet <span class=\\\"link-contrast\\\"> (Click\\n          Here)*</span></ion-text>\\n    </div>\\n\\n    <h5 *ngIf=\\\"pets.length\\\" class=\\\"form-small-title\\\">\\n      Pets <small class=\\\"error\\\">*</small>\\n    </h5>\\n\\n    <div class=\\\"petList\\\">\\n      <ion-list>\\n        <ion-radio-group>\\n          <ion-item lines=\\\"full\\\" *ngFor=\\\"let pet of pets; let i=index\\\">\\n            <ion-avatar slot=\\\"start\\\" class=\\\"petProfile\\\">\\n              <ion-img [src]=\\\"pet.imagename == '' || pet.imagename == null  ? \\n            'https://dev.petcloud.com.au/img/pet_placeholder.png' \\n            : pet?.imagename\\\"></ion-img>\\n            </ion-avatar>\\n            <ion-label>{{pet?.name}}</ion-label>\\n            <ion-radio (click)=\\\"selectPet(pet)\\\" slot=\\\"end\\\" color=\\\"theme\\\"></ion-radio>\\n          </ion-item>\\n        </ion-radio-group>\\n      </ion-list>\\n      <ion-text *ngIf=\\\"addReminderForm.get('pets').hasError('required') && addReminderForm.get('pets').touched\\\"\\n        lines=\\\"none\\\" class=\\\"animated fadeInUp\\\">\\n        <p class=\\\"error\\\">Please select Pets </p>\\n      </ion-text>\\n    </div>\\n    <ion-item>\\n      <ion-label  position=\\\"stacked\\\">Reminder Frequency</ion-label>\\n      <ion-select value=\\\"6\\\" interface=\\\"action-sheet\\\" placeholder=\\\"Select your reminder frequency\\\" formControlName=\\\"alertFrequency\\\">\\n\\n        <ion-select-option value=\\\"0\\\">Weekly</ion-select-option>\\n        <ion-select-option value=\\\"1\\\">Fortnightly</ion-select-option>\\n        <ion-select-option value=\\\"2\\\">Monthy</ion-select-option>\\n        <ion-select-option value=\\\"3\\\">Quarterly</ion-select-option>\\n        <ion-select-option value=\\\"4\\\">Half-yearly</ion-select-option>\\n        <ion-select-option value=\\\"5\\\">Yearly</ion-select-option>\\n        <ion-select-option value=\\\"6\\\">Once Off</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Notification Reminder</ion-label>\\n      <ion-select interface=\\\"action-sheet\\\" color=\\\"theme\\\" formControlName=\\\"notifi_reminder\\\"\\n        placeholder=\\\"Select your reminder notification\\\">\\n        <ion-select-option value=\\\"1\\\">Send before a hour</ion-select-option>\\n        <ion-select-option value=\\\"2\\\">Send at a time</ion-select-option>\\n        <ion-select-option value=\\\"3\\\">Send one day before</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Notes</ion-label>\\n      <ion-textarea rows=\\\"3\\\" formControlName=\\\"description\\\" placeholder=\\\"Enter description\\\">\\n      </ion-textarea>\\n    </ion-item>\\n  </form>\\n</ion-content>\\n\\n\\n<ion-footer class=\\\"bg-white\\\">\\n  <ion-button\\n    class=\\\"add-reminder footer-btn\\\" \\n    expand=\\\"full\\\" \\n    (click)=\\\"addReminder()\\\"\\n    [disabled]=\\\"!addReminderForm.valid\\\"\\n  >\\n    Create</ion-button>\\n</ion-footer>\";"]}