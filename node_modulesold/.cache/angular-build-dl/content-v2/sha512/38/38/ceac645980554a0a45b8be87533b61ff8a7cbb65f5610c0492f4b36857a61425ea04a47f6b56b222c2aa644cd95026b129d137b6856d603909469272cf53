(self["webpackChunkpetcloud"] = self["webpackChunkpetcloud"] || []).push([["src_app_check-availability_check-availability_module_ts"],{

/***/ 76531:
/*!*****************************************************************!*\
  !*** ./src/app/check-availability/check-availability.module.ts ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CheckAvailabilityPageModule": function() { return /* binding */ CheckAvailabilityPageModule; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _check_availability_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./check-availability.page */ 82824);
/* harmony import */ var _ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ionic-native/date-picker/ngx */ 61194);
/* harmony import */ var _non_availability_additional_bookings_non_availability_additional_bookings_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../non-availability-additional-bookings/non-availability-additional-bookings.component */ 1620);









const routes = [
    {
        path: '',
        component: _check_availability_page__WEBPACK_IMPORTED_MODULE_0__.CheckAvailabilityPage
    }
];
let CheckAvailabilityPageModule = class CheckAvailabilityPageModule {
};
CheckAvailabilityPageModule = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.NgModule)({
        schemas: [_angular_core__WEBPACK_IMPORTED_MODULE_4__.CUSTOM_ELEMENTS_SCHEMA],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_6__.ReactiveFormsModule,
            _ionic_angular__WEBPACK_IMPORTED_MODULE_7__.IonicModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_8__.RouterModule.forChild(routes)
        ],
        declarations: [_check_availability_page__WEBPACK_IMPORTED_MODULE_0__.CheckAvailabilityPage, _non_availability_additional_bookings_non_availability_additional_bookings_component__WEBPACK_IMPORTED_MODULE_2__.NonAvailabilityAdditionalBookingsComponent],
        entryComponents: [_non_availability_additional_bookings_non_availability_additional_bookings_component__WEBPACK_IMPORTED_MODULE_2__.NonAvailabilityAdditionalBookingsComponent],
        providers: [_ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_1__.DatePicker]
    })
], CheckAvailabilityPageModule);



/***/ }),

/***/ 82824:
/*!***************************************************************!*\
  !*** ./src/app/check-availability/check-availability.page.ts ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CheckAvailabilityPage": function() { return /* binding */ CheckAvailabilityPage; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_check_availability_page_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./check-availability.page.html */ 26908);
/* harmony import */ var _check_availability_page_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check-availability.page.scss */ 86247);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _ionic_storage__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ionic/storage */ 38605);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/petcloud-api.service */ 78975);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _booking_cost_booking_cost_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../booking-cost/booking-cost.component */ 20024);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 68939);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 10826);
/* harmony import */ var _ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic-native/date-picker/ngx */ 61194);
/* harmony import */ var _non_availability_additional_bookings_non_availability_additional_bookings_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../non-availability-additional-bookings/non-availability-additional-bookings.component */ 1620);
/* harmony import */ var _analytics_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../analytics.service */ 4625);
















let CheckAvailabilityPage = class CheckAvailabilityPage {
    constructor(storage, formBuilder, api, datePicker, platform, modalCtrl, route, firebaseAnalytics) {
        this.storage = storage;
        this.formBuilder = formBuilder;
        this.api = api;
        this.datePicker = datePicker;
        this.platform = platform;
        this.modalCtrl = modalCtrl;
        this.route = route;
        this.firebaseAnalytics = firebaseAnalytics;
        this.sitterServices = { primary: [], secondary: [] };
        this.selectedPet = [];
        this.showPetError = false;
        this.isRecurringDateSelector = false;
        this.isbookingType = false;
        this.is_recurringType = false;
        this.is_booking_days = false;
        this.selectedPetIds = [];
        this.extraServicesId = [];
        this.activeService = [""];
        this.checkedItems = [];
        // Setting Min Date and Min Max Time
        this.startMinDate = "";
        this.isNoPets = false;
        //Boolean Show Hide Variables
        this.isRecurring = false;
        this.isOnceOff = false; // Show or hide Once off 
        this.hideBothDaySelector = false;
        this.isCustomDays = false;
        this.isEndDateTime = true;
        this.isMultipleDays = false;
        this.isrecurringSelected = false;
        this.isOneOffDateSelector = false;
        this.isFormValid = false;
        this.isEmailVerified = false;
        this.isPhVerifed = false;
        this.selectedServiceId = "";
        this._routerSub = rxjs__WEBPACK_IMPORTED_MODULE_7__.Subscription.EMPTY;
        this.isRebook = false;
        this.isInquireAnyWay = false;
        this.isAPILoaded = false;
        this.extraServices = [];
        this.isAppReviewed = "";
        this.days = [
            { label: "Mon", value: '1', checked: false, disabled: true },
            { label: "Tue", value: '2', checked: false, disabled: true },
            { label: "Wed", value: '3', checked: false, disabled: true },
            { label: "Thu", value: '4', checked: false, disabled: true },
            { label: "Fri", value: '5', checked: false, disabled: true },
            { label: "Sat", value: '6', checked: false, disabled: true },
            { label: "Sun", value: '7', checked: false, disabled: true },
        ];
        this.changePetToSecondaryListing = (petList, servs, index, petIndex, event) => (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            // Pushing PetId in Pet List 
            servs.petList.indexOf(petList.id) !== -1 ? servs.petList = servs.petList.filter(petId => petId != petList.id) : servs.petList.push(petList.id);
            // Checking No of Pets Selected
            // servs.noOfPetSelected = await servs.petList.length;
            this.createExtraService(servs);
        });
    }
    ngOnInit() {
        const today = new Date();
        const tomorrow = new Date(today.setDate(today.getDate() + 1)).toISOString();
        this.startMinDate = tomorrow;
        this.availabilityFrm = this.formBuilder.group({
            minderid: [this.sitterId],
            frequency: [1],
            bookingType: [],
            booking_days: [""],
            book_days: [],
            service: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            services: [[]],
            pets: [[], [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.minLength(1)]],
            start_date: [tomorrow, [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            start_time: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
            end_date: [""],
            end_time: [""],
            couponCode: [""],
            recurring_type: ["C"],
        });
        // get availability
        this.storage.get("availabilitySitter").then((siterData) => {
            if (siterData != null) {
                this.sittersDetail = siterData;
                this.sitterId = siterData.sitterId;
                this.isRebook = siterData.isRebook;
                this.days.forEach(day => {
                    let finder = siterData.operating_days.findIndex(x => x == day.value);
                    if (finder >= 0) {
                        day.disabled = false;
                    }
                });
                // add minderid.
                this.availabilityFrm.patchValue({
                    minderid: this.sitterId,
                });
                this.firebaseAnalytics.setUser();
                this.firebaseAnalytics.logEvent(_api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService.check_availability_analytics, { "sitterId": this.sitterId });
                this.sitterName = siterData.sitterName;
                this.primaryService = siterData.primaryService.filter((res) => res.active == "1");
                this.availabilityFrm.patchValue({
                    service: this.primaryService[0],
                });
                this.selectedServiceId = this.primaryService[0].id;
                let selectedServiceValue = this.sittersDetail.primaryService.filter((data) => data.id == this.primaryService[0].id);
                this.serviceChargeType = selectedServiceValue[0].serviceType.serviceChargeType;
                this.isOnceOff = selectedServiceValue[0].hideonce;
                selectedServiceValue[0].serviceType.allow_reoccurring == 1
                    ? ((this.isRecurring = true,
                        this.isRecurringDateSelector = true,
                        this.isOneOffDateSelector = false,
                        this.availabilityFrm.patchValue({
                            bookingType: "1",
                            recurring_type: "C"
                        })))
                    : (this.isRecurring = false,
                        this.isRecurringDateSelector = false,
                        this.availabilityFrm.patchValue({
                            bookingType: "0",
                            recurring_type: "C"
                        }));
                if (selectedServiceValue[0].serviceType.serviceChargeType == 3 || selectedServiceValue[0].hideonce == true) {
                    this.isEndDateTime = false;
                    this.availabilityFrm.patchValue({
                        end_date: "",
                        end_time: "",
                    });
                    this.lbl_formatedEndDate = "";
                    this.availabilityFrm.patchValue({
                        end_date: "",
                        end_time: ""
                    });
                }
                else {
                    this.isEndDateTime = true;
                }
                if (siterData.primaryService.length > 0) {
                    for (const s of siterData.primaryService) {
                        this.sitterServices.primary.push({
                            serviceId: s.id,
                            serviceName: s.serviceType.serviceName,
                        });
                    }
                }
                // display extra services.
                //push extra services to keep accordian open in activeService
                if (siterData.secondaryService.length > 0) {
                    for (const s of siterData.secondaryService) {
                        this.sitterServices.secondary.push({
                            serviceId: s.id,
                            isSelected: false,
                            serviceName: s.serviceType.serviceName,
                            occasions: 0,
                            sec_description: s.serviceType.sec_description,
                            noOfPetSelected: 0,
                        });
                        this.activeService.push('extra-' + s.id);
                    }
                }
            }
        });
        this.isFormValid = true;
        this.getInfo();
        this.getRecurringOptions();
        this.selectedMode = 0;
    }
    ionViewWillEnter() {
        // get tomorrow date.
        const today = new Date();
        const tomorrow = new Date(today.setDate(today.getDate() + 1)).toISOString();
        this.startMinDate = tomorrow;
        this.minEdDate = tomorrow;
        this.minToDate = tomorrow;
        this.startMinTime = "09:00";
        //set to time
        this.startTotime = this.startMinTime;
        this.minToDate = new Date(today.setDate(today.getDate() + 2)).toISOString();
        this.selectedPet = [];
        this.availabilityFrm.patchValue({
            start_date: this.startMinDate,
            start_time: this.startMinTime,
            end_date: this.minToDate,
            end_time: "16:00",
        });
        this.isInquireAnyWay = false;
        this.lbl_formatedStartDate = this.startMinDate;
        this.lbl_formatedEndDate = this.minToDate;
        this.endDateChangedValue = this.minToDate;
        this.isFormValid = true;
        this.getPetsListing();
    }
    /**
     * Open and close accordian
     * @param activeBlock
     */
    openActiveBlock(activeBlock) {
        let indx = this.activeService.indexOf(activeBlock);
        if (indx >= 0) {
            this.activeService.splice(indx, 1);
        }
        else {
            this.activeService.push(activeBlock);
        }
    }
    checkValidations() {
        if (this.selectedPetIds.length > 0 && this.selectedMode != null && this.availabilityFrm.value.service != "") {
            if (this.serviceChargeType == 0) {
                this.isFormValid = true;
            }
            else if (this.serviceChargeType != 0) {
                if (this.availabilityFrm.value.recurring_type == "") {
                    this.isFormValid = false;
                }
                else if (this.availabilityFrm.value.recurring_type != "") {
                    if (this.availabilityFrm.value.recurring_type == "OAW" || this.availabilityFrm.value.recurring_type == "C") {
                        if (this.availabilityFrm.value.recurring_type == "OAW") {
                            this.isMultipleDays = false;
                            if (this.availabilityFrm.value.booking_days != "") {
                                this.isFormValid = true;
                            }
                            else {
                                this.isFormValid = false;
                            }
                        }
                        if (this.availabilityFrm.value.recurring_type == "C") {
                            if (this.availabilityFrm.value.booking_days.length) {
                                this.isFormValid = true;
                            }
                            else {
                                this.isFormValid = false;
                            }
                        }
                    }
                    else if (this.availabilityFrm.value.recurring_type != "OAW" || this.availabilityFrm.value.recurring_type != "C") {
                        this.isFormValid = true;
                        this.isMultipleDays = false;
                    }
                }
            }
        }
        else {
            this.isFormValid = false;
        }
    }
    ngOnDestroy() {
        this._routerSub.unsubscribe();
    }
    getInfo() {
        this.storage.get(_api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService.USER).then((res) => {
            res.verify_phoneflag == "N"
                ? (this.isPhVerifed = false)
                : (this.isPhVerifed = true);
            res.verified == 0
                ? (this.isEmailVerified = false)
                : (this.isEmailVerified = true);
        }, (err) => {
        });
    }
    calculatePrice() {
        let start_date = new _angular_common__WEBPACK_IMPORTED_MODULE_10__.DatePipe("en-US").transform(this.availabilityFrm.value.start_date, "EEE dd MMM y");
        let end_date = new _angular_common__WEBPACK_IMPORTED_MODULE_10__.DatePipe("en-US").transform(this.availabilityFrm.value.end_date, "EEE dd MMM y");
        if (this.availabilityFrm.value.pets.length === 0) {
            this.showPetError = true;
        }
        if (this.selectedDayStatus == "ED") {
            this.availabilityFrm.patchValue({
                book_days: "",
            });
            this.saveCalculateAPI(start_date, end_date);
        }
        else if (this.selectedDayStatus == "C") {
            // Book days in comma seperated vals
            if (this.availabilityFrm.value.booking_days.length) {
                this.availabilityFrm.value.book_days = Array.prototype.map
                    .call(this.availabilityFrm.value.booking_days, function (item) {
                    return item;
                })
                    .join(",");
                this.saveCalculateAPI(start_date, end_date);
            }
            else if (this.availabilityFrm.value.booking_days == "" ||
                this.availabilityFrm.value.booking_days == null) {
                console.log("isCustomDays", this.isCustomDays);
            }
            else {
                this.saveCalculateAPI(start_date, end_date);
            }
        }
        else {
            this.saveCalculateAPI(start_date, end_date);
        }
    }
    saveCalculateAPI(start_date, end_date) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            if (this.minEdDate != null &&
                new Date(this.lbl_formatedEndDate) < new Date(this.lbl_formatedStartDate)) {
                this.api.showToast("Start Date is less then end date", "3000", "bottom");
            }
            else {
                let booking_days = [];
                if (this.availabilityFrm.value.recurring_type == "OAW") {
                    booking_days.push(this.availabilityFrm.value.booking_days);
                }
                let avilaFrm = {
                    minderid: this.availabilityFrm.value.minderid,
                    frequency: this.availabilityFrm.value.frequency,
                    service: this.availabilityFrm.value.service.id,
                    pets: this.selectedPetIds,
                    start_date,
                    end_date: end_date != null ? end_date : "",
                    start_time: this.tConvert(this.availabilityFrm.value.start_time),
                    end_time: this.availabilityFrm.value.end_time != null
                        ? this.tConvert(this.availabilityFrm.value.end_time)
                        : "",
                    book_days: this.availabilityFrm.value.book_days,
                    booking_days: this.availabilityFrm.value.recurring_type == "W" ? ['6'] :
                        this.availabilityFrm.value.recurring_type == "OAW" ? booking_days :
                            this.availabilityFrm.value.booking_days,
                    recurring_type: this.availabilityFrm.value.recurring_type,
                    bookingType: this.availabilityFrm.value.bookingType,
                    inquire_anyway: this.isInquireAnyWay == true ? "inquireanyway" : "",
                    extraservices: this.extraServiceData == undefined ? "" : this.extraServiceData,
                    check_endDate: this.isOnceOff == true ? 1 : 0
                };
                if (avilaFrm.extraservices != null) {
                    let isFormValid = [];
                    for (let [key, value] of Object.entries(avilaFrm.extraservices)) {
                        let val;
                        val = value;
                        if (val.occasions == 0 && val.pets.length == 0) {
                            yield delete avilaFrm.extraservices[key];
                        }
                        if (val.occasions > 0 && val.pets.length > 0) {
                        }
                        else if (val.occasions == 0 && val.pets.length > 0) {
                            yield isFormValid.push(key);
                            this.api.showToast("Please Select Occasions for " + val.serviceName, "3000", "bottom");
                        }
                        else if (val.occasions > 0 && val.pets.length == 0) {
                            yield isFormValid.push(key);
                            this.api.showToast("Please Select Pets for " + val.serviceName, "3000", "bottom");
                        }
                    }
                    //Calling API on Form Valid
                    (yield isFormValid.length) == 0 ? this.availabilityAPI(avilaFrm) : "";
                }
                else {
                    this.availabilityAPI(avilaFrm);
                }
            }
        });
    }
    onOccuranceChange(event, servs) {
        servs.occurance = event.detail.occurance;
        this.createExtraService(servs);
    }
    availabilityAPI(avilaFrm) {
        this.isFormValid = true;
        this.storage.set("BookingRequestForm", avilaFrm);
        this.api.showLoader();
        this.api
            .calculatePreCostPrice(avilaFrm)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
            // hide loader in success
            this.api.hideLoader();
        }))
            .subscribe((res) => (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            this.isFormValid = false;
            if (res.result) {
                res["sitterName"] = this.sitterName;
                res["serviceName"] = this.availabilityFrm.value.service;
                this.storage.set("bookingCost", res);
                this.route.navigateByUrl("/booking-cost");
            }
            else {
                // show Inquiry Pop Up If true
                if (res.inquirepopup) {
                    const modal = yield this.modalCtrl.create({
                        component: _non_availability_additional_bookings_non_availability_additional_bookings_component__WEBPACK_IMPORTED_MODULE_5__.NonAvailabilityAdditionalBookingsComponent,
                        animated: true,
                        cssClass: "modalCss",
                        componentProps: {
                            message: res.response,
                        },
                    });
                    modal.onDidDismiss().then((data) => {
                        if (data.data != "") {
                            this.isInquireAnyWay = true;
                            this.calculatePrice();
                        }
                        else {
                            this.isInquireAnyWay = false;
                        }
                    });
                    return yield modal.present();
                }
                else {
                    this.isFormValid = true;
                    this.api.showToast(res.response, 2000, "bottom");
                }
            }
        }), (err) => {
            this.isFormValid = false;
            this.api.autoLogout(err, avilaFrm);
        });
    }
    compareWithDocument(object1, object2) {
        return object1 && object2 && object2 === object1;
    }
    compareDays(object1, object2) {
        return object1 && object2 && object2 === object1;
    }
    setHideOnce(hideOnce) {
        if (hideOnce) {
            this.isEndDateTime = false;
            this.lbl_formatedEndDate = "";
            this.availabilityFrm.patchValue({
                bookingType: "1",
                recurring_type: "C",
                end_date: "",
                end_time: "",
            });
        }
        else {
            this.lbl_formatedEndDate = this.endDateChangedValue;
            this.isEndDateTime = true;
            this.availabilityFrm.patchValue({
                bookingType: "0",
                recurring_type: "C",
                end_data: this.lbl_formatedEndDate,
                end_time: "16:00",
            });
        }
    }
    primaryServiceChange(event) {
        event.detail.value.serviceType.allow_reoccurring == 1 ? (this.isRecurring = true) : (this.isRecurring = false);
        this.serviceChargeType = event.detail.value.serviceType.serviceChargeType;
        this.isOnceOff = event.detail.value.hideonce;
        console.log("service charge type", event.detail.value.serviceType.serviceChargeType);
        this.setHideOnce(event.detail.value.hideonce);
        if (event.detail.value.serviceType.serviceChargeType == 3) {
            this.isEndDateTime = false;
        }
        this.storage.get("availabilitySitter").then((siterData) => {
            if (siterData != null) {
                this.sitterServices.secondary = [];
                if (siterData.secondaryService.length > 0) {
                    for (const s of siterData.secondaryService) {
                        if (event.detail.value.serviceTypeId == '14' && s.serviceTypeId == '11') {
                            continue;
                        }
                        this.sitterServices.secondary.push({
                            serviceId: s.id,
                            isSelected: false,
                            serviceName: s.serviceType.serviceName,
                            occasions: 0,
                            sec_description: s.serviceType.sec_description,
                            noOfPetSelected: 0,
                            petListing: this.petList
                        });
                        this.activeService.push('extra-' + s.id);
                    }
                }
            }
        });
        console.log("once off", this.isOnceOff);
        this.checkValidations();
    }
    /**
     * get Recurring options get Servies and Recurring Type
     */
    getRecurringOptions() {
        this.api.showLoader();
        this.api
            .recurringOptions()
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
            this.api.hideLoader();
        }))
            .subscribe((res) => (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            this.isAPILoaded = true;
            this.recurringOptions = yield res;
            this.checkValidations();
        }), (err) => {
            this.isAPILoaded = false;
            this.api.autoLogout(err, "");
        });
    }
    selectDays(event) {
        this.selectedDayStatus = event.detail.value;
        this.availabilityFrm.patchValue({
            booking_days: "",
        });
        if (event.detail.value == "OAW" || event.detail.value == "C") {
            this.isCustomDays = true;
            if (event.detail.value == "OAW") {
                this.isMultipleDays = false;
                this.isFormValid = false;
            }
            else {
                this.isMultipleDays = true;
                this.isFormValid = false;
            }
        }
        else {
            this.availabilityFrm.patchValue({
                booking_days: "",
            });
            if (this.availabilityFrm.value.pets.length === 0) {
                this.isFormValid = false;
            }
            else if (this.availabilityFrm.value.pets.length === 1) {
                this.isFormValid = true;
            }
            this.isCustomDays = false;
        }
        this.checkValidations();
    }
    // Mode Select
    selectMode(event) {
        this.selectedMode = event.detail.value;
        if (event.detail.value == "0") {
            this.isrecurringSelected = false;
            this.isOneOffDateSelector = true;
            this.isRecurringDateSelector = false;
            this.hideBothDaySelector = false;
            // Clear Form Values
            this.availabilityFrm.patchValue({
                recurring_type: "C",
                booking_days: "",
            });
            this.isFormValid = false;
            if (this.serviceChargeType != 0) {
                this.availabilityFrm.patchValue({
                    recurring_type: "C",
                });
            }
            this.checkValidations();
        }
        else {
            this.hideBothDaySelector = true;
            this.isrecurringSelected = true;
            this.isOneOffDateSelector = false;
            this.isRecurringDateSelector = true;
            this.availabilityFrm.patchValue({
                recurring_type: "C",
                booking_days: "",
            });
            this.isFormValid = false;
            if (this.serviceChargeType != 0) {
                this.availabilityFrm.patchValue({
                    recurring_type: "C",
                });
            }
            this.checkValidations();
        }
        if (event.detail.value == "") {
            this.isbookingType = true;
        }
        else {
            this.isbookingType = false;
        }
    }
    onChange(item) {
        if (this.checkedItems.includes(item)) {
            this.checkedItems = this.checkedItems.filter((value) => value != item);
        }
        else {
            this.checkedItems.push(item);
            // }
            // console.log(this.checkedItems.toString())
        }
        this.availabilityFrm.get("booking_days").setValue(this.checkedItems);
        this.checkValidations();
    }
    //Custom Calender Selector
    customDays(event) {
        let val = event.detail.value;
        this.checkValidations();
    }
    onPetSelectChange(event, petId) {
        if (this.selectedPetIds.length > 0) {
            const index = this.selectedPetIds.indexOf(petId);
            if (index >= 0) {
                this.selectedPetIds.splice(index, 1);
            }
            else {
                this.selectedPetIds.push(petId);
            }
        }
        else {
            this.selectedPetIds.push(petId);
        }
        this.availabilityFrm.patchValue({
            pets: this.selectedPetIds,
        });
        if (this.selectedPetIds.length > 0) {
            this.checkValidations();
        }
        else {
            this.isFormValid = false;
        }
    }
    presentBookingCostModal(costData) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            const modal = yield this.modalCtrl.create({
                component: _booking_cost_booking_cost_component__WEBPACK_IMPORTED_MODULE_3__.BookingCostComponent,
                componentProps: { value: costData },
            });
            return yield modal.present();
        });
    }
    //Set End Date and Clearing Form Values of To Date
    fromDate(event) {
        this.frmDate = event;
        this.lbl_formatedStartDate = event;
        this.availabilityFrm.patchValue({
            start_date: event,
        });
        this.minToDate = "";
        this.availabilityFrm.value.end_date = "";
        // this.minToDate = event.value;
        if (this.minToDate > this.frmDate) {
            this.minToDate = this.minToDate;
            this.minEdDate = event;
            this.lbl_formatedStartDate = this.minEdDate;
        }
        else {
            this.minToDate = event;
            this.minEdDate = this.minToDate;
            this.lbl_formatedStartDate = this.minEdDate;
        }
    }
    endDateChange(event) {
        this.toDate = event;
        this.lbl_formatedEndDate = event;
        this.endDateChangedValue = event;
        this.availabilityFrm.patchValue({
            end_date: event,
        });
        if (this.minToDate > this.frmDate) {
            this.minToDate = this.minToDate;
        }
        else {
            this.minToDate = event;
            this.minEdDate = this.minToDate;
            // this.lbl_formatedStartDate = this.minEdDate;
        }
    }
    fromTimeChange(event) {
        this.startTotime = event.value;
    }
    tConvert(time) {
        // Check correct time format and split into components
        time = time
            .toString()
            .match(/^([01]\d|2[0-3])(:)([0-5]\d)(:[0-5]\d)?$/) || [time];
        if (time.length > 1) {
            // If time format correct
            time = time.slice(1); // Remove full string match value
            time[5] = +time[0] < 12 ? "AM" : "PM"; // Set AM/PM this.sitterServices.secondary[index].petListing[petIndex].isPetSelected
            time[0] = +time[0] % 12 || 12; // Adjust hours
        }
        return time.join(""); // return adjusted time or original string
    }
    getPetsListing() {
        this.selectedPetIds = [];
        let extraServicesId = [];
        this.storage.get(_api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService.USER).then((userData) => {
            this.api
                .getPetList(userData.id)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.finalize)(() => {
                this.api.hideLoader();
            }))
                .subscribe((res) => (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
                if (res.success) {
                    if (res.pets.length > 0) {
                        this.isNoPets = false;
                        this.petList = yield res.pets; // assign list object to local variable.
                        this.availabilityFrm.value.pets = [];
                        this.petList.forEach((element) => {
                            element.isPetSelected = false;
                            this.selectedPetIds.push(element.id);
                            this.availabilityFrm.value.pets.push(element.id);
                        });
                        // Push PetList in Sitter secondary service.
                        if (this.sitterServices.secondary.length) {
                            this.sitterServices.secondary.forEach((ele) => {
                                ele.petList = [];
                                ele.petListing = this.petList;
                            });
                        }
                        if (this.availabilityFrm.value.pets.length > 0 &&
                            this.selectedMode != undefined &&
                            this.selectedServiceId != "") {
                            this.isFormValid = true;
                        }
                        else {
                            this.isFormValid = false;
                        }
                        this.checkValidations();
                    }
                    else {
                        this.isNoPets = true;
                    }
                }
                else {
                    this.api.showToast("No pet found! add new family member", 200, "bottom");
                }
            }), (err) => {
                this.api.autoLogout(err, (userData.id));
            });
        }, (err) => {
        });
    }
    openFromDateCalender(date_type) {
        this.datePicker
            .show({
            date: new Date(),
            mode: "date",
            minDate: this.platform.is("ios") ? new Date() : new Date().valueOf(),
            allowOldDates: false,
            allowFutureDates: true,
            androidTheme: 5,
        })
            .then((date) => (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () { return this.fromDate(date); }), (err) => console.log("Error occurred while getting date: ", err));
    }
    openToCalender(date_type) {
        this.datePicker
            .show({
            date: new Date(),
            mode: "date",
            minDate: this.platform.is("ios") ? new Date() : new Date().valueOf(),
            allowOldDates: false,
            allowFutureDates: true,
            androidTheme: 5,
        })
            .then((date) => (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () { return this.endDateChange(date); }), (err) => console.log("Error occurred while getting date: ", err));
    }
    changeOccuranceValue(event, service) {
        if (event == "add") {
            service.occasions = parseInt(service.occasions) + 1;
        }
        else if (event == "textInput") {
            service.occasions = parseInt(service.occasions);
        }
        else if (service.occasions > 0) {
            service.occasions = parseInt(service.occasions) - 1;
        }
        else {
            service.occasions = 0;
        }
        this.createExtraService(service);
    }
    createExtraService(servs) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            if (this.extraServices.length > 0) {
                let indx = this.extraServices.indexOf(servs.serviceId);
                if (indx >= 0) {
                    if (servs.occasions == 0) {
                    }
                    this.createExtraServices();
                }
                else {
                    if (servs.occasions > 0) {
                        this.extraServices.push(servs.serviceId);
                    }
                    else {
                    }
                    this.createExtraServices();
                }
            }
            else {
                this.extraServices.push(servs.serviceId);
                this.createExtraServices();
            }
            // Checking No of Pets Selected
            servs.noOfPetSelected = yield servs.petList.length;
        });
    }
    createExtraServices() {
        this.extraServiceData = Object.assign({}, ...this.extraServices.map((key) => ({
            [key]: {
                serviceName: this.sitterServices.secondary.filter(occuranceData => key == occuranceData.serviceId).map((data) => data.serviceName)[0],
                occasions: this.sitterServices.secondary.filter(occuranceData => key == occuranceData.serviceId).map((data) => data.occasions)[0],
                pets: (this.sitterServices.secondary.filter(serviceData => key == serviceData.serviceId).map((data, index) => data.petList))[0]
            },
        })));
        console.log("extra serv", this.extraServiceData);
    }
};
CheckAvailabilityPage.ctorParameters = () => [
    { type: _ionic_storage__WEBPACK_IMPORTED_MODULE_12__.Storage },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormBuilder },
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService },
    { type: _ionic_native_date_picker_ngx__WEBPACK_IMPORTED_MODULE_4__.DatePicker },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.Platform },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_13__.ModalController },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_14__.Router },
    { type: _analytics_service__WEBPACK_IMPORTED_MODULE_6__.AnalyticsService }
];
CheckAvailabilityPage = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_15__.Component)({
        selector: "app-check-availability",
        template: _raw_loader_check_availability_page_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_check_availability_page_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], CheckAvailabilityPage);



/***/ }),

/***/ 1620:
/*!********************************************************************************************************!*\
  !*** ./src/app/non-availability-additional-bookings/non-availability-additional-bookings.component.ts ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NonAvailabilityAdditionalBookingsComponent": function() { return /* binding */ NonAvailabilityAdditionalBookingsComponent; }
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _raw_loader_non_availability_additional_bookings_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !raw-loader!./non-availability-additional-bookings.component.html */ 13548);
/* harmony import */ var _non_availability_additional_bookings_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./non-availability-additional-bookings.component.scss */ 10309);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ionic/angular */ 80476);
/* harmony import */ var _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/petcloud-api.service */ 78975);







let NonAvailabilityAdditionalBookingsComponent = class NonAvailabilityAdditionalBookingsComponent {
    constructor(model, navParam, api, router) {
        this.model = model;
        this.navParam = navParam;
        this.api = api;
        this.router = router;
    }
    ngOnInit() {
        this.message = this.navParam.get("message");
    }
    closeModal() {
        this.model.dismiss("");
    }
    inquireanyway() {
        this.model.dismiss("inquire");
        return false;
    }
    postjob() {
        this.closeModal();
        // this.router.navigateByUrl("/home/tabs/post-job")
        this.router.navigateByUrl("/home/tabs/view-job");
    }
    sitterListing() {
        this.closeModal();
        this.router.navigateByUrl("/home/tabs/sitter-listing");
    }
};
NonAvailabilityAdditionalBookingsComponent.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.ModalController },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_3__.NavParams },
    { type: _api_petcloud_api_service__WEBPACK_IMPORTED_MODULE_2__.PetcloudApiService },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__.Router }
];
NonAvailabilityAdditionalBookingsComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_6__.Component)({
        selector: 'app-non-availability-additional-bookings',
        template: _raw_loader_non_availability_additional_bookings_component_html__WEBPACK_IMPORTED_MODULE_0__.default,
        styles: [_non_availability_additional_bookings_component_scss__WEBPACK_IMPORTED_MODULE_1__.default]
    })
], NonAvailabilityAdditionalBookingsComponent);



/***/ }),

/***/ 86247:
/*!*****************************************************************!*\
  !*** ./src/app/check-availability/check-availability.page.scss ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".hori-input {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n}\n\n.settingDays {\n  border-top: 1px solid #ddd;\n  border-bottom: 1px solid #ddd;\n  padding: 10px;\n}\n\n.settingDays ion-col {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.settingDays ion-col ion-label {\n  margin-top: 4px;\n}\n\n.danger {\n  color: red;\n}\n\n.noteBorder {\n  border: 2px solid #000;\n  border-radius: 10px;\n}\n\n.sitter-services-container .sitter-card {\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.sitter-services-container .sitter-card h4 {\n  font-size: 16px;\n  padding: 16px 8px;\n  margin: 0;\n  position: relative;\n}\n\n.sitter-services-container .sitter-card h4 span {\n  color: var(--ion-color-theme-sec);\n}\n\n.sitter-services-container .sitter-card h4 img {\n  position: absolute;\n  height: 30px;\n  width: 30px;\n  right: 10px;\n  top: 11px;\n  opacity: 0.5;\n}\n\n.sitter-services-container .sitter-card .content {\n  border-top: 1px solid #e0e0e0;\n  padding: 16px 16px 0;\n  display: flex;\n  background-color: #ededed;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n\n.sitter-services-container .sitter-card .content .error-msg {\n  width: 100%;\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs {\n  display: flex;\n  flex-wrap: wrap;\n  width: calc(100% - 126px);\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs .item {\n  text-align: center;\n  margin-right: 16px;\n  margin-bottom: 16px;\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs .item .sitter-checkbox .pet-name {\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs .item .sitter-checkbox input {\n  padding: 0;\n  height: auto;\n  height: initial;\n  width: auto;\n  width: initial;\n  margin-bottom: 0;\n  display: none;\n  cursor: pointer;\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs .item .sitter-checkbox label {\n  position: relative;\n  cursor: pointer;\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs .item .sitter-checkbox label:before {\n  content: \"\";\n  -webkit-appearance: none;\n  background-color: transparent;\n  border: 2px solid #9e9e9e;\n  padding: 20px;\n  display: inline-block;\n  position: relative;\n  vertical-align: middle;\n  cursor: pointer;\n  border-radius: 100px;\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs .item .sitter-checkbox input:checked + label:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 2px;\n  left: 17px;\n  width: 8px;\n  height: 16px;\n  border: solid var(--ion-color-theme-sec);\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n.sitter-services-container .sitter-card .content .sitter-checkboxs .item .sitter-checkbox input:checked + label:before {\n  border: 2px solid var(--ion-color-theme-sec);\n}\n\n.sitter-services-container .sitter-card .content .input-numbers-container {\n  width: 110px;\n}\n\n.sitter-services-container .sitter-card .content .input-numbers-container h5 {\n  font-size: 16px;\n  margin: 0;\n  margin-bottom: 10px;\n}\n\n.sitter-services-container .sitter-card .content .input-numbers-container .input-numbers {\n  display: flex;\n  align-items: center;\n}\n\n.sitter-services-container .sitter-card .content .input-numbers-container .input-numbers input {\n  height: 35px;\n  width: 35px;\n  border: none;\n  text-align: center;\n  font-size: 12px;\n}\n\n.sitter-services-container .sitter-card .content .input-numbers-container .input-numbers ion-icon {\n  height: 25px;\n  width: 25px;\n  background-color: #aeaeae;\n  padding: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrLWF2YWlsYWJpbGl0eS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBQ0E7RUFDSSwwQkFBQTtFQUNBLDZCQUFBO0VBQ0EsYUFBQTtBQUVKOztBQUVBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7QUFDSjs7QUFDQTtFQUNJLFVBQUE7QUFFSjs7QUFBQTtFQUNJLHNCQUFBO0VBQ0EsbUJBQUE7QUFHSjs7QUFBSTtFQUNJLGdDQUFBO0FBR1I7O0FBRlE7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7QUFJWjs7QUFIWTtFQUNJLGlDQUFBO0FBS2hCOztBQUhZO0VBQ0ksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0VBQ0EsWUFBQTtBQUtoQjs7QUFGUTtFQUNJLDZCQUFBO0VBQ0Esb0JBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7RUFDQSw4QkFBQTtFQUNBLGVBQUE7QUFJWjs7QUFIWTtFQUNJLFdBQUE7QUFLaEI7O0FBSFk7RUFDSSxhQUFBO0VBQ0EsZUFBQTtFQUNBLHlCQUFBO0FBS2hCOztBQUpnQjtFQUNJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQU1wQjs7QUFKd0I7RUFDSSxlQUFBO0VBQ0EsZUFBQTtBQU01Qjs7QUFKd0I7RUFDSSxVQUFBO0VBQ0EsWUFBQTtFQUFBLGVBQUE7RUFDQSxXQUFBO0VBQUEsY0FBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7QUFNNUI7O0FBSHdCO0VBQ0ksa0JBQUE7RUFDQSxlQUFBO0FBSzVCOztBQUh3QjtFQUNJLFdBQUE7RUFDQSx3QkFBQTtFQUNBLDZCQUFBO0VBQ0EseUJBQUE7RUFDQSxhQUFBO0VBQ0EscUJBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtFQUNBLG9CQUFBO0FBSzVCOztBQUh3QjtFQUNJLFdBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EsVUFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0Esd0NBQUE7RUFDQSx5QkFBQTtFQUNBLHdCQUFBO0FBSzVCOztBQUh3QjtFQUNJLDRDQUFBO0FBSzVCOztBQUFZO0VBQ0ksWUFBQTtBQUVoQjs7QUFEZ0I7RUFDSSxlQUFBO0VBQ0EsU0FBQTtFQUNBLG1CQUFBO0FBR3BCOztBQURnQjtFQUNJLGFBQUE7RUFDQSxtQkFBQTtBQUdwQjs7QUFGb0I7RUFDSSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFJeEI7O0FBRm9CO0VBQ0ksWUFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7QUFJeEIiLCJmaWxlIjoiY2hlY2stYXZhaWxhYmlsaXR5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob3JpLWlucHV0e1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLnNldHRpbmdEYXlzIHtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuXG59XG5cbi5zZXR0aW5nRGF5cyBpb24tY29sIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnNldHRpbmdEYXlzIGlvbi1jb2wgaW9uLWxhYmVsIHtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG59XG4uZGFuZ2Vye1xuICAgIGNvbG9yOiByZWQ7XG59XG4ubm90ZUJvcmRlcntcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjMDAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG4uc2l0dGVyLXNlcnZpY2VzLWNvbnRhaW5lciB7XG4gICAgLnNpdHRlci1jYXJkIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlMGUwZTA7XG4gICAgICAgIGg0IHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHggOHB4O1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci10aGVtZS1zZWMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaW1ne1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgICAgICAgdG9wOiAxMXB4O1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuY29udGVudCB7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2UwZTBlMDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHggMTZweCAwO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGVkZWQ7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICAuZXJyb3ItbXNne1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLnNpdHRlci1jaGVja2JveHMge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxMjZweCk7XG4gICAgICAgICAgICAgICAgLml0ZW0ge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTZweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgICAgICAgICAgICAgICAgICAgLnNpdHRlci1jaGVja2JveCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAucGV0LW5hbWUge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGluaXRpYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IGluaXRpYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjOWU5ZTllO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDE3cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDhweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCB2YXIoLS1pb24tY29sb3ItdGhlbWUtc2VjKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDAgMnB4IDJweCAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci10aGVtZS1zZWMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmlucHV0LW51bWJlcnMtY29udGFpbmVyIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogMTEwcHg7XG4gICAgICAgICAgICAgICAgaDV7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuaW5wdXQtbnVtYmVycyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzVweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlvbi1pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMjVweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FlYWVhZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl19 */");

/***/ }),

/***/ 10309:
/*!**********************************************************************************************************!*\
  !*** ./src/app/non-availability-additional-bookings/non-availability-additional-bookings.component.scss ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".center {\n  display: flex !important;\n  justify-content: center !important;\n  align-items: center !important;\n  height: 100%;\n}\n\n.badge-icon {\n  display: flex;\n  justify-content: center;\n}\n\n.custom-modal-container .custom-modal .header {\n  text-align: right;\n}\n\n.custom-modal-container .custom-modal .header > div {\n  display: inline-block;\n  padding: 5px 10px;\n  padding-top: 10px;\n}\n\n.custom-modal-container .custom-modal .custom-modal-body {\n  text-align: center;\n}\n\n.custom-modal-container .custom-modal .custom-modal-body .content {\n  padding: 20px;\n  border-bottom: 1px solid #e0e0e0;\n  margin-bottom: 0px;\n  padding-top: 0px;\n}\n\n.custom-modal-container .custom-modal .custom-modal-body .content h3 {\n  font-weight: 600;\n  margin: 0;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  font-size: 18px;\n  margin-bottom: 20px;\n}\n\n.custom-modal-container .custom-modal .custom-modal-body .content p {\n  line-height: 1.5;\n}\n\n.custom-modal-container .custom-modal .custom-modal-body .button-group {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.custom-modal-container .custom-modal .custom-modal-body .button-group .btn-verify {\n  border: 2px solid #FE4164;\n  border-radius: 100px;\n  padding: 10px 20px;\n  display: inline-block;\n  color: #FE4164;\n  text-decoration: none;\n  margin-bottom: 20px;\n  width: 100%;\n}\n\n.custom-modal-container .custom-modal .custom-modal-body .button-group .btn-link-verify {\n  font-weight: 600;\n  color: #9e9e9e;\n  margin-bottom: 30px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vbi1hdmFpbGFiaWxpdHktYWRkaXRpb25hbC1ib29raW5ncy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHdCQUFBO0VBQ0Esa0NBQUE7RUFDQSw4QkFBQTtFQUNBLFlBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtBQUNKOztBQUdRO0VBQ0ksaUJBQUE7QUFBWjs7QUFDWTtFQUNJLHFCQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQUNoQjs7QUFFUTtFQUNJLGtCQUFBO0FBQVo7O0FBQ1k7RUFFSSxhQUFBO0VBQ0EsZ0NBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FBQWhCOztBQUNnQjtFQUNJLGdCQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUNwQjs7QUFDZ0I7RUFDSSxnQkFBQTtBQUNwQjs7QUFHWTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FBRGhCOztBQUVnQjtFQUNJLHlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsY0FBQTtFQUNBLHFCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0FBQXBCOztBQUVnQjtFQUNJLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLG1CQUFBO0FBQXBCIiwiZmlsZSI6Im5vbi1hdmFpbGFiaWxpdHktYWRkaXRpb25hbC1ib29raW5ncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXJ7XG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50O1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLmJhZGdlLWljb257XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5jdXN0b20tbW9kYWwtY29udGFpbmVye1xuICAgIC5jdXN0b20tbW9kYWx7XG4gICAgICAgIC5oZWFkZXJ7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgICAgID4gZGl2e1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuY3VzdG9tLW1vZGFsLWJvZHl7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAuY29udGVudHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMHB4O1xuICAgICAgICAgICAgICAgIGgze1xuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHB7XG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuYnV0dG9uLWdyb3Vwe1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgICAgIC5idG4tdmVyaWZ5e1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjRkU0MTY0O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjRkU0MTY0O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuYnRuLWxpbmstdmVyaWZ5e1xuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzllOWU5ZTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfVxufVxuIl19 */");

/***/ }),

/***/ 26908:
/*!*******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/check-availability/check-availability.page.html ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button  defaultHref=\"/home/tabs/sitter-listing\"></ion-back-button>\n        </ion-buttons>\n        <ion-title>Check Availability</ion-title>\n    </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n    \n    <ion-card color=\"theme\" *ngIf=\"isPhVerifed == false || isEmailVerified == false \" >\n        <ion-card-header>\n            <ion-card-title>To contact this sitter, you must do the following first:</ion-card-title>\n            <ion-card-subtitle *ngIf=\"isEmailVerified == false\"\n            routerLink=\"/profile-email-verify\" \n             >Verify your email address</ion-card-subtitle>\n            <ion-card-subtitle *ngIf=\"isPhVerifed == false\" \n            routerLink=\"/profile-email-verify\"  >Verify your mobile number</ion-card-subtitle>\n        </ion-card-header>\n    </ion-card>\n\n    <div *ngIf=\"isPhVerifed == true && isEmailVerified == true && isAPILoaded\">\n        <ion-card color=\"note\">\n            <ion-card-header>\n                <ion-card-title>Contact {{sitterName}} about their Availability</ion-card-title>\n                <ion-card-subtitle>This is just the start of the conversation and not a booking request yet\n                </ion-card-subtitle>\n            </ion-card-header>\n        </ion-card>\n        <form [formGroup]=\"availabilityFrm\">\n            <ion-grid>\n                <ion-row>\n                    <ion-col>\n\n                        <ion-item>\n                            <ion-label position=\"stacked\">Service\n                                <small class=\"error\">*</small>\n                            </ion-label>\n                            \n                        <ion-select\n                            [compareWith]=\"compareWithDocument\" \n                            formControlName=\"service\" \n                            (ionChange)=\"primaryServiceChange($event)\"\n                            placeholder=\"Please select a service\"\n                            interface=\"action-sheet\">\n                        \n                        <ion-select-option\n                            class=\"fs-14\"\n                            *ngFor=\"let selectedService of primaryService,let i = index\" \n                            [value]=\"selectedService\">\n                            {{selectedService?.serviceType?.serviceName}}\n                       </ion-select-option>\n                    </ion-select> \n\n                        </ion-item>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"availabilityFrm.get('service').hasError('required') && availabilityFrm.get('service').touched\">\n                            Select proper service\n                        </ion-text>\n                    </ion-col>\n                </ion-row>\n            </ion-grid>\n\n\n            <ion-row>\n                <ion-col>\n                    <ion-radio-group color=\"theme\" formControlName=\"bookingType\" (ionChange)=\"selectMode($event)\">\n                        <ion-row class=\"ion-align-items-center\">\n                            <ion-col  [hidden]=\"isOnceOff\" >\n                                <ion-item lines=\"none\">\n                                    <ion-radio color=\"theme-sec\"  value=\"0\"></ion-radio>\n                                    <ion-label> &nbsp;One Off </ion-label>\n                                </ion-item>\n                            </ion-col>\n                            <ion-col [hidden]=\"!isRecurring\">\n                                <ion-item lines=\"none\">\n                                    <ion-radio color=\"theme-sec\" value=\"1\"></ion-radio>\n                                    <ion-label> &nbsp;Weekly Recurring</ion-label>\n                                </ion-item>\n                            </ion-col>\n                        </ion-row>\n                    </ion-radio-group>\n                    <ion-text lines=\"none\" class=\"animated fadeInUp\" *ngIf=\"isbookingType\">\n                        <p class=\"error\"> Please Select Booking Type\n                        </p>\n                    </ion-text>\n                </ion-col>\n            </ion-row>\n\n\n\n            <div  *ngIf=\"serviceChargeType != '0'\">\n\n                <!--ion-row *ngIf=\"isOneOffDateSelector\">\n                    <ion-col>\n                        <ion-item>\n                            <ion-label\n                            \n                            position=\"stacked\">Select Days <small class=\"error\">*</small></ion-label>\n                            <ion-select color=\"theme\" \n                                [compareWith]=\"compareDays\" \n                                formControlName=\"recurring_type\"\n                                (ionChange)=\"selectDays($event)\"\n                                placeholder=\"Select Days\" \n                                interface=\"action-sheet\">\n                                <ion-select-option class=\"fs-14\" *ngFor=\"let recurring of recurringOptions?.oneoff\"\n                                    [value]=\"recurring?.shortName\">{{recurring?.LongName}}\n                                </ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                    </ion-col>\n                </ion-row>\n                <ion-row *ngIf=\"isRecurringDateSelector\">\n                    <ion-col>\n                        <ion-item>\n                            <ion-label position=\"stacked\">Select Days <small class=\"error\">*</small></ion-label>\n                            <ion-select color=\"theme\" \n                            formControlName=\"recurring_type\"\n                             (ionChange)=\"selectDays($event)\"\n                                placeholder=\"Select Days\" interface=\"action-sheet\">\n                                <ion-select-option class=\"fs-14\"\n                                    *ngFor=\"let recurring of recurringOptions?.recurring_type\"\n                                    [value]=\"recurring?.shortName\">{{recurring?.LongName}}\n                                </ion-select-option>\n                            </ion-select>\n                        </ion-item>\n                    </ion-col>\n                </ion-row>\n                <ion-text lines=\"none\" class=\"animated fadeInUp\" >\n                    <p class=\"error\">Select Frequency of Fun</p>\n                </ion-text-->\n\n                \n                \n                <div class=\"settingDays\" *ngIf=\"isRecurringDateSelector\">\n                    <ion-label position=\"stacked\">Select Frequency of Fun</ion-label>\n                    <ion-row >  \n                        \n                        <ion-col *ngFor=\"let day of days\">\n                            \n                            <ion-checkbox (click)=\"onChange(day.value)\" name=\"day\" [checked]=\"day.checked\" [disabled]=\"day.disabled\">\n                            </ion-checkbox>\n                            <ion-label>{{day.label}}</ion-label>\n                        </ion-col>\n                        <!--ion-item>\n                            <ion-label position=\"stacked\">Days</ion-label>\n                            <ion-select interface=\"action-sheet\" color=\"theme\" [multiple]=\"isMultipleDays == true ? true :\n                                false\" formControlName=\"booking_days\" (ionChange)=\"customDays($event)\"\n                                placeholder=\"Custom Days\">\n                                <ion-select-option value=\"0\">Sunday</ion-select-option>\n                                <ion-select-option value=\"1\">Monday</ion-select-option>\n                                <ion-select-option value=\"2\">Tuesday</ion-select-option>\n                                <ion-select-option value=\"3\">Wednesday</ion-select-option>\n                                <ion-select-option value=\"4\">Thursday</ion-select-option>\n                                <ion-select-option value=\"5\">Friday</ion-select-option>\n                                <ion-select-option value=\"6\">Saturday</ion-select-option>\n                            </ion-select>\n                        </ion-item-->\n                    \n                </ion-row>\n                </div>\n                <ion-text lines=\"none\" class=\"animated fadeInUp\" *ngIf=\"is_booking_days\">\n                    <p class=\"error\"> Please Select Days</p>\n                </ion-text>\n            </div>\n\n\n            <ion-row>\n                <ion-col>\n                    <ion-item (click)=\"openFromDateCalender('from_date')\" class=\"hori-input ion-no-padding\">\n                        <ion-label>Start Date\n                            <small class=\"error\">*</small>\n                        </ion-label>\n                        <div class=\"look-input\" >\n                            {{lbl_formatedStartDate | date: 'EEE  dd MMM yyyy'}}\n                        </div>\n                    </ion-item>\n                    <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                        *ngIf=\"availabilityFrm.get('start_date').hasError('required') && availabilityFrm.get('start_date').touched\">\n                        Select start date\n                    </ion-text>\n                </ion-col>\n            </ion-row>\n            <ion-row>\n                <ion-col>\n                    <ion-item class=\"ion-no-padding\">\n                        <ion-label>Start Time\n                            <small class=\"error\">*</small>\n                        </ion-label>\n                        <ion-datetime #startFromTimePicker display-format=\"h:mm A\" [value]=\"startMinTime\"\n                            placeholder=\"9:15 AM\" picker-format=\"h:mm A\" [min]=\"startMinTime\"\n                            max=\"2024-12-31\"\n                            formControlName=\"start_time\" value=\"startMinTime\"\n                            (ionChange)=\"fromTimeChange(startFromTimePicker)\" minuteValues=\"0,15,30,45\">\n                        </ion-datetime>\n                        <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                            *ngIf=\"availabilityFrm.get('start_time').hasError('required') && availabilityFrm.get('start_time').touched\">\n                            Select start time\n                        </ion-text>\n                    </ion-item>\n                </ion-col>\n            </ion-row>\n\n            <ion-row *ngIf=\"isEndDateTime\">\n                <ion-col>\n                    \n                    <ion-item  class=\"ion-no-padding\" (click)=\"openToCalender('end_date')\" >\n                        <div class=\"hori-input\">\n                            <div class=\"look-label\"> End Date <small class=\"error\">*</small></div>\n                            <div class=\"look-input\">\n                                {{lbl_formatedEndDate | date: 'EEE  dd MMM yyyy'}}\n                            </div>\n                        </div>\n                        \n                  \n                    </ion-item>\n\n                    <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                        *ngIf=\"availabilityFrm.get('end_date').hasError('required') && availabilityFrm.get('end_date').touched\">\n                        Select end date\n                    </ion-text>\n                </ion-col>\n            </ion-row>\n\n            <ion-row *ngIf=\"isEndDateTime\">\n                <ion-col>\n                    <ion-item class=\"ion-no-padding\">\n                        <ion-label>End Time\n                            <small class=\"error\">*</small>\n                        </ion-label>\n                        <ion-datetime display-format=\"h:mm A\" picker-format=\"h:mm A\" placeholder=\"11:15 AM\"\n                        max=\"2024-12-31\"\n                            hour-values=\"[1,2,3,4,5,6,7,8,9,10,11,12]\" formControlName=\"end_time\"\n                            minuteValues=\"0,15,30,45\"></ion-datetime>\n                    </ion-item>\n                    <ion-text lines=\"none\" class=\"animated fadeInUp error\"\n                        *ngIf=\"availabilityFrm.get('end_time').hasError('required') && availabilityFrm.get('end_time').touched\">\n                        Select end time\n                    </ion-text>\n                </ion-col>\n            </ion-row>\n\n\n            <ion-grid >\n                <ion-row>\n                    <ion-col>\n                        <h4 class=\"heading\">Pets</h4>\n                    </ion-col>\n                </ion-row>\n                <ion-row>\n                    <div *ngIf=\"isNoPets\">\n                        <ion-text class=\"error\" routerLink=\"/pet-add\">No Pets Added. Please Add Pet (Click Here)*\n                        </ion-text>\n                    </div>\n\n                    <ion-col>\n                        <ion-item *ngFor=\"let pet of petList\" class=\"ion-no-padding\">\n                            <ion-avatar slot=\"start\">\n                                <ion-img [src]=\"pet.imagename == null || pet.imagename == '' ? \n                                'https://dev.petcloud.com.au/img/pet_placeholder.png' \n                                : pet.imagename\"></ion-img>\n                            </ion-avatar>\n\n                            <ion-label> {{pet?.name}}</ion-label>\n                            <ion-checkbox slot=\"end\" color=\"theme-sec\" checked (ionChange)=\"onPetSelectChange($event,pet?.id)\">\n                            </ion-checkbox>\n                        </ion-item>\n                      \n                    </ion-col>\n                </ion-row>\n               \n            <ng-container *ngIf=\"sitterServices.secondary.length > 0\">\n                <ion-row>\n                    <ion-col>\n                        <h4 class=\"heading\">Why not add?</h4>\n                    </ion-col>\n                </ion-row>\n                <div class=\"sitter-services-container\" *ngFor=\"let servs of sitterServices.secondary; let idx = index\">\n                    <div class=\"sitter-card\">\n                        <h4 class=\"title\" (click)=\"openActiveBlock('extra-'+servs.serviceId)\" size=\"9\">\n                            {{servs?.serviceName}} <span class=\"danger\">({{servs?.noOfPetSelected}}  Pets)</span>\n                            <img src=\"../../assets/icon/circle-down.svg\" alt=\"\">\n                        </h4>\n\n                     \n                        <div class=\"content\" *ngIf=\"activeService?.indexOf('extra-'+servs.serviceId) >= 0\">\n                          \n                                <div class=\"sitter-checkboxs\">\n                                    <div class=\"item\" *ngFor=\"let pet of servs?.petListing;let petIndex = index\" >\n                                        <div class=\"sitter-checkbox\">\n                                            <input type=\"checkbox\" slot=\"end\" color=\"theme\" id=\"{{servs?.serviceId}}{{pet?.id}}\"\n                                            (change)=\"changePetToSecondaryListing(this.pet,this.servs,this.idx,this.petIndex,$event)\" />\n                                            <label for=\"{{servs?.serviceId}}{{pet?.id}}\"></label>\n                                            <div class=\"pet-name\">{{pet?.name}}</div>\n                                        </div>\n                                    </div>\n                                </div>\n    \n                         \n                            <div class=\"input-numbers-container\">\n                                <h5>Occasions</h5>\n                                <div class=\"input-numbers\">\n                                    <ion-icon (click)=\"changeOccuranceValue('remove',servs)\" name=\"remove\"></ion-icon>\n                                   <input type=\"tel\" [(ngModel)]=\"servs.occasions\"\n                                    (ngModelChange)=\"changeOccuranceValue('textInput',this.servs)\" [ngModelOptions]=\"{standalone: true}\" />\n                                <ion-icon (click)=\"changeOccuranceValue('add',servs)\" name=\"add\"></ion-icon>\n                                </div>\n                            </div>\n\n                            <div class=\"error-msg\"\n                             [ngStyle]=\"servs?.occasions != '0' && servs?.noOfPetSelected != '0' ? {'display': 'none'} : {'display': 'block'}\"\n                              *ngIf=\"activeService?.indexOf('extra-'+servs.serviceId) >= 0\">\n                            <div *ngIf=\"servs?.noOfPetSelected != '0' || servs?.occasions != '0'\">\n                                <p class=\"danger\" *ngIf=\"servs?.noOfPetSelected == 0 && servs?.occasions > 0\">Please Select Pets*</p>\n                                <p class=\"danger text-right\"*ngIf=\"servs?.occasions == 0 && servs?.noOfPetSelected > 0\">Please select the number of Occasions*</p>\n                            </div>    \n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n                \n\n            </ion-grid>\n            <ion-card class=\"noteBorder\">\n                \n                <ion-card-content *ngIf=\"!isRebook\">\n                    Hello {{sitterName | titlecase}}!<br/>\n                    Are you available on these dates?\n                    If so, can we do an initial Meet & Greet with my pet/s?\n                    If it's a good fit, I will make a payment for the booking via PetCloud straight afterwards so that\n                    we\n                    are locked into your calendar before you get booked out & my pet will be covered by insurance.<br>\n                    Thank you.\n                </ion-card-content>\n\n                <ion-card-content *ngIf=\"isRebook\">\n                    Are you available on these dates?\n                </ion-card-content>\n            </ion-card>\n        </form>\n    </div>\n\n</ion-content>\n\n<ion-footer *ngIf=\"isPhVerifed == true && isEmailVerified == true && isAPILoaded\" class=\"ion-no-border\">\n    <ion-button\n        class=\"text-capitalize fls-0 fs-18 footer-btn\" \n        expand=\"full\"\n        color=\"submit-btn\" \n        [disabled]=\"!isFormValid\"\n        (click)=\"calculatePrice()\"\n    >\n        View Price\n    </ion-button>\n</ion-footer>");

/***/ }),

/***/ 13548:
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/non-availability-additional-bookings/non-availability-additional-bookings.component.html ***!
  \************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"custom-modal-container\">\n  <div class=\"custom-modal\">\n    <div class=\"header\">\n      <div (click)=\"closeModal()\"><ion-icon slot=\"icon-only\" name=\"close\"></ion-icon></div>\n    </div>\n    <div class=\"custom-modal-body\">\n      <div class=\"content\">\n        <h3>{{message}}</h3>\n        <div class=\"button-group\">\n          <a  (click)=\"inquireanyway()\" class=\"btn-verify\">Inquire anyway</a>\n          <a  (click)=\"postjob()\" class=\"btn-verify\">Post a Job </a>\n          <a  (click)=\"sitterListing()\" class=\"btn-verify\">Search other Sitters</a>\n        </div>\n\n        \n      </div>\n    </div>\n  </div>\n</div>");

/***/ })

}]);
//# sourceMappingURL=src_app_check-availability_check-availability_module_ts-es2015.js.map