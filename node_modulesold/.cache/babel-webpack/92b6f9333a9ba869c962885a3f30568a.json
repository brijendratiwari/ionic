{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nconst _c0 = [\"path\"];\nconst DEGREE_IN_RADIANS = Math.PI / 180;\n\nclass RoundProgressService {\n  constructor(document) {\n    this.supportsSvg = !!(document && document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n    this.base = document && document.head.querySelector('base');\n    this.hasPerf = typeof window !== 'undefined' && window.performance && window.performance.now && typeof window.performance.now() === 'number';\n  }\n  /**\r\n   * Resolves a SVG color against the page's `base` tag.\r\n   */\n\n\n  resolveColor(color) {\n    if (this.base && this.base.href) {\n      const hashIndex = color.indexOf('#');\n\n      if (hashIndex > -1 && color.indexOf('url') > -1) {\n        return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);\n      }\n    }\n\n    return color;\n  }\n  /**\r\n   * Generates a timestamp.\r\n   */\n\n\n  getTimestamp() {\n    return this.hasPerf ? window.performance.now() : Date.now();\n  }\n  /**\r\n   * Generates the value for an SVG arc.\r\n   *\r\n   * @param current Current value.\r\n   * @param total Maximum value.\r\n   * @param pathRadius Radius of the SVG path.\r\n   * @param elementRadius Radius of the SVG container.\r\n   * @param isSemicircle Whether the element should be a semicircle.\r\n   */\n\n\n  getArc(current, total, pathRadius, elementRadius, isSemicircle = false) {\n    const value = Math.max(0, Math.min(current || 0, total));\n    const maxAngle = isSemicircle ? 180 : 359.9999;\n    const percentage = total === 0 ? maxAngle : value / total * maxAngle;\n\n    const start = this._polarToCartesian(elementRadius, pathRadius, percentage);\n\n    const end = this._polarToCartesian(elementRadius, pathRadius, 0);\n\n    const arcSweep = percentage <= 180 ? 0 : 1;\n    return `M ${start} A ${pathRadius} ${pathRadius} 0 ${arcSweep} 0 ${end}`;\n  }\n  /**\r\n   * Converts polar cooradinates to Cartesian.\r\n   *\r\n   * @param elementRadius Radius of the wrapper element.\r\n   * @param pathRadius Radius of the path being described.\r\n   * @param angleInDegrees Degree to be converted.\r\n   */\n\n\n  _polarToCartesian(elementRadius, pathRadius, angleInDegrees) {\n    const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n    const x = elementRadius + pathRadius * Math.cos(angleInRadians);\n    const y = elementRadius + pathRadius * Math.sin(angleInRadians);\n    return x + ' ' + y;\n  }\n\n}\n\nRoundProgressService.ɵfac = function RoundProgressService_Factory(t) {\n  return new (t || RoundProgressService)(i0.ɵɵinject(DOCUMENT, 8));\n};\n\nRoundProgressService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RoundProgressService,\n  factory: RoundProgressService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nconst ROUND_PROGRESS_DEFAULTS = new InjectionToken('ROUND_PROGRESS_DEFAULTS');\nconst ROUND_PROGRESS_DEFAULTS_PROVIDER = {\n  provide: ROUND_PROGRESS_DEFAULTS,\n  useValue: {\n    radius: 125,\n    animation: 'easeOutCubic',\n    animationDelay: null,\n    duration: 500,\n    stroke: 15,\n    color: '#45CCCE',\n    background: '#EAEAEA',\n    responsive: false,\n    clockwise: true,\n    semicircle: false,\n    rounded: false\n  }\n};\n/**\r\n * TERMS OF USE - EASING EQUATIONS\r\n * Open source under the BSD License.\r\n *\r\n * Copyright © 2001 Robert Penner\r\n * All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without modification, are permitted\r\n * provided that the following conditions are met:\r\n *\r\n * Redistributions of source code must retain the above copyright notice, this list of conditions\r\n * and the following disclaimer.\r\n *\r\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\r\n * and the following disclaimer in the documentation and/or other materials provided with the\r\n * distribution.\r\n *\r\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\r\n * products derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\r\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\r\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\n\nclass RoundProgressEase {\n  // t: current time (or position) of the neonate. This can be seconds or frames, steps,\n  // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\n  // b: beginning value of the property.\n  // c: change between the beginning and destination value of the property.\n  // d: total time of the neonate.\n  linearEase(t, b, c, d) {\n    return c * t / d + b;\n  }\n\n  easeInQuad(t, b, c, d) {\n    return c * (t /= d) * t + b;\n  }\n\n  easeOutQuad(t, b, c, d) {\n    return -c * (t /= d) * (t - 2) + b;\n  }\n\n  easeInOutQuad(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t + b;\n    }\n\n    return -c / 2 * (--t * (t - 2) - 1) + b;\n  }\n\n  easeInCubic(t, b, c, d) {\n    return c * (t /= d) * t * t + b;\n  }\n\n  easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  easeInOutCubic(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  easeInOutQuart(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  easeInOutQuint(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  easeInExpo(t, b, c, d) {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n\n    if (t === d) {\n      return b + c;\n    } // eslint-disable-next-line no-cond-assign\n\n\n    if ((t /= d / 2) < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  easeInOutCirc(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  easeInElastic(t, b, c, d) {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    } // eslint-disable-next-line no-cond-assign\n\n\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n\n    return -(a * Math.pow(2, 10 * t--) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n  }\n\n  easeOutElastic(t, b, c, d) {\n    const p = d * 0.3;\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    } // eslint-disable-next-line no-cond-assign\n\n\n    if ((t /= d) === 1) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n  }\n\n  easeInOutElastic(t, b, c, d) {\n    const p = d * (0.3 * 1.5);\n    let s = 1.70158;\n    let a = c;\n\n    if (t === 0) {\n      return b;\n    } // eslint-disable-next-line no-cond-assign\n\n\n    if ((t /= d / 2) === 2) {\n      return b + c;\n    }\n\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(c / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\n  }\n\n  easeInBack(t, b, c, d, s = 1.70158) {\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  easeOutBack(t, b, c, d, s = 1.70158) {\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  easeInOutBack(t, b, c, d, s = 1.70158) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d / 2) < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n\n  easeInBounce(t, b, c, d) {\n    return c - this.easeOutBounce(d - t, 0, c, d) + b;\n  }\n\n  easeOutBounce(t, b, c, d) {\n    // eslint-disable-next-line no-cond-assign\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    }\n\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n\n  easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n}\n\nRoundProgressEase.ɵfac = function RoundProgressEase_Factory(t) {\n  return new (t || RoundProgressEase)();\n};\n\nRoundProgressEase.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: RoundProgressEase,\n  factory: RoundProgressEase.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressEase, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass RoundProgressComponent {\n  constructor(service, easing, defaults, ngZone) {\n    this.service = service;\n    this.easing = easing;\n    this.defaults = defaults;\n    this.ngZone = ngZone;\n    this.currentLinecap = '';\n    /** Radius of the circle. */\n\n    this.radius = this.defaults.radius;\n    /** Name of the easing function to use when animating. */\n\n    this.animation = this.defaults.animation;\n    /** Time in millisconds by which to delay the animation. */\n\n    this.animationDelay = this.defaults.animationDelay;\n    /** Duration of the animation. */\n\n    this.duration = this.defaults.duration;\n    /** Width of the circle's stroke. */\n\n    this.stroke = this.defaults.stroke;\n    /** Color of the circle. */\n\n    this.color = this.defaults.color;\n    /** Background color of the circle. */\n\n    this.background = this.defaults.background;\n    /** Whether the circle should take up the width of its parent. */\n\n    this.responsive = this.defaults.responsive;\n    /** Whether the circle is filling up clockwise. */\n\n    this.clockwise = this.defaults.clockwise;\n    /** Whether to render a semicircle. */\n\n    this.semicircle = this.defaults.semicircle;\n    /** Whether the tip of the progress should be rounded off. */\n\n    this.rounded = this.defaults.rounded;\n    /** Emits when a new value has been rendered. */\n\n    this.onRender = new EventEmitter();\n    this.lastAnimationId = 0;\n  }\n  /** Animates a change in the current value. */\n\n\n  _animateChange(from, to) {\n    if (typeof from !== 'number') {\n      from = 0;\n    }\n\n    to = this._clamp(to);\n    from = this._clamp(from);\n    const self = this;\n    const changeInValue = to - from;\n    const duration = self.duration; // Avoid firing change detection for each of the animation frames.\n\n    self.ngZone.runOutsideAngular(() => {\n      const start = () => {\n        const startTime = self.service.getTimestamp();\n        const id = ++self.lastAnimationId;\n        requestAnimationFrame(function animation() {\n          const currentTime = Math.min(self.service.getTimestamp() - startTime, duration);\n          const value = self.easing[self.animation](currentTime, from, changeInValue, duration);\n\n          self._updatePath(value);\n\n          if (self.onRender.observers.length > 0) {\n            self.onRender.emit(value);\n          }\n\n          if (id === self.lastAnimationId && currentTime < duration) {\n            requestAnimationFrame(animation);\n          }\n        });\n      };\n\n      if (this.animationDelay > 0) {\n        setTimeout(start, this.animationDelay);\n      } else {\n        start();\n      }\n    });\n  }\n  /** Updates the path apperance. */\n\n\n  _updatePath(value) {\n    if (this.path) {\n      const arc = this.service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle);\n      const path = this.path.nativeElement; // Remove the rounded line cap when the value is zero,\n      // because SVG won't allow it to disappear completely.\n\n      const linecap = this.rounded && value > 0 ? 'round' : ''; // This is called on each animation frame so avoid\n      // updating the line cap unless it has changed.\n\n      if (linecap !== this.currentLinecap) {\n        this.currentLinecap = linecap;\n        path.style.strokeLinecap = linecap;\n      }\n\n      path.setAttribute('d', arc);\n    }\n  }\n  /** Clamps a value between the maximum and 0. */\n\n\n  _clamp(value) {\n    return Math.max(0, Math.min(value || 0, this.max));\n  }\n  /** Determines the SVG transforms for the <path> node. */\n\n\n  getPathTransform() {\n    const diameter = this._getDiameter();\n\n    if (this.semicircle) {\n      return this.clockwise ? `translate(0, ${diameter}) rotate(-90)` : `translate(${diameter + ',' + diameter}) rotate(90) scale(-1, 1)`;\n    } else if (!this.clockwise) {\n      return `scale(-1, 1) translate(-${diameter} 0)`;\n    }\n  }\n  /** Resolves a color through the service. */\n\n\n  resolveColor(color) {\n    return this.service.resolveColor(color);\n  }\n  /** Change detection callback. */\n\n\n  ngOnChanges(changes) {\n    if (changes.current) {\n      this._animateChange(changes.current.previousValue, changes.current.currentValue);\n    } else {\n      this._updatePath(this.current);\n    }\n  }\n  /** Diameter of the circle. */\n\n\n  _getDiameter() {\n    return this.radius * 2;\n  }\n  /** The CSS height of the wrapper element. */\n\n\n  _getElementHeight() {\n    if (!this.responsive) {\n      return (this.semicircle ? this.radius : this._getDiameter()) + 'px';\n    }\n  }\n  /** Viewbox for the SVG element. */\n\n\n  _getViewBox() {\n    const diameter = this._getDiameter();\n\n    return `0 0 ${diameter} ${this.semicircle ? this.radius : diameter}`;\n  }\n  /** Bottom padding for the wrapper element. */\n\n\n  _getPaddingBottom() {\n    if (this.responsive) {\n      return this.semicircle ? '50%' : '100%';\n    }\n  }\n\n}\n\nRoundProgressComponent.ɵfac = function RoundProgressComponent_Factory(t) {\n  return new (t || RoundProgressComponent)(i0.ɵɵdirectiveInject(RoundProgressService), i0.ɵɵdirectiveInject(RoundProgressEase), i0.ɵɵdirectiveInject(ROUND_PROGRESS_DEFAULTS), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nRoundProgressComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: RoundProgressComponent,\n  selectors: [[\"round-progress\"]],\n  viewQuery: function RoundProgressComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.path = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"progressbar\"],\n  hostVars: 11,\n  hostBindings: function RoundProgressComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuemin\", 0)(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.current);\n      i0.ɵɵstyleProp(\"width\", ctx.responsive ? \"\" : ctx._getDiameter() + \"px\")(\"height\", ctx._getElementHeight())(\"padding-bottom\", ctx._getPaddingBottom());\n      i0.ɵɵclassProp(\"responsive\", ctx.responsive);\n    }\n  },\n  inputs: {\n    current: \"current\",\n    max: \"max\",\n    radius: \"radius\",\n    animation: \"animation\",\n    animationDelay: \"animationDelay\",\n    duration: \"duration\",\n    stroke: \"stroke\",\n    color: \"color\",\n    background: \"background\",\n    responsive: \"responsive\",\n    clockwise: \"clockwise\",\n    semicircle: \"semicircle\",\n    rounded: \"rounded\"\n  },\n  outputs: {\n    onRender: \"onRender\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 13,\n  consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill\", \"none\"], [\"path\", \"\"]],\n  template: function RoundProgressComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(0, \"svg\", 0);\n      i0.ɵɵelement(1, \"circle\", 1);\n      i0.ɵɵelement(2, \"path\", 1, 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"stroke\", ctx.resolveColor(ctx.background))(\"stroke-width\", ctx.stroke);\n      i0.ɵɵattribute(\"cx\", ctx.radius)(\"cy\", ctx.radius)(\"r\", ctx.radius - ctx.stroke / 2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"stroke-width\", ctx.stroke)(\"stroke\", ctx.resolveColor(ctx.color));\n      i0.ɵɵattribute(\"transform\", ctx.getPathTransform());\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{display:block;position:relative;overflow:hidden}.responsive[_nghost-%COMP%]{width:100%;padding-bottom:100%}.responsive[_nghost-%COMP%] > svg[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressComponent, [{\n    type: Component,\n    args: [{\n      selector: 'round-progress',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        role: 'progressbar',\n        '[attr.aria-valuemin]': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'current',\n        '[style.width]': 'responsive ? \"\" : _getDiameter() + \"px\"',\n        '[style.height]': '_getElementHeight()',\n        '[style.padding-bottom]': '_getPaddingBottom()',\n        '[class.responsive]': 'responsive'\n      },\n      template: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.viewBox]=\\\"_getViewBox()\\\">\\n  <circle\\n    fill=\\\"none\\\"\\n    [attr.cx]=\\\"radius\\\"\\n    [attr.cy]=\\\"radius\\\"\\n    [attr.r]=\\\"radius - stroke / 2\\\"\\n    [style.stroke]=\\\"resolveColor(background)\\\"\\n    [style.stroke-width]=\\\"stroke\\\"/>\\n\\n  <path\\n    #path\\n    fill=\\\"none\\\"\\n    [style.stroke-width]=\\\"stroke\\\"\\n    [style.stroke]=\\\"resolveColor(color)\\\"\\n    [attr.transform]=\\\"getPathTransform()\\\"/>\\n</svg>\\n\",\n      styles: [\":host{display:block;position:relative;overflow:hidden}:host(.responsive){width:100%;padding-bottom:100%}:host(.responsive)>svg{position:absolute;width:100%;height:100%;top:0;left:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: RoundProgressService\n    }, {\n      type: RoundProgressEase\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ROUND_PROGRESS_DEFAULTS]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    path: [{\n      type: ViewChild,\n      args: ['path']\n    }],\n    current: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    animationDelay: [{\n      type: Input\n    }],\n    duration: [{\n      type: Input\n    }],\n    stroke: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    background: [{\n      type: Input\n    }],\n    responsive: [{\n      type: Input\n    }],\n    clockwise: [{\n      type: Input\n    }],\n    semicircle: [{\n      type: Input\n    }],\n    rounded: [{\n      type: Input\n    }],\n    onRender: [{\n      type: Output\n    }]\n  });\n})();\n\nclass RoundProgressModule {}\n\nRoundProgressModule.ɵfac = function RoundProgressModule_Factory(t) {\n  return new (t || RoundProgressModule)();\n};\n\nRoundProgressModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: RoundProgressModule,\n  declarations: [RoundProgressComponent],\n  exports: [RoundProgressComponent]\n});\nRoundProgressModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(RoundProgressModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [RoundProgressComponent],\n      exports: [RoundProgressComponent],\n      providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER]\n    }]\n  }], null, null);\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { ROUND_PROGRESS_DEFAULTS, ROUND_PROGRESS_DEFAULTS_PROVIDER, RoundProgressComponent, RoundProgressEase, RoundProgressModule, RoundProgressService, RoundProgressModule as RoundprogressModule }; //# sourceMappingURL=angular-svg-round-progressbar.mjs.map","map":{"version":3,"sources":["D:/babita/app-latest/node_modules/angular-svg-round-progressbar/fesm2020/angular-svg-round-progressbar.mjs"],"names":["i0","Injectable","Optional","Inject","InjectionToken","EventEmitter","Component","ChangeDetectionStrategy","ViewChild","Input","Output","NgModule","DOCUMENT","DEGREE_IN_RADIANS","Math","PI","RoundProgressService","constructor","document","supportsSvg","createElementNS","createSVGRect","base","head","querySelector","hasPerf","window","performance","now","resolveColor","color","href","hashIndex","indexOf","slice","location","getTimestamp","Date","getArc","current","total","pathRadius","elementRadius","isSemicircle","value","max","min","maxAngle","percentage","start","_polarToCartesian","end","arcSweep","angleInDegrees","angleInRadians","x","cos","y","sin","ɵfac","ɵprov","type","args","providedIn","undefined","decorators","ROUND_PROGRESS_DEFAULTS","ROUND_PROGRESS_DEFAULTS_PROVIDER","provide","useValue","radius","animation","animationDelay","duration","stroke","background","responsive","clockwise","semicircle","rounded","RoundProgressEase","linearEase","t","b","c","d","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInElastic","p","s","a","abs","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","RoundProgressComponent","service","easing","defaults","ngZone","currentLinecap","onRender","lastAnimationId","_animateChange","from","to","_clamp","self","changeInValue","runOutsideAngular","startTime","id","requestAnimationFrame","currentTime","_updatePath","observers","length","emit","setTimeout","path","arc","nativeElement","linecap","style","strokeLinecap","setAttribute","getPathTransform","diameter","_getDiameter","ngOnChanges","changes","previousValue","currentValue","_getElementHeight","_getViewBox","_getPaddingBottom","NgZone","ɵcmp","selector","changeDetection","OnPush","host","role","template","styles","RoundProgressModule","ɵmod","ɵinj","declarations","exports","providers","RoundprogressModule"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,cAAvC,EAAuDC,YAAvD,EAAqEC,SAArE,EAAgFC,uBAAhF,EAAyGC,SAAzG,EAAoHC,KAApH,EAA2HC,MAA3H,EAAmIC,QAAnI,QAAmJ,eAAnJ;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,EAAL,GAAU,GAApC;;AACA,MAAMC,oBAAN,CAA2B;AACvBC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKC,WAAL,GAAmB,CAAC,EAAED,QAAQ,IAC1BA,QAAQ,CAACE,eADS,IAElBF,QAAQ,CAACE,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,EAA8DC,aAF9C,CAApB;AAGA,SAAKC,IAAL,GAAYJ,QAAQ,IAAIA,QAAQ,CAACK,IAAT,CAAcC,aAAd,CAA4B,MAA5B,CAAxB;AACA,SAAKC,OAAL,GACI,OAAOC,MAAP,KAAkB,WAAlB,IACIA,MAAM,CAACC,WADX,IAEID,MAAM,CAACC,WAAP,CAAmBC,GAFvB,IAGI,OAAOF,MAAM,CAACC,WAAP,CAAmBC,GAAnB,EAAP,KAAoC,QAJ5C;AAKH;AACD;AACJ;AACA;;;AACIC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,QAAI,KAAKR,IAAL,IAAa,KAAKA,IAAL,CAAUS,IAA3B,EAAiC;AAC7B,YAAMC,SAAS,GAAGF,KAAK,CAACG,OAAN,CAAc,GAAd,CAAlB;;AACA,UAAID,SAAS,GAAG,CAAC,CAAb,IAAkBF,KAAK,CAACG,OAAN,CAAc,KAAd,IAAuB,CAAC,CAA9C,EAAiD;AAC7C,eAAOH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeF,SAAf,IAA4BG,QAAQ,CAACJ,IAArC,GAA4CD,KAAK,CAACI,KAAN,CAAYF,SAAZ,CAAnD;AACH;AACJ;;AACD,WAAOF,KAAP;AACH;AACD;AACJ;AACA;;;AACIM,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKX,OAAL,GAAeC,MAAM,CAACC,WAAP,CAAmBC,GAAnB,EAAf,GAA0CS,IAAI,CAACT,GAAL,EAAjD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIU,EAAAA,MAAM,CAACC,OAAD,EAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,aAA7B,EAA4CC,YAAY,GAAG,KAA3D,EAAkE;AACpE,UAAMC,KAAK,GAAG9B,IAAI,CAAC+B,GAAL,CAAS,CAAT,EAAY/B,IAAI,CAACgC,GAAL,CAASP,OAAO,IAAI,CAApB,EAAuBC,KAAvB,CAAZ,CAAd;AACA,UAAMO,QAAQ,GAAGJ,YAAY,GAAG,GAAH,GAAS,QAAtC;AACA,UAAMK,UAAU,GAAGR,KAAK,KAAK,CAAV,GAAcO,QAAd,GAA0BH,KAAK,GAAGJ,KAAT,GAAkBO,QAA9D;;AACA,UAAME,KAAK,GAAG,KAAKC,iBAAL,CAAuBR,aAAvB,EAAsCD,UAAtC,EAAkDO,UAAlD,CAAd;;AACA,UAAMG,GAAG,GAAG,KAAKD,iBAAL,CAAuBR,aAAvB,EAAsCD,UAAtC,EAAkD,CAAlD,CAAZ;;AACA,UAAMW,QAAQ,GAAGJ,UAAU,IAAI,GAAd,GAAoB,CAApB,GAAwB,CAAzC;AACA,WAAQ,KAAIC,KAAM,MAAKR,UAAW,IAAGA,UAAW,MAAKW,QAAS,MAAKD,GAAI,EAAvE;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACID,EAAAA,iBAAiB,CAACR,aAAD,EAAgBD,UAAhB,EAA4BY,cAA5B,EAA4C;AACzD,UAAMC,cAAc,GAAG,CAACD,cAAc,GAAG,EAAlB,IAAwBxC,iBAA/C;AACA,UAAM0C,CAAC,GAAGb,aAAa,GAAGD,UAAU,GAAG3B,IAAI,CAAC0C,GAAL,CAASF,cAAT,CAAvC;AACA,UAAMG,CAAC,GAAGf,aAAa,GAAGD,UAAU,GAAG3B,IAAI,CAAC4C,GAAL,CAASJ,cAAT,CAAvC;AACA,WAAOC,CAAC,GAAG,GAAJ,GAAUE,CAAjB;AACH;;AA5DsB;;AA8D3BzC,oBAAoB,CAAC2C,IAArB;AAAA,mBAAiH3C,oBAAjH,EAAuGhB,EAAvG,UAAuJY,QAAvJ;AAAA;;AACAI,oBAAoB,CAAC4C,KAArB,kBADuG5D,EACvG;AAAA,SAAqHgB,oBAArH;AAAA,WAAqHA,oBAArH;AAAA,cAAuJ;AAAvJ;;AACA;AAAA,qDAFuGhB,EAEvG,mBAA2FgB,oBAA3F,EAA6H,CAAC;AAClH6C,IAAAA,IAAI,EAAE5D,UAD4G;AAElH6D,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAD;AAF4G,GAAD,CAA7H,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAEF,MAAAA,IAAI,EAAEG,SAAR;AAAmBC,MAAAA,UAAU,EAAE,CAAC;AAC9DJ,QAAAA,IAAI,EAAE3D;AADwD,OAAD,EAE9D;AACC2D,QAAAA,IAAI,EAAE1D,MADP;AAEC2D,QAAAA,IAAI,EAAE,CAAClD,QAAD;AAFP,OAF8D;AAA/B,KAAD,CAAP;AAKlB,GARxB;AAAA;;AAUA,MAAMsD,uBAAuB,GAAG,IAAI9D,cAAJ,CAAmB,yBAAnB,CAAhC;AACA,MAAM+D,gCAAgC,GAAG;AACrCC,EAAAA,OAAO,EAAEF,uBAD4B;AAErCG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,GADF;AAENC,IAAAA,SAAS,EAAE,cAFL;AAGNC,IAAAA,cAAc,EAAE,IAHV;AAINC,IAAAA,QAAQ,EAAE,GAJJ;AAKNC,IAAAA,MAAM,EAAE,EALF;AAMN5C,IAAAA,KAAK,EAAE,SAND;AAON6C,IAAAA,UAAU,EAAE,SAPN;AAQNC,IAAAA,UAAU,EAAE,KARN;AASNC,IAAAA,SAAS,EAAE,IATL;AAUNC,IAAAA,UAAU,EAAE,KAVN;AAWNC,IAAAA,OAAO,EAAE;AAXH;AAF2B,CAAzC;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAN,CAAwB;AACpB;AACA;AACA;AACA;AACA;AACAC,EAAAA,UAAU,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACnB,WAAQD,CAAC,GAAGF,CAAL,GAAUG,CAAV,GAAcF,CAArB;AACH;;AACDG,EAAAA,UAAU,CAACJ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACnB,WAAOD,CAAC,IAAIF,CAAC,IAAIG,CAAT,CAAD,GAAeH,CAAf,GAAmBC,CAA1B;AACH;;AACDI,EAAAA,WAAW,CAACL,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACpB,WAAO,CAACD,CAAD,IAAMF,CAAC,IAAIG,CAAX,KAAiBH,CAAC,GAAG,CAArB,IAA0BC,CAAjC;AACH;;AACDK,EAAAA,aAAa,CAACN,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACtB;AACA,QAAI,CAACH,CAAC,IAAIG,CAAC,GAAG,CAAV,IAAe,CAAnB,EAAsB;AAClB,aAAQD,CAAC,GAAG,CAAL,GAAUF,CAAV,GAAcA,CAAd,GAAkBC,CAAzB;AACH;;AACD,WAAQ,CAACC,CAAD,GAAK,CAAN,IAAY,EAAEF,CAAF,IAAOA,CAAC,GAAG,CAAX,IAAgB,CAA5B,IAAiCC,CAAxC;AACH;;AACDM,EAAAA,WAAW,CAACP,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACpB,WAAOD,CAAC,IAAIF,CAAC,IAAIG,CAAT,CAAD,GAAeH,CAAf,GAAmBA,CAAnB,GAAuBC,CAA9B;AACH;;AACDO,EAAAA,YAAY,CAACR,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACrB,WAAOD,CAAC,IAAI,CAACF,CAAC,GAAGA,CAAC,GAAGG,CAAJ,GAAQ,CAAb,IAAkBH,CAAlB,GAAsBA,CAAtB,GAA0B,CAA9B,CAAD,GAAoCC,CAA3C;AACH;;AACDQ,EAAAA,cAAc,CAACT,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACvB;AACA,QAAI,CAACH,CAAC,IAAIG,CAAC,GAAG,CAAV,IAAe,CAAnB,EAAsB;AAClB,aAAQD,CAAC,GAAG,CAAL,GAAUF,CAAV,GAAcA,CAAd,GAAkBA,CAAlB,GAAsBC,CAA7B;AACH;;AACD,WAAQC,CAAC,GAAG,CAAL,IAAW,CAACF,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmB,CAA9B,IAAmCC,CAA1C;AACH;;AACDS,EAAAA,WAAW,CAACV,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACpB,WAAOD,CAAC,IAAIF,CAAC,IAAIG,CAAT,CAAD,GAAeH,CAAf,GAAmBA,CAAnB,GAAuBA,CAAvB,GAA2BC,CAAlC;AACH;;AACDU,EAAAA,YAAY,CAACX,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACrB,WAAO,CAACD,CAAD,IAAM,CAACF,CAAC,GAAGA,CAAC,GAAGG,CAAJ,GAAQ,CAAb,IAAkBH,CAAlB,GAAsBA,CAAtB,GAA0BA,CAA1B,GAA8B,CAApC,IAAyCC,CAAhD;AACH;;AACDW,EAAAA,cAAc,CAACZ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACvB;AACA,QAAI,CAACH,CAAC,IAAIG,CAAC,GAAG,CAAV,IAAe,CAAnB,EAAsB;AAClB,aAAQD,CAAC,GAAG,CAAL,GAAUF,CAAV,GAAcA,CAAd,GAAkBA,CAAlB,GAAsBA,CAAtB,GAA0BC,CAAjC;AACH;;AACD,WAAQ,CAACC,CAAD,GAAK,CAAN,IAAY,CAACF,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuB,CAAnC,IAAwCC,CAA/C;AACH;;AACDY,EAAAA,WAAW,CAACb,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACpB,WAAOD,CAAC,IAAIF,CAAC,IAAIG,CAAT,CAAD,GAAeH,CAAf,GAAmBA,CAAnB,GAAuBA,CAAvB,GAA2BA,CAA3B,GAA+BC,CAAtC;AACH;;AACDa,EAAAA,YAAY,CAACd,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACrB,WAAOD,CAAC,IAAI,CAACF,CAAC,GAAGA,CAAC,GAAGG,CAAJ,GAAQ,CAAb,IAAkBH,CAAlB,GAAsBA,CAAtB,GAA0BA,CAA1B,GAA8BA,CAA9B,GAAkC,CAAtC,CAAD,GAA4CC,CAAnD;AACH;;AACDc,EAAAA,cAAc,CAACf,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACvB;AACA,QAAI,CAACH,CAAC,IAAIG,CAAC,GAAG,CAAV,IAAe,CAAnB,EAAsB;AAClB,aAAQD,CAAC,GAAG,CAAL,GAAUF,CAAV,GAAcA,CAAd,GAAkBA,CAAlB,GAAsBA,CAAtB,GAA0BA,CAA1B,GAA8BC,CAArC;AACH;;AACD,WAAQC,CAAC,GAAG,CAAL,IAAW,CAACF,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAAnB,GAAuBA,CAAvB,GAA2B,CAAtC,IAA2CC,CAAlD;AACH;;AACDe,EAAAA,UAAU,CAAChB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACnB,WAAO,CAACD,CAAD,GAAKtE,IAAI,CAAC0C,GAAL,CAAU0B,CAAC,GAAGG,CAAL,IAAWvE,IAAI,CAACC,EAAL,GAAU,CAArB,CAAT,CAAL,GAAyCqE,CAAzC,GAA6CD,CAApD;AACH;;AACDgB,EAAAA,WAAW,CAACjB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACpB,WAAOD,CAAC,GAAGtE,IAAI,CAAC4C,GAAL,CAAUwB,CAAC,GAAGG,CAAL,IAAWvE,IAAI,CAACC,EAAL,GAAU,CAArB,CAAT,CAAJ,GAAwCoE,CAA/C;AACH;;AACDiB,EAAAA,aAAa,CAAClB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACtB,WAAQ,CAACD,CAAD,GAAK,CAAN,IAAYtE,IAAI,CAAC0C,GAAL,CAAU1C,IAAI,CAACC,EAAL,GAAUmE,CAAX,GAAgBG,CAAzB,IAA8B,CAA1C,IAA+CF,CAAtD;AACH;;AACDkB,EAAAA,UAAU,CAACnB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACnB,WAAOH,CAAC,KAAK,CAAN,GAAUC,CAAV,GAAcC,CAAC,GAAGtE,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAY,MAAMpB,CAAC,GAAGG,CAAJ,GAAQ,CAAd,CAAZ,CAAJ,GAAoCF,CAAzD;AACH;;AACDoB,EAAAA,WAAW,CAACrB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACpB,WAAOH,CAAC,KAAKG,CAAN,GAAUF,CAAC,GAAGC,CAAd,GAAkBA,CAAC,IAAI,CAACtE,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAa,CAAC,EAAD,GAAMpB,CAAP,GAAYG,CAAxB,CAAD,GAA8B,CAAlC,CAAD,GAAwCF,CAAjE;AACH;;AACDqB,EAAAA,aAAa,CAACtB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACtB,QAAIH,CAAC,KAAK,CAAV,EAAa;AACT,aAAOC,CAAP;AACH;;AACD,QAAID,CAAC,KAAKG,CAAV,EAAa;AACT,aAAOF,CAAC,GAAGC,CAAX;AACH,KANqB,CAOtB;;;AACA,QAAI,CAACF,CAAC,IAAIG,CAAC,GAAG,CAAV,IAAe,CAAnB,EAAsB;AAClB,aAAQD,CAAC,GAAG,CAAL,GAAUtE,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAY,MAAMpB,CAAC,GAAG,CAAV,CAAZ,CAAV,GAAsCC,CAA7C;AACH;;AACD,WAAQC,CAAC,GAAG,CAAL,IAAW,CAACtE,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAM,EAAEpB,CAApB,CAAD,GAA0B,CAArC,IAA0CC,CAAjD;AACH;;AACDsB,EAAAA,UAAU,CAACvB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACnB,WAAO,CAACD,CAAD,IAAMtE,IAAI,CAAC4F,IAAL,CAAU,IAAI,CAACxB,CAAC,IAAIG,CAAN,IAAWH,CAAzB,IAA8B,CAApC,IAAyCC,CAAhD;AACH;;AACDwB,EAAAA,WAAW,CAACzB,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACpB,WAAOD,CAAC,GAAGtE,IAAI,CAAC4F,IAAL,CAAU,IAAI,CAACxB,CAAC,GAAGA,CAAC,GAAGG,CAAJ,GAAQ,CAAb,IAAkBH,CAAhC,CAAJ,GAAyCC,CAAhD;AACH;;AACDyB,EAAAA,aAAa,CAAC1B,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACtB;AACA,QAAI,CAACH,CAAC,IAAIG,CAAC,GAAG,CAAV,IAAe,CAAnB,EAAsB;AAClB,aAAQ,CAACD,CAAD,GAAK,CAAN,IAAYtE,IAAI,CAAC4F,IAAL,CAAU,IAAIxB,CAAC,GAAGA,CAAlB,IAAuB,CAAnC,IAAwCC,CAA/C;AACH;;AACD,WAAQC,CAAC,GAAG,CAAL,IAAWtE,IAAI,CAAC4F,IAAL,CAAU,IAAI,CAACxB,CAAC,IAAI,CAAN,IAAWA,CAAzB,IAA8B,CAAzC,IAA8CC,CAArD;AACH;;AACD0B,EAAAA,aAAa,CAAC3B,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACtB,UAAMyB,CAAC,GAAGzB,CAAC,GAAG,GAAd;AACA,QAAI0B,CAAC,GAAG,OAAR;AACA,QAAIC,CAAC,GAAG5B,CAAR;;AACA,QAAIF,CAAC,KAAK,CAAV,EAAa;AACT,aAAOC,CAAP;AACH,KANqB,CAOtB;;;AACA,QAAI,CAACD,CAAC,IAAIG,CAAN,MAAa,CAAjB,EAAoB;AAChB,aAAOF,CAAC,GAAGC,CAAX;AACH;;AACD,QAAI4B,CAAC,GAAGlG,IAAI,CAACmG,GAAL,CAAS7B,CAAT,CAAR,EAAqB;AACjB4B,MAAAA,CAAC,GAAG5B,CAAJ;AACA2B,MAAAA,CAAC,GAAGD,CAAC,GAAG,CAAR;AACH,KAHD,MAIK;AACDC,MAAAA,CAAC,GAAID,CAAC,IAAI,IAAIhG,IAAI,CAACC,EAAb,CAAF,GAAsBD,IAAI,CAACoG,IAAL,CAAU9B,CAAC,GAAG4B,CAAd,CAA1B;AACH;;AACD,WAAO,EAAEA,CAAC,GAAGlG,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAY,KAAKpB,CAAC,EAAlB,CAAJ,GAA4BpE,IAAI,CAAC4C,GAAL,CAAU,CAACwB,CAAC,GAAGG,CAAJ,GAAQ0B,CAAT,KAAe,IAAIjG,IAAI,CAACC,EAAxB,CAAD,GAAgC+F,CAAzC,CAA9B,IAA6E3B,CAApF;AACH;;AACDgC,EAAAA,cAAc,CAACjC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACvB,UAAMyB,CAAC,GAAGzB,CAAC,GAAG,GAAd;AACA,QAAI0B,CAAC,GAAG,OAAR;AACA,QAAIC,CAAC,GAAG5B,CAAR;;AACA,QAAIF,CAAC,KAAK,CAAV,EAAa;AACT,aAAOC,CAAP;AACH,KANsB,CAOvB;;;AACA,QAAI,CAACD,CAAC,IAAIG,CAAN,MAAa,CAAjB,EAAoB;AAChB,aAAOF,CAAC,GAAGC,CAAX;AACH;;AACD,QAAI4B,CAAC,GAAGlG,IAAI,CAACmG,GAAL,CAAS7B,CAAT,CAAR,EAAqB;AACjB4B,MAAAA,CAAC,GAAG5B,CAAJ;AACA2B,MAAAA,CAAC,GAAGD,CAAC,GAAG,CAAR;AACH,KAHD,MAIK;AACDC,MAAAA,CAAC,GAAID,CAAC,IAAI,IAAIhG,IAAI,CAACC,EAAb,CAAF,GAAsBD,IAAI,CAACoG,IAAL,CAAU9B,CAAC,GAAG4B,CAAd,CAA1B;AACH;;AACD,WAAOA,CAAC,GAAGlG,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAMpB,CAAlB,CAAJ,GAA2BpE,IAAI,CAAC4C,GAAL,CAAU,CAACwB,CAAC,GAAGG,CAAJ,GAAQ0B,CAAT,KAAe,IAAIjG,IAAI,CAACC,EAAxB,CAAD,GAAgC+F,CAAzC,CAA3B,GAAyE1B,CAAzE,GAA6ED,CAApF;AACH;;AACDiC,EAAAA,gBAAgB,CAAClC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACzB,UAAMyB,CAAC,GAAGzB,CAAC,IAAI,MAAM,GAAV,CAAX;AACA,QAAI0B,CAAC,GAAG,OAAR;AACA,QAAIC,CAAC,GAAG5B,CAAR;;AACA,QAAIF,CAAC,KAAK,CAAV,EAAa;AACT,aAAOC,CAAP;AACH,KANwB,CAOzB;;;AACA,QAAI,CAACD,CAAC,IAAIG,CAAC,GAAG,CAAV,MAAiB,CAArB,EAAwB;AACpB,aAAOF,CAAC,GAAGC,CAAX;AACH;;AACD,QAAI4B,CAAC,GAAGlG,IAAI,CAACmG,GAAL,CAAS7B,CAAT,CAAR,EAAqB;AACjB4B,MAAAA,CAAC,GAAG5B,CAAJ;AACA2B,MAAAA,CAAC,GAAGD,CAAC,GAAG,CAAR;AACH,KAHD,MAIK;AACDC,MAAAA,CAAC,GAAID,CAAC,IAAI,IAAIhG,IAAI,CAACC,EAAb,CAAF,GAAsBD,IAAI,CAACoG,IAAL,CAAU9B,CAAC,GAAG4B,CAAd,CAA1B;AACH;;AACD,QAAI9B,CAAC,GAAG,CAAR,EAAW;AACP,aAAO,CAAC,GAAD,IAAQ8B,CAAC,GAAGlG,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAY,MAAMpB,CAAC,IAAI,CAAX,CAAZ,CAAJ,GACXpE,IAAI,CAAC4C,GAAL,CAAU,CAACwB,CAAC,GAAGG,CAAJ,GAAQ0B,CAAT,KAAe,IAAIjG,IAAI,CAACC,EAAxB,CAAD,GAAgC+F,CAAzC,CADG,IAC4C3B,CADnD;AAEH;;AACD,WAAO6B,CAAC,GAAGlG,IAAI,CAACwF,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,IAAOpB,CAAC,IAAI,CAAZ,CAAZ,CAAJ,GACHpE,IAAI,CAAC4C,GAAL,CAAU,CAACwB,CAAC,GAAGG,CAAJ,GAAQ0B,CAAT,KAAe,IAAIjG,IAAI,CAACC,EAAxB,CAAD,GAAgC+F,CAAzC,CADG,GAC2C,GAD3C,GACiD1B,CADjD,GACqDD,CAD5D;AAEH;;AACDkC,EAAAA,UAAU,CAACnC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa0B,CAAC,GAAG,OAAjB,EAA0B;AAChC,WAAO3B,CAAC,IAAIF,CAAC,IAAIG,CAAT,CAAD,GAAeH,CAAf,IAAoB,CAAC6B,CAAC,GAAG,CAAL,IAAU7B,CAAV,GAAc6B,CAAlC,IAAuC5B,CAA9C;AACH;;AACDmC,EAAAA,WAAW,CAACpC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa0B,CAAC,GAAG,OAAjB,EAA0B;AACjC,WAAO3B,CAAC,IAAI,CAACF,CAAC,GAAGA,CAAC,GAAGG,CAAJ,GAAQ,CAAb,IAAkBH,CAAlB,IAAuB,CAAC6B,CAAC,GAAG,CAAL,IAAU7B,CAAV,GAAc6B,CAArC,IAA0C,CAA9C,CAAD,GAAoD5B,CAA3D;AACH;;AACDoC,EAAAA,aAAa,CAACrC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa0B,CAAC,GAAG,OAAjB,EAA0B;AACnC;AACA,QAAI,CAAC7B,CAAC,IAAIG,CAAC,GAAG,CAAV,IAAe,CAAnB,EAAsB;AAClB,aAAQD,CAAC,GAAG,CAAL,IAAWF,CAAC,GAAGA,CAAJ,IAAS,CAAC,CAAC6B,CAAC,IAAI,KAAN,IAAe,CAAhB,IAAqB7B,CAArB,GAAyB6B,CAAlC,CAAX,IAAmD5B,CAA1D;AACH;;AACD,WAAQC,CAAC,GAAG,CAAL,IAAW,CAACF,CAAC,IAAI,CAAN,IAAWA,CAAX,IAAgB,CAAC,CAAC6B,CAAC,IAAI,KAAN,IAAe,CAAhB,IAAqB7B,CAArB,GAAyB6B,CAAzC,IAA8C,CAAzD,IAA8D5B,CAArE;AACH;;AACDqC,EAAAA,YAAY,CAACtC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACrB,WAAOD,CAAC,GAAG,KAAKqC,aAAL,CAAmBpC,CAAC,GAAGH,CAAvB,EAA0B,CAA1B,EAA6BE,CAA7B,EAAgCC,CAAhC,CAAJ,GAAyCF,CAAhD;AACH;;AACDsC,EAAAA,aAAa,CAACvC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACtB;AACA,QAAI,CAACH,CAAC,IAAIG,CAAN,IAAW,IAAI,IAAnB,EAAyB;AACrB,aAAOD,CAAC,IAAI,SAASF,CAAT,GAAaA,CAAjB,CAAD,GAAuBC,CAA9B;AACH,KAFD,MAGK,IAAID,CAAC,GAAG,IAAI,IAAZ,EAAkB;AACnB,aAAOE,CAAC,IAAI,UAAUF,CAAC,IAAI,MAAM,IAArB,IAA6BA,CAA7B,GAAiC,IAArC,CAAD,GAA8CC,CAArD;AACH,KAFI,MAGA,IAAID,CAAC,GAAG,MAAM,IAAd,EAAoB;AACrB,aAAOE,CAAC,IAAI,UAAUF,CAAC,IAAI,OAAO,IAAtB,IAA8BA,CAA9B,GAAkC,MAAtC,CAAD,GAAiDC,CAAxD;AACH;;AACD,WAAOC,CAAC,IAAI,UAAUF,CAAC,IAAI,QAAQ,IAAvB,IAA+BA,CAA/B,GAAmC,QAAvC,CAAD,GAAoDC,CAA3D;AACH;;AACDuC,EAAAA,eAAe,CAACxC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAa;AACxB,QAAIH,CAAC,GAAGG,CAAC,GAAG,CAAZ,EAAe;AACX,aAAO,KAAKmC,YAAL,CAAkBtC,CAAC,GAAG,CAAtB,EAAyB,CAAzB,EAA4BE,CAA5B,EAA+BC,CAA/B,IAAoC,GAApC,GAA0CF,CAAjD;AACH;;AACD,WAAO,KAAKsC,aAAL,CAAmBvC,CAAC,GAAG,CAAJ,GAAQG,CAA3B,EAA8B,CAA9B,EAAiCD,CAAjC,EAAoCC,CAApC,IAAyC,GAAzC,GAA+CD,CAAC,GAAG,GAAnD,GAAyDD,CAAhE;AACH;;AAzMmB;;AA2MxBH,iBAAiB,CAACrB,IAAlB;AAAA,mBAA8GqB,iBAA9G;AAAA;;AACAA,iBAAiB,CAACpB,KAAlB,kBAtQuG5D,EAsQvG;AAAA,SAAkHgF,iBAAlH;AAAA,WAAkHA,iBAAlH;AAAA,cAAiJ;AAAjJ;;AACA;AAAA,qDAvQuGhF,EAuQvG,mBAA2FgF,iBAA3F,EAA0H,CAAC;AAC/GnB,IAAAA,IAAI,EAAE5D,UADyG;AAE/G6D,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAD;AAFyG,GAAD,CAA1H;AAAA;;AAKA,MAAM4D,sBAAN,CAA6B;AACzB1G,EAAAA,WAAW,CAAC2G,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoC;AAC3C,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA;;AACA,SAAK1D,MAAL,GAAc,KAAKwD,QAAL,CAAcxD,MAA5B;AACA;;AACA,SAAKC,SAAL,GAAiB,KAAKuD,QAAL,CAAcvD,SAA/B;AACA;;AACA,SAAKC,cAAL,GAAsB,KAAKsD,QAAL,CAActD,cAApC;AACA;;AACA,SAAKC,QAAL,GAAgB,KAAKqD,QAAL,CAAcrD,QAA9B;AACA;;AACA,SAAKC,MAAL,GAAc,KAAKoD,QAAL,CAAcpD,MAA5B;AACA;;AACA,SAAK5C,KAAL,GAAa,KAAKgG,QAAL,CAAchG,KAA3B;AACA;;AACA,SAAK6C,UAAL,GAAkB,KAAKmD,QAAL,CAAcnD,UAAhC;AACA;;AACA,SAAKC,UAAL,GAAkB,KAAKkD,QAAL,CAAclD,UAAhC;AACA;;AACA,SAAKC,SAAL,GAAiB,KAAKiD,QAAL,CAAcjD,SAA/B;AACA;;AACA,SAAKC,UAAL,GAAkB,KAAKgD,QAAL,CAAchD,UAAhC;AACA;;AACA,SAAKC,OAAL,GAAe,KAAK+C,QAAL,CAAc/C,OAA7B;AACA;;AACA,SAAKkD,QAAL,GAAgB,IAAI5H,YAAJ,EAAhB;AACA,SAAK6H,eAAL,GAAuB,CAAvB;AACH;AACD;;;AACAC,EAAAA,cAAc,CAACC,IAAD,EAAOC,EAAP,EAAW;AACrB,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1BA,MAAAA,IAAI,GAAG,CAAP;AACH;;AACDC,IAAAA,EAAE,GAAG,KAAKC,MAAL,CAAYD,EAAZ,CAAL;AACAD,IAAAA,IAAI,GAAG,KAAKE,MAAL,CAAYF,IAAZ,CAAP;AACA,UAAMG,IAAI,GAAG,IAAb;AACA,UAAMC,aAAa,GAAGH,EAAE,GAAGD,IAA3B;AACA,UAAM3D,QAAQ,GAAG8D,IAAI,CAAC9D,QAAtB,CARqB,CASrB;;AACA8D,IAAAA,IAAI,CAACR,MAAL,CAAYU,iBAAZ,CAA8B,MAAM;AAChC,YAAMxF,KAAK,GAAG,MAAM;AAChB,cAAMyF,SAAS,GAAGH,IAAI,CAACX,OAAL,CAAaxF,YAAb,EAAlB;AACA,cAAMuG,EAAE,GAAG,EAAEJ,IAAI,CAACL,eAAlB;AACAU,QAAAA,qBAAqB,CAAC,SAASrE,SAAT,GAAqB;AACvC,gBAAMsE,WAAW,GAAG/H,IAAI,CAACgC,GAAL,CAASyF,IAAI,CAACX,OAAL,CAAaxF,YAAb,KAA8BsG,SAAvC,EAAkDjE,QAAlD,CAApB;AACA,gBAAM7B,KAAK,GAAG2F,IAAI,CAACV,MAAL,CAAYU,IAAI,CAAChE,SAAjB,EAA4BsE,WAA5B,EAAyCT,IAAzC,EAA+CI,aAA/C,EAA8D/D,QAA9D,CAAd;;AACA8D,UAAAA,IAAI,CAACO,WAAL,CAAiBlG,KAAjB;;AACA,cAAI2F,IAAI,CAACN,QAAL,CAAcc,SAAd,CAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACpCT,YAAAA,IAAI,CAACN,QAAL,CAAcgB,IAAd,CAAmBrG,KAAnB;AACH;;AACD,cAAI+F,EAAE,KAAKJ,IAAI,CAACL,eAAZ,IAA+BW,WAAW,GAAGpE,QAAjD,EAA2D;AACvDmE,YAAAA,qBAAqB,CAACrE,SAAD,CAArB;AACH;AACJ,SAVoB,CAArB;AAWH,OAdD;;AAeA,UAAI,KAAKC,cAAL,GAAsB,CAA1B,EAA6B;AACzB0E,QAAAA,UAAU,CAACjG,KAAD,EAAQ,KAAKuB,cAAb,CAAV;AACH,OAFD,MAGK;AACDvB,QAAAA,KAAK;AACR;AACJ,KAtBD;AAuBH;AACD;;;AACA6F,EAAAA,WAAW,CAAClG,KAAD,EAAQ;AACf,QAAI,KAAKuG,IAAT,EAAe;AACX,YAAMC,GAAG,GAAG,KAAKxB,OAAL,CAAatF,MAAb,CAAoBM,KAApB,EAA2B,KAAKC,GAAhC,EAAqC,KAAKyB,MAAL,GAAc,KAAKI,MAAL,GAAc,CAAjE,EAAoE,KAAKJ,MAAzE,EAAiF,KAAKQ,UAAtF,CAAZ;AACA,YAAMqE,IAAI,GAAG,KAAKA,IAAL,CAAUE,aAAvB,CAFW,CAGX;AACA;;AACA,YAAMC,OAAO,GAAG,KAAKvE,OAAL,IAAgBnC,KAAK,GAAG,CAAxB,GAA4B,OAA5B,GAAsC,EAAtD,CALW,CAMX;AACA;;AACA,UAAI0G,OAAO,KAAK,KAAKtB,cAArB,EAAqC;AACjC,aAAKA,cAAL,GAAsBsB,OAAtB;AACAH,QAAAA,IAAI,CAACI,KAAL,CAAWC,aAAX,GAA2BF,OAA3B;AACH;;AACDH,MAAAA,IAAI,CAACM,YAAL,CAAkB,GAAlB,EAAuBL,GAAvB;AACH;AACJ;AACD;;;AACAd,EAAAA,MAAM,CAAC1F,KAAD,EAAQ;AACV,WAAO9B,IAAI,CAAC+B,GAAL,CAAS,CAAT,EAAY/B,IAAI,CAACgC,GAAL,CAASF,KAAK,IAAI,CAAlB,EAAqB,KAAKC,GAA1B,CAAZ,CAAP;AACH;AACD;;;AACA6G,EAAAA,gBAAgB,GAAG;AACf,UAAMC,QAAQ,GAAG,KAAKC,YAAL,EAAjB;;AACA,QAAI,KAAK9E,UAAT,EAAqB;AACjB,aAAO,KAAKD,SAAL,GACA,gBAAe8E,QAAS,eADxB,GAEA,aAAYA,QAAQ,GAAG,GAAX,GAAiBA,QAAS,2BAF7C;AAGH,KAJD,MAKK,IAAI,CAAC,KAAK9E,SAAV,EAAqB;AACtB,aAAQ,2BAA0B8E,QAAS,KAA3C;AACH;AACJ;AACD;;;AACA9H,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,WAAO,KAAK8F,OAAL,CAAa/F,YAAb,CAA0BC,KAA1B,CAAP;AACH;AACD;;;AACA+H,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,QAAIA,OAAO,CAACvH,OAAZ,EAAqB;AACjB,WAAK4F,cAAL,CAAoB2B,OAAO,CAACvH,OAAR,CAAgBwH,aAApC,EAAmDD,OAAO,CAACvH,OAAR,CAAgByH,YAAnE;AACH,KAFD,MAGK;AACD,WAAKlB,WAAL,CAAiB,KAAKvG,OAAtB;AACH;AACJ;AACD;;;AACAqH,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKtF,MAAL,GAAc,CAArB;AACH;AACD;;;AACA2F,EAAAA,iBAAiB,GAAG;AAChB,QAAI,CAAC,KAAKrF,UAAV,EAAsB;AAClB,aAAO,CAAC,KAAKE,UAAL,GAAkB,KAAKR,MAAvB,GAAgC,KAAKsF,YAAL,EAAjC,IAAwD,IAA/D;AACH;AACJ;AACD;;;AACAM,EAAAA,WAAW,GAAG;AACV,UAAMP,QAAQ,GAAG,KAAKC,YAAL,EAAjB;;AACA,WAAQ,OAAMD,QAAS,IAAG,KAAK7E,UAAL,GAAkB,KAAKR,MAAvB,GAAgCqF,QAAS,EAAnE;AACH;AACD;;;AACAQ,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKvF,UAAT,EAAqB;AACjB,aAAO,KAAKE,UAAL,GAAkB,KAAlB,GAA0B,MAAjC;AACH;AACJ;;AAtIwB;;AAwI7B6C,sBAAsB,CAAChE,IAAvB;AAAA,mBAAmHgE,sBAAnH,EApZuG3H,EAoZvG,mBAA2JgB,oBAA3J,GApZuGhB,EAoZvG,mBAA4LgF,iBAA5L,GApZuGhF,EAoZvG,mBAA0NkE,uBAA1N,GApZuGlE,EAoZvG,mBAA8PA,EAAE,CAACoK,MAAjQ;AAAA;;AACAzC,sBAAsB,CAAC0C,IAAvB,kBArZuGrK,EAqZvG;AAAA,QAAuG2H,sBAAvG;AAAA;AAAA;AAAA;AArZuG3H,MAAAA,EAqZvG;AAAA;;AAAA;AAAA;;AArZuGA,MAAAA,EAqZvG,qBArZuGA,EAqZvG;AAAA;AAAA;AAAA,sBAAsgB,aAAtgB;AAAA;AAAA;AAAA;AArZuGA,MAAAA,EAqZvG;AArZuGA,MAAAA,EAqZvG;AArZuGA,MAAAA,EAqZvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArZuGA,EAqZvG;AAAA;AAAA;AAAA;AAAA;AAAA;AArZuGA,MAAAA,EAqZ61B,iBAAp8B;AArZuGA,MAAAA,EAqZ61B,4BAAp8B;AArZuGA,MAAAA,EAqZ46B,0BAAnhC;AArZuGA,MAAAA,EAqZ8nC,2BAAruC;AArZuGA,MAAAA,EAqZmyC,eAA14C;AAAA;;AAAA;AArZuGA,MAAAA,EAqZu4B,0CAA9+B;AArZuGA,MAAAA,EAqZsiC,aAA7oC;AArZuGA,MAAAA,EAqZsiC,oFAA7oC;AArZuGA,MAAAA,EAqZ48B,kFAAnjC;AArZuGA,MAAAA,EAqZuqC,aAA9wC;AArZuGA,MAAAA,EAqZuqC,+EAA9wC;AArZuGA,MAAAA,EAqZwvC,iDAA/1C;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAtZuGA,EAsZvG,mBAA2F2H,sBAA3F,EAA+H,CAAC;AACpH9D,IAAAA,IAAI,EAAEvD,SAD8G;AAEpHwD,IAAAA,IAAI,EAAE,CAAC;AAAEwG,MAAAA,QAAQ,EAAE,gBAAZ;AAA8BC,MAAAA,eAAe,EAAEhK,uBAAuB,CAACiK,MAAvE;AAA+EC,MAAAA,IAAI,EAAE;AAChFC,QAAAA,IAAI,EAAE,aAD0E;AAEhF,gCAAwB,GAFwD;AAGhF,gCAAwB,KAHwD;AAIhF,gCAAwB,SAJwD;AAKhF,yBAAiB,yCAL+D;AAMhF,0BAAkB,qBAN8D;AAOhF,kCAA0B,qBAPsD;AAQhF,8BAAsB;AAR0D,OAArF;AASIC,MAAAA,QAAQ,EAAE,gdATd;AASgeC,MAAAA,MAAM,EAAE,CAAC,yLAAD;AATxe,KAAD;AAF8G,GAAD,CAA/H,EAY4B,YAAY;AAAE,WAAO,CAAC;AAAE/G,MAAAA,IAAI,EAAE7C;AAAR,KAAD,EAAiC;AAAE6C,MAAAA,IAAI,EAAEmB;AAAR,KAAjC,EAA8D;AAAEnB,MAAAA,IAAI,EAAEG,SAAR;AAAmBC,MAAAA,UAAU,EAAE,CAAC;AAC3HJ,QAAAA,IAAI,EAAE1D,MADqH;AAE3H2D,QAAAA,IAAI,EAAE,CAACI,uBAAD;AAFqH,OAAD;AAA/B,KAA9D,EAG3B;AAAEL,MAAAA,IAAI,EAAE7D,EAAE,CAACoK;AAAX,KAH2B,CAAP;AAGG,GAf7C,EAe+D;AAAEjB,IAAAA,IAAI,EAAE,CAAC;AACxDtF,MAAAA,IAAI,EAAErD,SADkD;AAExDsD,MAAAA,IAAI,EAAE,CAAC,MAAD;AAFkD,KAAD,CAAR;AAG/CvB,IAAAA,OAAO,EAAE,CAAC;AACVsB,MAAAA,IAAI,EAAEpD;AADI,KAAD,CAHsC;AAK/CoC,IAAAA,GAAG,EAAE,CAAC;AACNgB,MAAAA,IAAI,EAAEpD;AADA,KAAD,CAL0C;AAO/C6D,IAAAA,MAAM,EAAE,CAAC;AACTT,MAAAA,IAAI,EAAEpD;AADG,KAAD,CAPuC;AAS/C8D,IAAAA,SAAS,EAAE,CAAC;AACZV,MAAAA,IAAI,EAAEpD;AADM,KAAD,CAToC;AAW/C+D,IAAAA,cAAc,EAAE,CAAC;AACjBX,MAAAA,IAAI,EAAEpD;AADW,KAAD,CAX+B;AAa/CgE,IAAAA,QAAQ,EAAE,CAAC;AACXZ,MAAAA,IAAI,EAAEpD;AADK,KAAD,CAbqC;AAe/CiE,IAAAA,MAAM,EAAE,CAAC;AACTb,MAAAA,IAAI,EAAEpD;AADG,KAAD,CAfuC;AAiB/CqB,IAAAA,KAAK,EAAE,CAAC;AACR+B,MAAAA,IAAI,EAAEpD;AADE,KAAD,CAjBwC;AAmB/CkE,IAAAA,UAAU,EAAE,CAAC;AACbd,MAAAA,IAAI,EAAEpD;AADO,KAAD,CAnBmC;AAqB/CmE,IAAAA,UAAU,EAAE,CAAC;AACbf,MAAAA,IAAI,EAAEpD;AADO,KAAD,CArBmC;AAuB/CoE,IAAAA,SAAS,EAAE,CAAC;AACZhB,MAAAA,IAAI,EAAEpD;AADM,KAAD,CAvBoC;AAyB/CqE,IAAAA,UAAU,EAAE,CAAC;AACbjB,MAAAA,IAAI,EAAEpD;AADO,KAAD,CAzBmC;AA2B/CsE,IAAAA,OAAO,EAAE,CAAC;AACVlB,MAAAA,IAAI,EAAEpD;AADI,KAAD,CA3BsC;AA6B/CwH,IAAAA,QAAQ,EAAE,CAAC;AACXpE,MAAAA,IAAI,EAAEnD;AADK,KAAD;AA7BqC,GAf/D;AAAA;;AAgDA,MAAMmK,mBAAN,CAA0B;;AAE1BA,mBAAmB,CAAClH,IAApB;AAAA,mBAAgHkH,mBAAhH;AAAA;;AACAA,mBAAmB,CAACC,IAApB,kBAzcuG9K,EAycvG;AAAA,QAAiH6K,mBAAjH;AAAA,iBAAqJlD,sBAArJ;AAAA,YAAwLA,sBAAxL;AAAA;AACAkD,mBAAmB,CAACE,IAApB,kBA1cuG/K,EA0cvG;AAAA,aAAiJ,CAACmE,gCAAD;AAAjJ;;AACA;AAAA,qDA3cuGnE,EA2cvG,mBAA2F6K,mBAA3F,EAA4H,CAAC;AACjHhH,IAAAA,IAAI,EAAElD,QAD2G;AAEjHmD,IAAAA,IAAI,EAAE,CAAC;AACCkH,MAAAA,YAAY,EAAE,CAACrD,sBAAD,CADf;AAECsD,MAAAA,OAAO,EAAE,CAACtD,sBAAD,CAFV;AAGCuD,MAAAA,SAAS,EAAE,CAAC/G,gCAAD;AAHZ,KAAD;AAF2G,GAAD,CAA5H;AAAA;AASA;AACA;AACA;;;AAEA,SAASD,uBAAT,EAAkCC,gCAAlC,EAAoEwD,sBAApE,EAA4F3C,iBAA5F,EAA+G6F,mBAA/G,EAAoI7J,oBAApI,EAA0J6J,mBAAmB,IAAIM,mBAAjL,G,CACA","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nconst DEGREE_IN_RADIANS = Math.PI / 180;\r\nclass RoundProgressService {\r\n    constructor(document) {\r\n        this.supportsSvg = !!(document &&\r\n            document.createElementNS &&\r\n            document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\r\n        this.base = document && document.head.querySelector('base');\r\n        this.hasPerf =\r\n            typeof window !== 'undefined' &&\r\n                window.performance &&\r\n                window.performance.now &&\r\n                typeof window.performance.now() === 'number';\r\n    }\r\n    /**\r\n     * Resolves a SVG color against the page's `base` tag.\r\n     */\r\n    resolveColor(color) {\r\n        if (this.base && this.base.href) {\r\n            const hashIndex = color.indexOf('#');\r\n            if (hashIndex > -1 && color.indexOf('url') > -1) {\r\n                return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n    /**\r\n     * Generates a timestamp.\r\n     */\r\n    getTimestamp() {\r\n        return this.hasPerf ? window.performance.now() : Date.now();\r\n    }\r\n    /**\r\n     * Generates the value for an SVG arc.\r\n     *\r\n     * @param current Current value.\r\n     * @param total Maximum value.\r\n     * @param pathRadius Radius of the SVG path.\r\n     * @param elementRadius Radius of the SVG container.\r\n     * @param isSemicircle Whether the element should be a semicircle.\r\n     */\r\n    getArc(current, total, pathRadius, elementRadius, isSemicircle = false) {\r\n        const value = Math.max(0, Math.min(current || 0, total));\r\n        const maxAngle = isSemicircle ? 180 : 359.9999;\r\n        const percentage = total === 0 ? maxAngle : (value / total) * maxAngle;\r\n        const start = this._polarToCartesian(elementRadius, pathRadius, percentage);\r\n        const end = this._polarToCartesian(elementRadius, pathRadius, 0);\r\n        const arcSweep = percentage <= 180 ? 0 : 1;\r\n        return `M ${start} A ${pathRadius} ${pathRadius} 0 ${arcSweep} 0 ${end}`;\r\n    }\r\n    /**\r\n     * Converts polar cooradinates to Cartesian.\r\n     *\r\n     * @param elementRadius Radius of the wrapper element.\r\n     * @param pathRadius Radius of the path being described.\r\n     * @param angleInDegrees Degree to be converted.\r\n     */\r\n    _polarToCartesian(elementRadius, pathRadius, angleInDegrees) {\r\n        const angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\r\n        const x = elementRadius + pathRadius * Math.cos(angleInRadians);\r\n        const y = elementRadius + pathRadius * Math.sin(angleInRadians);\r\n        return x + ' ' + y;\r\n    }\r\n}\r\nRoundProgressService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressService, deps: [{ token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nRoundProgressService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressService, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressService, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; } });\n\nconst ROUND_PROGRESS_DEFAULTS = new InjectionToken('ROUND_PROGRESS_DEFAULTS');\r\nconst ROUND_PROGRESS_DEFAULTS_PROVIDER = {\r\n    provide: ROUND_PROGRESS_DEFAULTS,\r\n    useValue: {\r\n        radius: 125,\r\n        animation: 'easeOutCubic',\r\n        animationDelay: null,\r\n        duration: 500,\r\n        stroke: 15,\r\n        color: '#45CCCE',\r\n        background: '#EAEAEA',\r\n        responsive: false,\r\n        clockwise: true,\r\n        semicircle: false,\r\n        rounded: false,\r\n    },\r\n};\n\n/**\r\n * TERMS OF USE - EASING EQUATIONS\r\n * Open source under the BSD License.\r\n *\r\n * Copyright © 2001 Robert Penner\r\n * All rights reserved.\r\n * Redistribution and use in source and binary forms, with or without modification, are permitted\r\n * provided that the following conditions are met:\r\n *\r\n * Redistributions of source code must retain the above copyright notice, this list of conditions\r\n * and the following disclaimer.\r\n *\r\n * Redistributions in binary form must reproduce the above copyright notice, this list of conditions\r\n * and the following disclaimer in the documentation and/or other materials provided with the\r\n * distribution.\r\n *\r\n * Neither the name of the author nor the names of contributors may be used to endorse or promote\r\n * products derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\r\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\r\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\r\n * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nclass RoundProgressEase {\r\n    // t: current time (or position) of the neonate. This can be seconds or frames, steps,\r\n    // seconds, ms, whatever – as long as the unit is the same as is used for the total time.\r\n    // b: beginning value of the property.\r\n    // c: change between the beginning and destination value of the property.\r\n    // d: total time of the neonate.\r\n    linearEase(t, b, c, d) {\r\n        return (c * t) / d + b;\r\n    }\r\n    easeInQuad(t, b, c, d) {\r\n        return c * (t /= d) * t + b;\r\n    }\r\n    easeOutQuad(t, b, c, d) {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    }\r\n    easeInOutQuad(t, b, c, d) {\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t + b;\r\n        }\r\n        return (-c / 2) * (--t * (t - 2) - 1) + b;\r\n    }\r\n    easeInCubic(t, b, c, d) {\r\n        return c * (t /= d) * t * t + b;\r\n    }\r\n    easeOutCubic(t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n    easeInOutCubic(t, b, c, d) {\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t * t + b;\r\n        }\r\n        return (c / 2) * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n    easeInQuart(t, b, c, d) {\r\n        return c * (t /= d) * t * t * t + b;\r\n    }\r\n    easeOutQuart(t, b, c, d) {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n    easeInOutQuart(t, b, c, d) {\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t * t * t + b;\r\n        }\r\n        return (-c / 2) * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n    easeInQuint(t, b, c, d) {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n    easeOutQuint(t, b, c, d) {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n    easeInOutQuint(t, b, c, d) {\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * t * t * t * t * t + b;\r\n        }\r\n        return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n    easeInSine(t, b, c, d) {\r\n        return -c * Math.cos((t / d) * (Math.PI / 2)) + c + b;\r\n    }\r\n    easeOutSine(t, b, c, d) {\r\n        return c * Math.sin((t / d) * (Math.PI / 2)) + b;\r\n    }\r\n    easeInOutSine(t, b, c, d) {\r\n        return (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\r\n    }\r\n    easeInExpo(t, b, c, d) {\r\n        return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n    }\r\n    easeOutExpo(t, b, c, d) {\r\n        return t === d ? b + c : c * (-Math.pow(2, (-10 * t) / d) + 1) + b;\r\n    }\r\n    easeInOutExpo(t, b, c, d) {\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        if (t === d) {\r\n            return b + c;\r\n        }\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * Math.pow(2, 10 * (t - 1)) + b;\r\n        }\r\n        return (c / 2) * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n    easeInCirc(t, b, c, d) {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n    easeOutCirc(t, b, c, d) {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n    easeInOutCirc(t, b, c, d) {\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) < 1) {\r\n            return (-c / 2) * (Math.sqrt(1 - t * t) - 1) + b;\r\n        }\r\n        return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n    easeInElastic(t, b, c, d) {\r\n        const p = d * 0.3;\r\n        let s = 1.70158;\r\n        let a = c;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d) === 1) {\r\n            return b + c;\r\n        }\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        return -(a * Math.pow(2, 10 * t--) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\r\n    }\r\n    easeOutElastic(t, b, c, d) {\r\n        const p = d * 0.3;\r\n        let s = 1.70158;\r\n        let a = c;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d) === 1) {\r\n            return b + c;\r\n        }\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        return a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) + c + b;\r\n    }\r\n    easeInOutElastic(t, b, c, d) {\r\n        const p = d * (0.3 * 1.5);\r\n        let s = 1.70158;\r\n        let a = c;\r\n        if (t === 0) {\r\n            return b;\r\n        }\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) === 2) {\r\n            return b + c;\r\n        }\r\n        if (a < Math.abs(c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\r\n        }\r\n        if (t < 1) {\r\n            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) *\r\n                Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\r\n        }\r\n        return a * Math.pow(2, -10 * (t -= 1)) *\r\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p) * 0.5 + c + b;\r\n    }\r\n    easeInBack(t, b, c, d, s = 1.70158) {\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n    easeOutBack(t, b, c, d, s = 1.70158) {\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n    easeInOutBack(t, b, c, d, s = 1.70158) {\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d / 2) < 1) {\r\n            return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\r\n        }\r\n        return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\r\n    }\r\n    easeInBounce(t, b, c, d) {\r\n        return c - this.easeOutBounce(d - t, 0, c, d) + b;\r\n    }\r\n    easeOutBounce(t, b, c, d) {\r\n        // eslint-disable-next-line no-cond-assign\r\n        if ((t /= d) < 1 / 2.75) {\r\n            return c * (7.5625 * t * t) + b;\r\n        }\r\n        else if (t < 2 / 2.75) {\r\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\r\n        }\r\n        else if (t < 2.5 / 2.75) {\r\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\r\n        }\r\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\r\n    }\r\n    easeInOutBounce(t, b, c, d) {\r\n        if (t < d / 2) {\r\n            return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;\r\n        }\r\n        return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\r\n    }\r\n}\r\nRoundProgressEase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressEase, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nRoundProgressEase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressEase, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressEase, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }] });\n\nclass RoundProgressComponent {\r\n    constructor(service, easing, defaults, ngZone) {\r\n        this.service = service;\r\n        this.easing = easing;\r\n        this.defaults = defaults;\r\n        this.ngZone = ngZone;\r\n        this.currentLinecap = '';\r\n        /** Radius of the circle. */\r\n        this.radius = this.defaults.radius;\r\n        /** Name of the easing function to use when animating. */\r\n        this.animation = this.defaults.animation;\r\n        /** Time in millisconds by which to delay the animation. */\r\n        this.animationDelay = this.defaults.animationDelay;\r\n        /** Duration of the animation. */\r\n        this.duration = this.defaults.duration;\r\n        /** Width of the circle's stroke. */\r\n        this.stroke = this.defaults.stroke;\r\n        /** Color of the circle. */\r\n        this.color = this.defaults.color;\r\n        /** Background color of the circle. */\r\n        this.background = this.defaults.background;\r\n        /** Whether the circle should take up the width of its parent. */\r\n        this.responsive = this.defaults.responsive;\r\n        /** Whether the circle is filling up clockwise. */\r\n        this.clockwise = this.defaults.clockwise;\r\n        /** Whether to render a semicircle. */\r\n        this.semicircle = this.defaults.semicircle;\r\n        /** Whether the tip of the progress should be rounded off. */\r\n        this.rounded = this.defaults.rounded;\r\n        /** Emits when a new value has been rendered. */\r\n        this.onRender = new EventEmitter();\r\n        this.lastAnimationId = 0;\r\n    }\r\n    /** Animates a change in the current value. */\r\n    _animateChange(from, to) {\r\n        if (typeof from !== 'number') {\r\n            from = 0;\r\n        }\r\n        to = this._clamp(to);\r\n        from = this._clamp(from);\r\n        const self = this;\r\n        const changeInValue = to - from;\r\n        const duration = self.duration;\r\n        // Avoid firing change detection for each of the animation frames.\r\n        self.ngZone.runOutsideAngular(() => {\r\n            const start = () => {\r\n                const startTime = self.service.getTimestamp();\r\n                const id = ++self.lastAnimationId;\r\n                requestAnimationFrame(function animation() {\r\n                    const currentTime = Math.min(self.service.getTimestamp() - startTime, duration);\r\n                    const value = self.easing[self.animation](currentTime, from, changeInValue, duration);\r\n                    self._updatePath(value);\r\n                    if (self.onRender.observers.length > 0) {\r\n                        self.onRender.emit(value);\r\n                    }\r\n                    if (id === self.lastAnimationId && currentTime < duration) {\r\n                        requestAnimationFrame(animation);\r\n                    }\r\n                });\r\n            };\r\n            if (this.animationDelay > 0) {\r\n                setTimeout(start, this.animationDelay);\r\n            }\r\n            else {\r\n                start();\r\n            }\r\n        });\r\n    }\r\n    /** Updates the path apperance. */\r\n    _updatePath(value) {\r\n        if (this.path) {\r\n            const arc = this.service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle);\r\n            const path = this.path.nativeElement;\r\n            // Remove the rounded line cap when the value is zero,\r\n            // because SVG won't allow it to disappear completely.\r\n            const linecap = this.rounded && value > 0 ? 'round' : '';\r\n            // This is called on each animation frame so avoid\r\n            // updating the line cap unless it has changed.\r\n            if (linecap !== this.currentLinecap) {\r\n                this.currentLinecap = linecap;\r\n                path.style.strokeLinecap = linecap;\r\n            }\r\n            path.setAttribute('d', arc);\r\n        }\r\n    }\r\n    /** Clamps a value between the maximum and 0. */\r\n    _clamp(value) {\r\n        return Math.max(0, Math.min(value || 0, this.max));\r\n    }\r\n    /** Determines the SVG transforms for the <path> node. */\r\n    getPathTransform() {\r\n        const diameter = this._getDiameter();\r\n        if (this.semicircle) {\r\n            return this.clockwise\r\n                ? `translate(0, ${diameter}) rotate(-90)`\r\n                : `translate(${diameter + ',' + diameter}) rotate(90) scale(-1, 1)`;\r\n        }\r\n        else if (!this.clockwise) {\r\n            return `scale(-1, 1) translate(-${diameter} 0)`;\r\n        }\r\n    }\r\n    /** Resolves a color through the service. */\r\n    resolveColor(color) {\r\n        return this.service.resolveColor(color);\r\n    }\r\n    /** Change detection callback. */\r\n    ngOnChanges(changes) {\r\n        if (changes.current) {\r\n            this._animateChange(changes.current.previousValue, changes.current.currentValue);\r\n        }\r\n        else {\r\n            this._updatePath(this.current);\r\n        }\r\n    }\r\n    /** Diameter of the circle. */\r\n    _getDiameter() {\r\n        return this.radius * 2;\r\n    }\r\n    /** The CSS height of the wrapper element. */\r\n    _getElementHeight() {\r\n        if (!this.responsive) {\r\n            return (this.semicircle ? this.radius : this._getDiameter()) + 'px';\r\n        }\r\n    }\r\n    /** Viewbox for the SVG element. */\r\n    _getViewBox() {\r\n        const diameter = this._getDiameter();\r\n        return `0 0 ${diameter} ${this.semicircle ? this.radius : diameter}`;\r\n    }\r\n    /** Bottom padding for the wrapper element. */\r\n    _getPaddingBottom() {\r\n        if (this.responsive) {\r\n            return this.semicircle ? '50%' : '100%';\r\n        }\r\n    }\r\n}\r\nRoundProgressComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressComponent, deps: [{ token: RoundProgressService }, { token: RoundProgressEase }, { token: ROUND_PROGRESS_DEFAULTS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nRoundProgressComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: RoundProgressComponent, selector: \"round-progress\", inputs: { current: \"current\", max: \"max\", radius: \"radius\", animation: \"animation\", animationDelay: \"animationDelay\", duration: \"duration\", stroke: \"stroke\", color: \"color\", background: \"background\", responsive: \"responsive\", clockwise: \"clockwise\", semicircle: \"semicircle\", rounded: \"rounded\" }, outputs: { onRender: \"onRender\" }, host: { attributes: { \"role\": \"progressbar\" }, properties: { \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuenow\": \"current\", \"style.width\": \"responsive ? \\\"\\\" : _getDiameter() + \\\"px\\\"\", \"style.height\": \"_getElementHeight()\", \"style.padding-bottom\": \"_getPaddingBottom()\", \"class.responsive\": \"responsive\" } }, viewQueries: [{ propertyName: \"path\", first: true, predicate: [\"path\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.viewBox]=\\\"_getViewBox()\\\">\\n  <circle\\n    fill=\\\"none\\\"\\n    [attr.cx]=\\\"radius\\\"\\n    [attr.cy]=\\\"radius\\\"\\n    [attr.r]=\\\"radius - stroke / 2\\\"\\n    [style.stroke]=\\\"resolveColor(background)\\\"\\n    [style.stroke-width]=\\\"stroke\\\"/>\\n\\n  <path\\n    #path\\n    fill=\\\"none\\\"\\n    [style.stroke-width]=\\\"stroke\\\"\\n    [style.stroke]=\\\"resolveColor(color)\\\"\\n    [attr.transform]=\\\"getPathTransform()\\\"/>\\n</svg>\\n\", styles: [\":host{display:block;position:relative;overflow:hidden}:host(.responsive){width:100%;padding-bottom:100%}:host(.responsive)>svg{position:absolute;width:100%;height:100%;top:0;left:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'round-progress', changeDetection: ChangeDetectionStrategy.OnPush, host: {\r\n                        role: 'progressbar',\r\n                        '[attr.aria-valuemin]': '0',\r\n                        '[attr.aria-valuemax]': 'max',\r\n                        '[attr.aria-valuenow]': 'current',\r\n                        '[style.width]': 'responsive ? \"\" : _getDiameter() + \"px\"',\r\n                        '[style.height]': '_getElementHeight()',\r\n                        '[style.padding-bottom]': '_getPaddingBottom()',\r\n                        '[class.responsive]': 'responsive',\r\n                    }, template: \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" [attr.viewBox]=\\\"_getViewBox()\\\">\\n  <circle\\n    fill=\\\"none\\\"\\n    [attr.cx]=\\\"radius\\\"\\n    [attr.cy]=\\\"radius\\\"\\n    [attr.r]=\\\"radius - stroke / 2\\\"\\n    [style.stroke]=\\\"resolveColor(background)\\\"\\n    [style.stroke-width]=\\\"stroke\\\"/>\\n\\n  <path\\n    #path\\n    fill=\\\"none\\\"\\n    [style.stroke-width]=\\\"stroke\\\"\\n    [style.stroke]=\\\"resolveColor(color)\\\"\\n    [attr.transform]=\\\"getPathTransform()\\\"/>\\n</svg>\\n\", styles: [\":host{display:block;position:relative;overflow:hidden}:host(.responsive){width:100%;padding-bottom:100%}:host(.responsive)>svg{position:absolute;width:100%;height:100%;top:0;left:0}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: RoundProgressService }, { type: RoundProgressEase }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [ROUND_PROGRESS_DEFAULTS]\r\n                }] }, { type: i0.NgZone }]; }, propDecorators: { path: [{\r\n                type: ViewChild,\r\n                args: ['path']\r\n            }], current: [{\r\n                type: Input\r\n            }], max: [{\r\n                type: Input\r\n            }], radius: [{\r\n                type: Input\r\n            }], animation: [{\r\n                type: Input\r\n            }], animationDelay: [{\r\n                type: Input\r\n            }], duration: [{\r\n                type: Input\r\n            }], stroke: [{\r\n                type: Input\r\n            }], color: [{\r\n                type: Input\r\n            }], background: [{\r\n                type: Input\r\n            }], responsive: [{\r\n                type: Input\r\n            }], clockwise: [{\r\n                type: Input\r\n            }], semicircle: [{\r\n                type: Input\r\n            }], rounded: [{\r\n                type: Input\r\n            }], onRender: [{\r\n                type: Output\r\n            }] } });\n\nclass RoundProgressModule {\r\n}\r\nRoundProgressModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nRoundProgressModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressModule, declarations: [RoundProgressComponent], exports: [RoundProgressComponent] });\r\nRoundProgressModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressModule, providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: RoundProgressModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [RoundProgressComponent],\r\n                    exports: [RoundProgressComponent],\r\n                    providers: [ROUND_PROGRESS_DEFAULTS_PROVIDER],\r\n                }]\r\n        }] });\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ROUND_PROGRESS_DEFAULTS, ROUND_PROGRESS_DEFAULTS_PROVIDER, RoundProgressComponent, RoundProgressEase, RoundProgressModule, RoundProgressService, RoundProgressModule as RoundprogressModule };\n//# sourceMappingURL=angular-svg-round-progressbar.mjs.map\n"]},"metadata":{},"sourceType":"module"}