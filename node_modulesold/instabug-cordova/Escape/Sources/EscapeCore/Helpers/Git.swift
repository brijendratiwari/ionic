//
//  Github.swift
//  Escape
//
//  Created by Aly Ezz on 10/8/19.
//

import Foundation
import SwiftCLI
import SwiftShell
import FileUtils
import SynchronousNetworking

class Git {

    static func fetch(platform: String, repositoryName: RepositoryName) {
        let repoPath = Constants.cacheDirectoryPathFor(platform: platform)
        
        if Path.exists("\(repoPath).git") {
            pull(repoPath: repoPath)
        } else {
            let options = platform == Constants.platforms.iOS ? "--depth 1" : "--depth 1 --branch \(XamarinConstants.androidBranch)"
            clone(repoName: repositoryName, cloneOptions: options)
        }
    }
    
    static func pull(repoPath: String) {
        Logger.print("Pulling latest changes at \(repoPath)")
        main.currentdirectory = repoPath
        do {
            try "".runAndPrint(bash: "/usr/bin/git pull")
        } catch {
            Logger.printFatalError("An error occurred while pulling changes at \(repoPath)")
            exit(1)
        }
    }
    
    static func clone(repoName: RepositoryName, cloneOptions: String) {
        let cacheDirectoryPath = Constants.cacheDirectoryPath
        Logger.print("Cloning \(repoName.rawValue) repo into \(cacheDirectoryPath)\(repoName.rawValue)")
        
        main.currentdirectory = cacheDirectoryPath
        do {
            try "".runAndPrint(bash: "/usr/bin/git clone https://github.com/Instabug/\(repoName.rawValue).git " + cloneOptions)
            Logger.printSuccess("Completed fetching \(repoName.rawValue) into \(cacheDirectoryPath)")
        } catch {
            Logger.printFatalError("An error occurred while fetching \(repoName.rawValue) into \(cacheDirectoryPath)")
            exit(1)
        }
    }
    
    static func checkout(branchName: String) throws {
        try "".runAndPrint(bash: "/usr/bin/git checkout -b \(branchName)")
    }
    
    static func addAll() throws {
        try "".runAndPrint(bash: "/usr/bin/git add .")
    }
    
    static func commit(message: String) throws {
        try "".runAndPrint(bash: "/usr/bin/git commit -m \" \(message) \"")
    }
    
    static func push(origin: String) throws {
        try "".runAndPrint(bash: "/usr/bin/git push origin \(origin)")
    }

}
