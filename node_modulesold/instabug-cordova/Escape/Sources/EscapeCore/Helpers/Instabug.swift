//
//  Github.swift
//  Escape
//
//  Created by Aly Ezz on 10/8/19.
//

import Foundation
import SwiftCLI
import SwiftShell
import FileUtils
import SynchronousNetworking

class Instabug {
    
    enum InstabugError: Error {
        case markdownToHTMLFailed
        case publishfailed
    }
    
    static let token = ProcessInfo.processInfo.environment["DASHBOARD_TOKEN"]!
   
    /**
     Updates the changelog on the dashboard
     */
    static func publishToDashboard(repoAt repository: RepositoryName, versionFrom versionPath: VersionFrom, forTargetOS targetOs: TargetOS, withVersionNumber versionNumber: String?) throws {
        let version: String = versionNumber ?? Helpers.getVersion(versionFrom: versionPath, omitPrefix: true)
        
        let changeLog = Helpers.getChangelog()
        
        // Releases as bullet points seperated by line breaks
        let markdownChangelog = changeLog.joined(separator: "\n")
        
        // Converting markdown to HTML for dashboard changelog
        guard let dashboardChangelogs = markdownChangelog.markdownToHTML else {
            throw InstabugError.markdownToHTMLFailed
        }
        let dashChangelog = String(dashboardChangelogs.filter { !"\n".contains($0) })
        var dashboardChangelog = ""
        for char in dashChangelog {
            if (char == "\"") {
                dashboardChangelog += "\\"
            }
            dashboardChangelog += String(char)
        }
        
        // Getting today's date to be published on the dashboard
        let date = Date()
        let formatter = DateFormatter()
        formatter.dateFormat = "MMM dd yyyy"
        let today = formatter.string(from: date)
        
        let networking = SynchronousNetworking(baseUrl: URL(string: "https://api.instabug.com/api/internal/")!)
        let changeLogJson: [String : Any] = ["version": version, "release_date": today, "target_os": targetOs.rawValue, "sdk_changes": dashboardChangelog] as [String : Any]
        
        let parameters: [String : Any] = ["token": token, "change_log": changeLogJson, "sdk_remote_url": "\(Constants.githubBaseRepo)/\(repository.rawValue)", "sample_app_remote_url": "\(Constants.githubBaseRepo)/\(repository.rawValue)/tree/master"]
        
        let headers = ["Content-Type": "application/json"]
        let networkResponse = networking.postSynchronously(path: "change_logs", parameters: parameters, headers: headers)
        if (networkResponse.error != nil || !(networkResponse.response!.statusCode == 201 || networkResponse.response!.statusCode == 200)) {
            print(networkResponse)
            throw InstabugError.publishfailed
        }
    }
}
