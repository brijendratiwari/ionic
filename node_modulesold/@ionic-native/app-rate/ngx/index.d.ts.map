{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nexport declare enum AppRateReviewTypeIos {\n    /**\n     * Write review directly in your application (iOS 10.3+), limited to 3 prompts per year.\n     * Will fallback to 'AppStoreReview' for other iOS versions\n     */\n    InAppReview = \"InAppReview\",\n    /**\n     * Open the store within the app. Use this option as an alternative to inAppReview to avoid the rate action from doing nothing\n     */\n    AppStoreReview = \"AppStoreReview\",\n    /**\n     * Open the store using the openUrl preference (defaults to InAppBrowser). Be advised that WKWebView might not open the app store links\n     */\n    InAppBrowser = \"InAppBrowser\"\n}\nexport declare enum AppRateReviewTypeAndroid {\n    /**\n     * Write review directly in your application. Will fallback to InAppBrowser if not available\n     */\n    InAppReview = \"InAppReview\",\n    /**\n     *  Open the store using the openUrl preference (defaults to InAppBrowser)\n     */\n    InAppBrowser = \"InAppBrowser\"\n}\nexport declare enum AppRatePromptType {\n    /**\n     * Prompt asking to rate the app.\n     */\n    AppRatingPrompt = \"AppRatingPrompt\",\n    /**\n     * Prompt asking to rate the app within the store.\n     */\n    StoreRatingPrompt = \"StoreRatingPrompt\",\n    /**\n     * Prompt asking to give feedback.\n     */\n    FeedbackPrompt = \"FeedbackPrompt\"\n}\nexport interface AppRatePreferences {\n    /**\n     * Custom BCP 47 language tag\n     */\n    useLanguage?: string;\n    /**\n     * Custom application title\n     */\n    displayAppName?: string;\n    /**\n     * Show dialog again when application version will be updated. Defaults to `true`\n     */\n    promptAgainForEachNewVersion?: boolean;\n    /**\n     * count of runs of application before dialog will be displayed. Defaults to `3`\n     */\n    usesUntilPrompt?: number;\n    reviewType?: {\n        /**\n         * the type of review display to show the user on iOS\n         * Default: AppStoreReview\n         */\n        ios?: AppRateReviewTypeIos;\n        /**\n         * the type of review display to show the user on Android\n         * Default: InAppBrowser\n         */\n        android?: AppRateReviewTypeAndroid;\n    };\n    /**\n     * Simple Mode to display the rate dialog directly and bypass negative feedback filtering flow\n     */\n    simpleMode?: boolean;\n    /**\n     * Disabling would skip displaying a rate dialog if in app review is set and available. Defaults to `true`\n     */\n    showPromptForInAppReview?: boolean;\n    /**\n     * Custom locale object\n     */\n    customLocale?: AppRateCustomLocale;\n    /**\n     * Callbacks for events\n     */\n    callbacks?: AppRateCallbacks;\n    /**\n     * App Store URLS\n     */\n    storeAppURL?: AppUrls;\n    /**\n     * Open URL function\n     */\n    openUrl?: (url: string) => void;\n}\nexport interface AppRateCustomLocale {\n    /** Title */\n    title?: string;\n    /** Message */\n    message?: string;\n    /** Cancel button label */\n    cancelButtonLabel?: string;\n    /** Later button label */\n    laterButtonLabel?: string;\n    /** Rate button label */\n    rateButtonLabel?: string;\n    /** Yes button label */\n    yesButtonLabel?: string;\n    /** No button label */\n    noButtonLabel?: string;\n    /** App rate prompt title */\n    appRatePromptTitle?: string;\n    /** Feedback prompt title */\n    feedbackPromptTitle?: string;\n    /** Feedback prompt message */\n    appRatePromptMessage?: string;\n    /** Feedback prompt message */\n    feedbackPromptMessage?: string;\n}\nexport interface AppRateLocales {\n    addLocale(localeObject: AppRateCustomLocale): AppRateCustomLocale;\n    getLocale(language: string, applicationTitle?: string, customLocale?: AppRateCustomLocale): AppRateCustomLocale;\n    getLocalesNames(): {\n        [prop: string]: AppRateCustomLocale;\n    };\n}\nexport interface AppRateCallbacks {\n    /**\n     * call back function. called when user clicked on rate-dialog buttons\n     */\n    onButtonClicked?: (buttonIndex: number, buttonLabel: string, promptType: AppRatePromptType) => void;\n    /**\n     * call back function. called when rate-dialog showing\n     */\n    onRateDialogShow?: (rateCallback: (buttonIndex: number) => void) => void;\n    /**\n     * call back function. called when user clicked on negative feedback\n     */\n    handleNegativeFeedback?: () => void;\n    done?: () => void;\n}\nexport interface AppUrls {\n    /**\n     * application id in AppStore\n     */\n    ios?: string;\n    /**\n     * application URL in GooglePlay\n     */\n    android?: string;\n    /**\n     * application URL in Windows Store\n     */\n    windows?: string;\n    /**\n     * application URL in AppWorld\n     */\n    blackberry?: string;\n    /**\n     * application URL in WindowsStore\n     */\n    windows8?: string;\n}\n/**\n * @name App Rate\n * @premier app-rate\n * @description\n * The AppRate plugin makes it easy to prompt the user to rate your app, either now, later, or never.\n *\n * Requires Cordova plugin: cordova-plugin-apprate. For more info, please see the [AppRate plugin docs](https://github.com/pushandplay/cordova-plugin-apprate).\n *\n * @usage\n * ```typescript\n * import { AppRate } from '@ionic-native/app-rate/ngx';\n *\n * constructor(private appRate: AppRate) { }\n *\n * ...\n * // set certain preferences\n * this.appRate.preferences.storeAppURL = {\n *   ios: '<app_id>',\n *   android: 'market://details?id=<package_name>',\n *   windows: 'ms-windows-store://review/?ProductId=<store_id>'\n * }\n *\n * this.appRate.promptForRating(true);\n *\n * // or, override the whole preferences object\n * this.appRate.preferences = {\n *   usesUntilPrompt: 3,\n *   storeAppURL: {\n *    ios: '<app_id>',\n *    android: 'market://details?id=<package_name>',\n *    windows: 'ms-windows-store://review/?ProductId=<store_id>'\n *   }\n * }\n *\n * this.appRate.promptForRating(false);\n * ```\n *\n * @interfaces\n * AppRatePreferences\n * AppUrls\n * AppRateCallbacks\n * AppRateCustomLocal\n *\n */\nexport declare class AppRate extends IonicNativePlugin {\n    /**\n     * Configure various settings for the Rating View.\n     * See table below for options\n     */\n    preferences: AppRatePreferences;\n    /**\n     * Manager custom locales\n     */\n    locales: AppRateLocales;\n    /**\n     * Set preferences\n     * @return void\n     */\n    setPreferences(pref: AppRatePreferences): void;\n    /**\n     * Get preferences\n     * @return AppRatePreferences\n     */\n    getPreferences(): AppRatePreferences;\n    /**\n     * Prompts the user for rating\n     * @param {boolean} immediately  Show the rating prompt immediately.\n     */\n    promptForRating(immediately?: boolean): void;\n    /**\n     * Immediately send the user to the app store rating page\n     */\n    navigateToAppStore(): void;\n}\n"]}